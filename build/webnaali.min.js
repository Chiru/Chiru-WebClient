'use strict';var THREE=THREE||{REVISION:"56dev"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(a,b){var a=a||{},c;for(c in b)a[c]="object"===typeof b[c]?THREE.extend(a[c],b[c]):b[c];return a};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;
THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;
THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;
THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;
THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.extend(THREE.Color.prototype,{r:1,g:1,b:1,set:function(a){switch(typeof a){case "number":this.setHex(a);break;case "string":this.setStyle(a)}},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,
this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a))return a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a),
this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;
this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^
255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},getHSV:function(a){var b=this.r,c=this.g,d=this.b,e=Math.max(Math.max(b,c),d),f=Math.min(Math.min(b,c),d);if(f===e)f=b=0;else{var g=e-f,f=g/e,b=(b===e?(c-d)/g:c===e?2+(d-b)/g:4+(b-c)/g)/6;0>b&&(b+=1);1<b&&(b-=1)}void 0===a&&(a={h:0,s:0,v:0});a.h=b;a.s=f;a.v=e;return a},add:function(a){this.r+=a.r;this.g+=
a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}});
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.extend(THREE.Quaternion.prototype,{set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h-f*g*e,this.w=c*
d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},
setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(i-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(i-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+i)/c,this.z=0.25*c);return this},inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,k=b.w;this.x=c*k+f*g+d*i-e*h;this.y=d*k+f*h+e*g-c*i;this.z=e*k+f*i+c*h-d*g;this.w=f*k-c*g-d*h-e*i;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this.x,d=this.y,e=this.z,
f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(0.001>Math.abs(i))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},equals:function(a){return a.x===this.x&&a.y===
this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}});THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.extend(THREE.Vector2.prototype,{set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==
b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},
subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a):this.set(0,0);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},negate:function(){return this.multiplyScalar(-1)},
dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*
b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}});THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.extend(THREE.Vector3.prototype,{set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);
this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,a=a.w,h=a*b+f*d-g*c,i=a*c+g*b-e*d,k=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+i*-g-k*-f;this.y=i*a+b*-f+k*-e-h*-g;this.z=k*a+b*-g+h*-f-i*-e;return this},applyEuler:function(){var a=new THREE.Quaternion;return function(b,c){var d=a.setFromEuler(b,c);this.applyQuaternion(d);return this}}(),applyAxisAngle:function(){var a=
new THREE.Quaternion;return function(b,c){var d=a.setFromAxisAngle(b,c);this.applyQuaternion(d);return this}}(),divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,
b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){this.x=
a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,
-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],k=d[9],l=d[2],n=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(n,i),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(g,d),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-l,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(n)),0.99999>Math.abs(n)?(this.y=Math.atan2(-l,d),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,
e))):"ZYX"===b?(this.y=Math.asin(-c(l)),0.99999>Math.abs(l)?(this.x=Math.atan2(n,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,i),this.y=Math.atan2(-l,e)):(this.x=0,this.y=Math.atan2(g,d))):"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(n,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,
-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):
"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],
a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}});THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.extend(THREE.Vector4.prototype,{set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;
case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,
b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<
a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},
length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(i-b)){if(0.1>
Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(i+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;i=(i+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=i/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-i)/a;this.y=(f-
c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}});THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.extend(THREE.Box2.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);
this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);
return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/
(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);
return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}});THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.extend(THREE.Box3.prototype,{set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;
return function(b,c){var d=a.copy(c).multiplyScalar(0.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},
size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=
this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,
this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},transform:function(){var a=[new THREE.Vector3,new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,
this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}});
THREE.Matrix3=function(a,b,c,d,e,f,g,h,i){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==i?i:1)};
THREE.extend(THREE.Matrix3.prototype,{set:function(a,b,c,d,e,f,g,h,i){var k=this.elements;k[0]=a;k[3]=b;k[6]=c;k[1]=d;k[4]=e;k[7]=f;k[2]=g;k[5]=h;k[8]=i;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},multiplyVector3Array:function(){var a=
new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],a=a[8];return b*f*a-b*g*i-c*e*a+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;
d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var a,
b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}});
THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,k,l,n,m,s,q,r){var p=this.elements=new Float32Array(16);p[0]=void 0!==a?a:1;p[4]=b||0;p[8]=c||0;p[12]=d||0;p[1]=e||0;p[5]=void 0!==f?f:1;p[9]=g||0;p[13]=h||0;p[2]=i||0;p[6]=k||0;p[10]=void 0!==l?l:1;p[14]=n||0;p[3]=m||0;p[7]=s||0;p[11]=q||0;p[15]=void 0!==r?r:1};
THREE.extend(THREE.Matrix4.prototype,{set:function(a,b,c,d,e,f,g,h,i,k,l,n,m,s,q,r){var p=this.elements;p[0]=a;p[4]=b;p[8]=c;p[12]=d;p[1]=e;p[5]=f;p[9]=g;p[13]=h;p[2]=i;p[6]=k;p[10]=l;p[14]=n;p[3]=m;p[7]=s;p[11]=q;p[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},setRotationFromEuler:function(a,b){var c=this.elements,
d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*i,l=g*f,n=d*i,m=d*f;c[0]=h*i;c[4]=-h*f;c[8]=e;c[1]=l+n*e;c[5]=k-m*e;c[9]=-d*h;c[2]=m-k*e;c[6]=n+l*e;c[10]=g*h}else"YXZ"===b?(k=h*i,l=h*f,n=e*i,m=e*f,c[0]=k+m*d,c[4]=n*d-l,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=l*d-n,c[6]=m+k*d,c[10]=g*h):"ZXY"===b?(k=h*i,l=h*f,n=e*i,m=e*f,c[0]=k-m*d,c[4]=-g*f,c[8]=n+l*d,c[1]=l+n*d,c[5]=g*i,c[9]=m-k*d,c[2]=-g*e,c[6]=d,c[10]=g*h):
"ZYX"===b?(k=g*i,l=g*f,n=d*i,m=d*f,c[0]=h*i,c[4]=n*e-l,c[8]=k*e+m,c[1]=h*f,c[5]=m*e+k,c[9]=l*e-n,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,l=g*e,n=d*h,m=d*e,c[0]=h*i,c[4]=m-k*f,c[8]=n*f+l,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=l*f+n,c[10]=k-m*f):"XZY"===b&&(k=g*h,l=g*e,n=d*h,m=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=k*f+m,c[5]=g*i,c[9]=l*f-n,c[2]=n*f-l,c[6]=d*i,c[10]=m*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,k=c*h,
c=c*i,l=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;b[0]=1-(l+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+l);return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;
g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],k=c[1],l=c[5],n=c[9],m=c[13],s=c[2],q=c[6],r=c[10],p=c[14],t=c[3],v=c[7],u=c[11],c=c[15],w=d[0],E=d[4],G=d[8],C=d[12],z=d[1],K=d[5],I=d[9],
H=d[13],P=d[2],B=d[6],S=d[10],A=d[14],J=d[3],O=d[7],ba=d[11],d=d[15];e[0]=f*w+g*z+h*P+i*J;e[4]=f*E+g*K+h*B+i*O;e[8]=f*G+g*I+h*S+i*ba;e[12]=f*C+g*H+h*A+i*d;e[1]=k*w+l*z+n*P+m*J;e[5]=k*E+l*K+n*B+m*O;e[9]=k*G+l*I+n*S+m*ba;e[13]=k*C+l*H+n*A+m*d;e[2]=s*w+q*z+r*P+p*J;e[6]=s*E+q*K+r*B+p*O;e[10]=s*G+q*I+r*S+p*ba;e[14]=s*C+q*H+r*A+p*d;e[3]=t*w+v*z+u*P+c*J;e[7]=t*E+v*K+u*B+c*O;e[11]=t*G+v*I+u*S+c*ba;e[15]=t*C+v*H+u*A+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,
b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=
c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],k=a[2],l=a[6],n=a[10],m=a[14];return a[3]*(+e*h*l-d*i*l-e*g*n+c*i*n+d*g*m-c*h*m)+a[7]*
(+b*h*m-b*i*n+e*f*n-d*f*m+d*i*k-e*h*k)+a[11]*(+b*i*l-b*g*m-e*f*l+c*f*m+e*g*k-c*i*k)+a[15]*(-d*g*k-b*h*l+b*g*n+d*f*l-c*f*n+c*h*k)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=
b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=
a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=new THREE.Vector3;return function(){var b=this.elements;return a.set(b[0],b[1],b[2])}}(),getColumnY:function(){var a=new THREE.Vector3;return function(){var b=this.elements;return a.set(b[4],b[5],b[6])}}(),getColumnZ:function(){var a=new THREE.Vector3;return function(){var b=this.elements;return a.set(b[8],b[9],b[10])}}(),getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],k=d[5],l=d[9],n=d[13],
m=d[2],s=d[6],q=d[10],r=d[14],p=d[3],t=d[7],v=d[11],u=d[15];c[0]=l*r*t-n*q*t+n*s*v-k*r*v-l*s*u+k*q*u;c[4]=h*q*t-g*r*t-h*s*v+f*r*v+g*s*u-f*q*u;c[8]=g*n*t-h*l*t+h*k*v-f*n*v-g*k*u+f*l*u;c[12]=h*l*s-g*n*s-h*k*q+f*n*q+g*k*r-f*l*r;c[1]=n*q*p-l*r*p-n*m*v+i*r*v+l*m*u-i*q*u;c[5]=g*r*p-h*q*p+h*m*v-e*r*v-g*m*u+e*q*u;c[9]=h*l*p-g*n*p-h*i*v+e*n*v+g*i*u-e*l*u;c[13]=g*n*m-h*l*m+h*i*q-e*n*q-g*i*r+e*l*r;c[2]=k*r*p-n*s*p+n*m*t-i*r*t-k*m*u+i*s*u;c[6]=h*s*p-f*r*p-h*m*t+e*r*t+f*m*u-e*s*u;c[10]=f*n*p-h*k*p+h*i*t-e*n*t-
f*i*u+e*k*u;c[14]=h*k*m-f*n*m-h*i*s+e*n*s+f*i*r-e*k*r;c[3]=l*s*p-k*q*p-l*m*t+i*q*t+k*m*v-i*s*v;c[7]=f*q*p-g*s*p+g*m*t-e*q*t-f*m*v+e*s*v;c[11]=g*k*p-f*l*p-g*i*t+e*l*t+f*i*v-e*k*v;c[15]=f*l*m-g*k*m+g*i*s-e*l*s-f*i*q+e*k*q;c=d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},compose:function(){var a=
new THREE.Matrix4,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements;a.identity();a.setRotationFromQuaternion(d);b.makeScale(e.x,e.y,e.z);this.multiplyMatrices(a,b);f[12]=c.x;f[13]=c.y;f[14]=c.z;return this}}(),decompose:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Matrix4;return function(e,f,g){var h=this.elements;a.set(h[0],h[1],h[2]);b.set(h[4],h[5],h[6]);c.set(h[8],h[9],h[10]);e=e instanceof THREE.Vector3?e:new THREE.Vector3;f=f instanceof
THREE.Quaternion?f:new THREE.Quaternion;g=g instanceof THREE.Vector3?g:new THREE.Vector3;g.x=a.length();g.y=b.length();g.z=c.length();e.x=h[12];e.y=h[13];e.z=h[14];d.copy(this);d.elements[0]/=g.x;d.elements[1]/=g.x;d.elements[2]/=g.x;d.elements[4]/=g.y;d.elements[5]/=g.y;d.elements[6]/=g.y;d.elements[8]/=g.z;d.elements[9]/=g.z;d.elements[10]/=g.z;f.setFromRotationMatrix(d);return[e,f,g]}}(),extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},
extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,b=b.elements,d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=
b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],k=b[11],l=Math.cos(a),a=Math.sin(a);b[4]=l*c+a*g;b[5]=l*d+a*h;b[6]=l*e+a*i;b[7]=l*f+a*k;b[8]=l*g-a*c;b[9]=l*h-a*d;b[10]=l*i-a*e;b[11]=l*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],k=b[11],l=Math.cos(a),a=Math.sin(a);b[0]=l*c-a*g;b[1]=l*d-a*h;b[2]=l*e-a*i;b[3]=l*f-a*k;b[8]=l*g+a*c;b[9]=l*h+a*d;b[10]=l*i+a*
e;b[11]=l*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],k=b[7],l=Math.cos(a),a=Math.sin(a);b[0]=l*c+a*g;b[1]=l*d+a*h;b[2]=l*e+a*i;b[3]=l*f+a*k;b[4]=l*g-a*c;b[5]=l*h-a*d;b[6]=l*i-a*e;b[7]=l*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,g=Math.sqrt(d*
d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,k=Math.cos(b),l=Math.sin(b),n=1-k,m=d*e*n,s=d*f*n,n=e*f*n,d=d*l,q=e*l,l=f*l,f=g+(1-g)*k,g=m+l,e=s-q,m=m-l,h=h+(1-h)*k,l=n+d,s=s+q,n=n-d,i=i+(1-i)*k,k=c[0],d=c[1],q=c[2],r=c[3],p=c[4],t=c[5],v=c[6],u=c[7],w=c[8],E=c[9],G=c[10],C=c[11];c[0]=f*k+g*p+e*w;c[1]=f*d+g*t+e*E;c[2]=f*q+g*v+e*G;c[3]=f*r+g*u+e*C;c[4]=m*k+h*p+l*w;c[5]=m*d+h*t+l*E;c[6]=m*q+h*v+l*G;c[7]=m*r+h*u+l*C;c[8]=s*k+n*p+i*w;c[9]=s*d+n*t+i*E;c[10]=s*q+n*v+i*G;c[11]=s*r+n*u+i*C;return this},scale:function(a){var b=
this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,
0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,k=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,k*g+c,k*h-d*f,0,i*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,
0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*a)),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,k=f-e;g[0]=2/h;g[4]=0;g[8]=
0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}});THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.extend(THREE.Ray.prototype,{set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=
c.dot(this.direction);return c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){return 0!=a.normal.dot(this.direction)||0==a.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(a){var b=
a.normal.dot(this.direction);if(0==b){if(0==a.distanceToPoint(this.origin))return 0}else return-(this.origin.dot(a.normal)+a.constant)/b},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return void 0===c?void 0:this.at(c,b)},transform:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}});
THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.extend(THREE.Sphere.prototype,{set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromCenterAndPoints:function(a,b){for(var c=0,d=0,e=b.length;d<e;d++)var f=a.distanceToSquared(b[d]),c=Math.max(c,f);this.center=a;this.radius=Math.sqrt(c);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-
this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},transform:function(a){this.center.applyMatrix4(a);
this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}});THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.extend(THREE.Frustum.prototype,{set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],k=c[7],l=c[8],n=c[9],m=c[10],s=c[11],q=c[12],r=c[13],p=c[14],c=c[15];b[0].setComponents(f-a,k-g,s-l,c-q).normalize();b[1].setComponents(f+
a,k+g,s+l,c+q).normalize();b[2].setComponents(f+d,k+h,s+n,c+r).normalize();b[3].setComponents(f-d,k-h,s-n,c-r).normalize();b[4].setComponents(f-e,k-i,s-m,c-p).normalize();b[5].setComponents(f+e,k+i,s+m,c+p).normalize();return this},intersectsObject:function(a){for(var b=a.matrixWorld,c=this.planes,d=b.getPosition(),a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),b=0;6>b;b++)if(c[b].distanceToPoint(d)<a)return!1;return!0},intersectsSphere:function(a){for(var b=this.planes,c=a.center,a=-a.radius,
d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}});THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.extend(THREE.Plane.prototype,{set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,c);return this}}(),
copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a,b){var c=this.distanceToPoint(a),d=this.distanceToPoint(b);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var a=new THREE.Vector3;return function(b,c,d){var d=d||new THREE.Vector3,c=a.subVectors(c,b),e=this.normal.dot(c);if(0==e){if(0==this.distanceToPoint(b))return d.copy(b)}else return e=-(b.dot(this.normal)+this.constant)/e,0>e||1<e?void 0:d.copy(c).multiplyScalar(e).add(b)}}(),
coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){var d=d||(new THREE.Matrix3).getInverse(c).transpose(),e=a.copy(this.normal).applyMatrix3(d),f=this.coplanarPoint(b);f.applyMatrix4(c);this.setFromNormalAndCoplanarPoint(e,f);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}});
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*
a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,k,l,n,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];l=this.points[c[1]];n=this.points[c[2]];m=this.points[c[3]];h=g*g;i=g*h;d.x=b(k.x,l.x,n.x,m.x,g,h,i);d.y=b(k.y,l.y,n.y,m.y,g,h,i);d.z=b(k.z,l.z,n.z,m.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,k=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=k.chunks[b]-k.chunks[b-1];g=Math.ceil(a*c/k.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);var d=a.dot(a),e=a.dot(b),f=a.dot(c),i=b.dot(b),g=b.dot(c),k=d*i-e*e,h=h||new THREE.Vector3;if(0==k)return h.set(-2,-1,-1);k=1/k;i=(i*f-e*g)*k;d=(d*g-e*f)*k;return h.set(1-i-d,d,i)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.extend(THREE.Triangle.prototype,{constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return 0.5*a.cross(b).length()}}(),
midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&
a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}});THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c){b.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,b)}}};
(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);0<this.ray.direction.length()&&this.ray.direction.normalize();this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,e=new a.Vector3,f=new a.Matrix4,g=function(a,b){return a.distance-b.distance},h=function(g,h,i){if(g instanceof a.Particle){h=h.ray.distanceToPoint(g.matrixWorld.getPosition());if(h>g.scale.x)return i;i.push({distance:h,point:g.position,face:null,object:g})}else if(g instanceof a.Mesh){b.set(g.matrixWorld.getPosition(),
g.geometry.boundingSphere.radius*g.matrixWorld.getMaxScaleOnAxis());if(!h.ray.isIntersectionSphere(b))return i;var m=g.geometry,s=m.vertices,q=g.material instanceof a.MeshFaceMaterial,r=!0===q?g.material.materials:null,p=g.material.side,t,v,u,w=h.precision;g.matrixRotationWorld.extractRotation(g.matrixWorld);f.getInverse(g.matrixWorld);c.copy(h.ray).transform(f);for(var E=0,G=m.faces.length;E<G;E++){var C=m.faces[E],p=!0===q?r[C.materialIndex]:g.material;if(void 0!==p){d.setFromNormalAndCoplanarPoint(C.normal,
s[C.a]);var z=c.distanceToPlane(d);if(!(Math.abs(z)<w)&&!(0>z)){p=p.side;if(p!==a.DoubleSide&&(t=c.direction.dot(d.normal),!(p===a.FrontSide?0>t:0<t)))continue;if(!(z<h.near||z>h.far)){e=c.at(z,e);if(C instanceof a.Face3){if(p=s[C.a],t=s[C.b],v=s[C.c],!a.Triangle.containsPoint(e,p,t,v))continue}else if(C instanceof a.Face4){if(p=s[C.a],t=s[C.b],v=s[C.c],u=s[C.d],!a.Triangle.containsPoint(e,p,t,u)&&!a.Triangle.containsPoint(e,t,v,u))continue}else throw Error("face type not supported");i.push({distance:z,
point:h.ray.at(z),face:C,faceIndex:E,object:g})}}}}}},i=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)h(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b);0<this.ray.direction.length()&&this.ray.direction.normalize()};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&i(a,this,c);h(a,this,c);c.sort(g);return c};a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)h(a[d],
this,c),!0===b&&i(a[d],this,c);c.sort(g);return c}})(THREE);
THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.add(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());return a}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;
THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===n){var a=new THREE.RenderableVertex;l.push(a);n++;k++;return a}return l[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var e,f,g=[],h=0,i,k,l=[],n=0,m,s,q=[],r=0,p,t=[],v=0,u,w,E=[],G=0,C,z,K=[],I=0,H={objects:[],sprites:[],lights:[],elements:[]},P=new THREE.Vector3,B=new THREE.Vector4,S=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),A=new THREE.Box3,J=Array(3),O=Array(4),ba=new THREE.Matrix4,ka=new THREE.Matrix4,za,ra=new THREE.Matrix4,M=new THREE.Matrix3,ca=new THREE.Matrix3,pa=new THREE.Vector3,Z=new THREE.Frustum,L=new THREE.Vector4,qa=new THREE.Vector4;
this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);ka.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(ka)};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);ka.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse);return a.applyProjection(ka)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,
c)};this.projectScene=function(g,h,n,Da){var Y=!1,ja,na,ma,X,la,ta,ua,xa,Ga,Ta,sa,Ma,Ea;z=w=p=s=0;H.elements.length=0;g.updateMatrixWorld();void 0===h.parent&&h.updateMatrixWorld();ba.copy(h.matrixWorldInverse.getInverse(h.matrixWorld));ka.multiplyMatrices(h.projectionMatrix,ba);ca.getInverse(ba);ca.transpose();Z.setFromMatrix(ka);f=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var ya=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof
THREE.Light)H.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===Z.intersectsObject(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(P.copy(f.matrixWorld.getPosition()),P.applyProjection(ka),e.z=P.z),H.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(P.copy(f.matrixWorld.getPosition()),P.applyProjection(ka),e.z=P.z),H.sprites.push(e)):(e=a(),e.object=
f,null!==f.renderDepth?e.z=f.renderDepth:(P.copy(f.matrixWorld.getPosition()),P.applyProjection(ka),e.z=P.z),H.objects.push(e));ya(f)}}};ya(g);!0===n&&H.objects.sort(c);g=0;for(n=H.objects.length;g<n;g++)if(xa=H.objects[g].object,za=xa.matrixWorld,k=0,xa instanceof THREE.Mesh){Ga=xa.geometry;ma=Ga.vertices;Ta=Ga.faces;Ga=Ga.faceVertexUvs;M.getInverse(za);M.transpose();Ma=xa.material instanceof THREE.MeshFaceMaterial;Ea=!0===Ma?xa.material:null;ja=0;for(na=ma.length;ja<na;ja++)i=b(),i.positionWorld.copy(ma[ja]).applyMatrix4(za),
i.positionScreen.copy(i.positionWorld).applyMatrix4(ka),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,i.positionScreen.z/=i.positionScreen.w,i.visible=!(-1>i.positionScreen.x||1<i.positionScreen.x||-1>i.positionScreen.y||1<i.positionScreen.y||-1>i.positionScreen.z||1<i.positionScreen.z);ma=0;for(ja=Ta.length;ma<ja;ma++){na=Ta[ma];var eb=!0===Ma?Ea.materials[na.materialIndex]:xa.material;if(void 0!==eb){ta=eb.side;if(na instanceof THREE.Face3)if(X=l[na.a],la=l[na.b],
ua=l[na.c],J[0]=X.positionScreen,J[1]=la.positionScreen,J[2]=ua.positionScreen,!0===X.visible||!0===la.visible||!0===ua.visible||S.isIntersectionBox(A.setFromPoints(J)))if(Y=0>(ua.positionScreen.x-X.positionScreen.x)*(la.positionScreen.y-X.positionScreen.y)-(ua.positionScreen.y-X.positionScreen.y)*(la.positionScreen.x-X.positionScreen.x),ta===THREE.DoubleSide||Y===(ta===THREE.FrontSide))s===r?(sa=new THREE.RenderableFace3,q.push(sa),r++,s++,m=sa):m=q[s++],m.v1.copy(X),m.v2.copy(la),m.v3.copy(ua);
else continue;else continue;else if(na instanceof THREE.Face4)if(X=l[na.a],la=l[na.b],ua=l[na.c],sa=l[na.d],O[0]=X.positionScreen,O[1]=la.positionScreen,O[2]=ua.positionScreen,O[3]=sa.positionScreen,!0===X.visible||!0===la.visible||!0===ua.visible||!0===sa.visible||S.isIntersectionBox(A.setFromPoints(O)))if(Y=0>(sa.positionScreen.x-X.positionScreen.x)*(la.positionScreen.y-X.positionScreen.y)-(sa.positionScreen.y-X.positionScreen.y)*(la.positionScreen.x-X.positionScreen.x)||0>(la.positionScreen.x-
ua.positionScreen.x)*(sa.positionScreen.y-ua.positionScreen.y)-(la.positionScreen.y-ua.positionScreen.y)*(sa.positionScreen.x-ua.positionScreen.x),ta===THREE.DoubleSide||Y===(ta===THREE.FrontSide)){if(p===v){var Ua=new THREE.RenderableFace4;t.push(Ua);v++;p++;m=Ua}else m=t[p++];m.v1.copy(X);m.v2.copy(la);m.v3.copy(ua);m.v4.copy(sa)}else continue;else continue;m.normalModel.copy(na.normal);!1===Y&&(ta===THREE.BackSide||ta===THREE.DoubleSide)&&m.normalModel.negate();m.normalModel.applyMatrix3(M).normalize();
m.normalModelView.copy(m.normalModel).applyMatrix3(ca);m.centroidModel.copy(na.centroid).applyMatrix4(za);ua=na.vertexNormals;X=0;for(la=ua.length;X<la;X++)sa=m.vertexNormalsModel[X],sa.copy(ua[X]),!1===Y&&(ta===THREE.BackSide||ta===THREE.DoubleSide)&&sa.negate(),sa.applyMatrix3(M).normalize(),m.vertexNormalsModelView[X].copy(sa).applyMatrix3(ca);m.vertexNormalsLength=ua.length;X=0;for(la=Ga.length;X<la;X++)if(sa=Ga[X][ma],void 0!==sa){ta=0;for(ua=sa.length;ta<ua;ta++)m.uvs[X][ta]=sa[ta]}m.color=
na.color;m.material=eb;pa.copy(m.centroidModel).applyProjection(ka);m.z=pa.z;H.elements.push(m)}}}else if(xa instanceof THREE.Line){ra.multiplyMatrices(ka,za);ma=xa.geometry.vertices;X=b();X.positionScreen.copy(ma[0]).applyMatrix4(ra);Ta=xa.type===THREE.LinePieces?2:1;ja=1;for(na=ma.length;ja<na;ja++)X=b(),X.positionScreen.copy(ma[ja]).applyMatrix4(ra),0<(ja+1)%Ta||(la=l[k-2],L.copy(X.positionScreen),qa.copy(la.positionScreen),!0===d(L,qa)&&(L.multiplyScalar(1/L.w),qa.multiplyScalar(1/qa.w),w===G?
(Ga=new THREE.RenderableLine,E.push(Ga),G++,w++,u=Ga):u=E[w++],u.v1.positionScreen.copy(L),u.v2.positionScreen.copy(qa),u.z=Math.max(L.z,qa.z),u.material=xa.material,H.elements.push(u)))}g=0;for(n=H.sprites.length;g<n;g++)xa=H.sprites[g].object,za=xa.matrixWorld,xa instanceof THREE.Particle&&(B.set(za.elements[12],za.elements[13],za.elements[14],1),B.applyMatrix4(ka),B.z/=B.w,0<B.z&&1>B.z&&(z===I?(Y=new THREE.RenderableParticle,K.push(Y),I++,z++,C=Y):C=K[z++],C.object=xa,C.x=B.x/B.w,C.y=B.y/B.w,C.z=
B.z,C.rotation=xa.rotation.z,C.scale.x=xa.scale.x*Math.abs(C.x-(B.x+h.projectionMatrix.elements[0])/(B.w+h.projectionMatrix.elements[12])),C.scale.y=xa.scale.y*Math.abs(C.y-(B.y+h.projectionMatrix.elements[5])/(B.w+h.projectionMatrix.elements[13])),C.material=xa.material,H.elements.push(C)));!0===Da&&H.elements.sort(c);return H}};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=void 0!==g?g:0;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};
THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=
this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getInverse(a).transpose(),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var f=0,g=e.vertexNormals.length;f<g;f++)e.vertexNormals[f].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],
c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.add(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=
this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.subVectors(f,e),h.subVectors(d,e),g.cross(h),g.normalize(),c.normal.copy(g)},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:d instanceof
THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var f,g,h,i=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,m=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],i.subVectors(g,f),k.subVectors(a,f),i.cross(k),e[d.a].add(i),
e[d.b].add(i),e[d.c].add(i)):d instanceof THREE.Face4&&(a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h=this.vertices[d.d],l.subVectors(h,f),k.subVectors(a,f),l.cross(k),e[d.a].add(l),e[d.b].add(l),e[d.d].add(l),n.subVectors(h,g),m.subVectors(f,g),n.cross(m),e[d.b].add(n),e[d.c].add(n),e[d.d].add(n))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal)):d instanceof THREE.Face4&&(e[d.a].add(d.normal),
e[d.b].add(d.normal),e[d.c].add(d.normal),e[d.d].add(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]=
{};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();
f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],k=g.vertexNormals[c],i.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,
b,c,d,e,f,z){h=a.vertices[b];i=a.vertices[c];k=a.vertices[d];l=g[e];n=g[f];m=g[z];s=i.x-h.x;q=k.x-h.x;r=i.y-h.y;p=k.y-h.y;t=i.z-h.z;v=k.z-h.z;u=n.x-l.x;w=m.x-l.x;E=n.y-l.y;G=m.y-l.y;C=1/(u*G-w*E);H.set((G*s-E*q)*C,(G*r-E*p)*C,(G*t-E*v)*C);P.set((u*q-w*s)*C,(u*p-w*r)*C,(u*v-w*t)*C);K[b].add(H);K[c].add(H);K[d].add(H);I[b].add(P);I[c].add(P);I[d].add(P)}var b,c,d,e,f,g,h,i,k,l,n,m,s,q,r,p,t,v,u,w,E,G,C,z,K=[],I=[],H=new THREE.Vector3,P=new THREE.Vector3,B=new THREE.Vector3,S=new THREE.Vector3,A=new THREE.Vector3;
b=0;for(c=this.vertices.length;b<c;b++)K[b]=new THREE.Vector3,I[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var J=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)A.copy(f.vertexNormals[d]),e=f[J[d]],z=K[e],B.copy(z),B.sub(A.multiplyScalar(A.dot(z))).normalize(),
S.crossVectors(f.vertexNormals[d],z),e=S.dot(I[e]),e=0>e?-1:1,f.vertexTangents[d]=new THREE.Vector4(B.x,B.y,B.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);
this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,i,k;this.__tmpVertices=void 0;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];e=[];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];
h=[a.a,a.b,a.c];d=-1;for(i=0;3>i;i++)if(h[i]==h[(i+1)%3]){e.push(f);break}}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];h=[a.a,a.b,a.c,a.d];d=-1;for(i=0;4>i;i++)h[i]==h[(i+1)%4]&&(0<=d&&e.push(f),d=i);if(0<=d){h.splice(d,1);var l=new THREE.Face3(h[0],h[1],h[2],a.normal,a.color,a.materialIndex);h=0;for(i=this.faceVertexUvs.length;h<i;h++)(k=this.faceVertexUvs[h][f])&&k.splice(d,1);a.vertexNormals&&0<a.vertexNormals.length&&(l.vertexNormals=a.vertexNormals,l.vertexNormals.splice(d,
1));a.vertexColors&&0<a.vertexColors.length&&(l.vertexColors=a.vertexColors,l.vertexColors.splice(d,1));this.faces[f]=l}}for(f=e.length-1;0<=f;f--){this.faces.splice(f,1);h=0;for(i=this.faceVertexUvs.length;h<i;h++)this.faceVertexUvs[h].splice(f,1)}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];
c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);
var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var e=this.attributes.position.array,f=this.attributes.normal.array,g,h,i,k,l,n,m=new THREE.Vector3,s=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3,p=new THREE.Vector3;if(this.attributes.index){var t=this.attributes.index.array,v=this.offsets;c=0;for(d=v.length;c<d;++c){b=v[c].start;g=v[c].count;var u=v[c].index;a=b;for(b+=g;a<b;a+=3)g=u+t[a],h=u+t[a+1],i=u+t[a+2],k=e[3*g],l=e[3*g+1],n=e[3*g+2],m.set(k,l,n),k=e[3*h],l=e[3*h+1],n=e[3*h+2],s.set(k,l,n),k=e[3*i],l=e[3*i+1],n=e[3*i+2],q.set(k,
l,n),r.subVectors(q,s),p.subVectors(m,s),r.cross(p),f[3*g]+=r.x,f[3*g+1]+=r.y,f[3*g+2]+=r.z,f[3*h]+=r.x,f[3*h+1]+=r.y,f[3*h+2]+=r.z,f[3*i]+=r.x,f[3*i+1]+=r.y,f[3*i+2]+=r.z}}else{a=0;for(b=e.length;a<b;a+=9)k=e[a],l=e[a+1],n=e[a+2],m.set(k,l,n),k=e[a+3],l=e[a+4],n=e[a+5],s.set(k,l,n),k=e[a+6],l=e[a+7],n=e[a+8],q.set(k,l,n),r.subVectors(q,s),p.subVectors(m,s),r.cross(p),f[a]=r.x,f[a+1]=r.y,f[a+2]=r.z,f[a+3]=r.x,f[a+4]=r.y,f[a+5]=r.z,f[a+6]=r.x,f[a+7]=r.y,f[a+8]=r.z}this.normalizeNormals();this.normalsNeedUpdate=
!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){za.x=d[3*a];za.y=d[3*a+1];za.z=d[3*a+2];ra.copy(za);ca=i[a];ba.copy(ca);ba.sub(za.multiplyScalar(za.dot(ca))).normalize();ka.crossVectors(ra,ca);pa=ka.dot(k[a]);M=0>pa?-1:1;h[4*a]=ba.x;h[4*a+1]=ba.y;h[4*a+2]=ba.z;h[4*a+3]=M}if(void 0===this.attributes.index||void 0===this.attributes.position||
void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,i=[],k=[],g=0;g<f;g++)i[g]=
new THREE.Vector3,k[g]=new THREE.Vector3;var l,n,m,s,q,r,p,t,v,u,w,E,G,C,z,f=new THREE.Vector3,g=new THREE.Vector3,K,I,H,P,B,S,A,J=this.offsets;H=0;for(P=J.length;H<P;++H){I=J[H].start;B=J[H].count;var O=J[H].index;K=I;for(I+=B;K<I;K+=3)B=O+b[K],S=O+b[K+1],A=O+b[K+2],l=c[3*B],n=c[3*B+1],m=c[3*B+2],s=c[3*S],q=c[3*S+1],r=c[3*S+2],p=c[3*A],t=c[3*A+1],v=c[3*A+2],u=e[2*B],w=e[2*B+1],E=e[2*S],G=e[2*S+1],C=e[2*A],z=e[2*A+1],s-=l,l=p-l,q-=n,n=t-n,r-=m,m=v-m,E-=u,u=C-u,G-=w,w=z-w,z=1/(E*w-u*G),f.set((w*s-
G*l)*z,(w*q-G*n)*z,(w*r-G*m)*z),g.set((E*l-u*s)*z,(E*n-u*q)*z,(E*m-u*r)*z),i[B].add(f),i[S].add(f),i[A].add(f),k[B].add(g),k[S].add(g),k[A].add(g)}var ba=new THREE.Vector3,ka=new THREE.Vector3,za=new THREE.Vector3,ra=new THREE.Vector3,M,ca,pa;H=0;for(P=J.length;H<P;++H){I=J[H].start;B=J[H].count;O=J[H].index;K=I;for(I+=B;K<I;K+=3)B=O+b[K],S=O+b[K+1],A=O+b[K+2],a(B),a(S),a(A)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};
THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,i,k,p){var t=f.toLowerCase().endsWith(".dds"),v=b+"/"+f;if(t){var u=THREE.ImageUtils.loadCompressedTexture(v);a[e]=u}else u=document.createElement("canvas"),a[e]=new THREE.Texture(u);a[e].sourceFile=f;h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[e].wrapT=THREE.RepeatWrapping));i&&a[e].offset.set(i[0],i[1]);k&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},
void 0!==f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]&&(a[e].wrapT=f[k[1]]));p&&(a[e].anisotropy=p);if(!t){var w=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);w.image.width=a;w.image.height=b;w.image.getContext("2d").drawImage(this,0,0,a,b)}else w.image=this;w.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=v}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",i={color:15658734,opacity:1,
map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(i.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)i.transparent=a.transparent;void 0!==a.depthTest&&(i.depthTest=a.depthTest);void 0!==a.depthWrite&&(i.depthWrite=a.depthWrite);void 0!==a.visible&&(i.visible=a.visible);void 0!==a.flipSided&&(i.side=THREE.BackSide);
void 0!==a.doubleSided&&(i.side=THREE.DoubleSide);void 0!==a.wireframe&&(i.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?i.vertexColors=THREE.FaceColors:a.vertexColors&&(i.vertexColors=THREE.VertexColors));a.colorDiffuse?i.color=f(a.colorDiffuse):a.DbgColor&&(i.color=a.DbgColor);a.colorSpecular&&(i.specular=f(a.colorSpecular));a.colorAmbient&&(i.ambient=f(a.colorAmbient));a.transparency&&(i.opacity=a.transparency);a.specularCoef&&(i.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(i,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(i.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=i.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),i.map&&(k.tDiffuse.value=i.map,k.enableDiffuse.value=!0),i.specularMap&&(k.tSpecular.value=i.specularMap,k.enableSpecular.value=!0),i.lightMap&&(k.tAO.value=i.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(i.color),
k.uSpecularColor.value.setHex(i.specular),k.uAmbientColor.value.setHex(i.ambient),k.uShininess.value=i.shininess,void 0!==i.opacity&&(k.uOpacity.value=i.opacity),h=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0}),i.transparent&&(h.transparent=!0)):h=new THREE[h](i);void 0!==a.DbgName&&(h.name=a.DbgName);return h}};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.withCredentials=this.withCredentials;f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1,f,g,h,i,k,l,n,m,s,q,r,p,t,v,u,w=a.faces;q=a.vertices;var E=a.normals,G=a.colors,C=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&C++;for(f=0;f<C;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];i=0;for(k=q.length;i<k;)l=new THREE.Vector3,l.x=q[i++]*e,l.y=q[i++]*e,l.z=q[i++]*e,d.vertices.push(l);i=0;for(k=w.length;i<k;){q=w[i++];l=q&1;h=q&2;f=q&4;g=q&8;m=q&16;n=q&32;r=q&64;q&=128;l?(p=new THREE.Face4,
p.a=w[i++],p.b=w[i++],p.c=w[i++],p.d=w[i++],l=4):(p=new THREE.Face3,p.a=w[i++],p.b=w[i++],p.c=w[i++],l=3);h&&(h=w[i++],p.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<C;f++)t=a.uvs[f],s=w[i++],u=t[2*s],s=t[2*s+1],d.faceUvs[f][h]=new THREE.Vector2(u,s);if(g)for(f=0;f<C;f++){t=a.uvs[f];v=[];for(g=0;g<l;g++)s=w[i++],u=t[2*s],s=t[2*s+1],v[g]=new THREE.Vector2(u,s);d.faceVertexUvs[f][h]=v}m&&(m=3*w[i++],g=new THREE.Vector3,g.x=E[m++],g.y=E[m++],g.z=E[m],p.normal=g);if(n)for(f=0;f<l;f++)m=3*w[i++],g=
new THREE.Vector3,g.x=E[m++],g.y=E[m++],g.z=E[m],p.vertexNormals.push(g);r&&(n=w[i++],n=new THREE.Color(G[n]),p.color=n);if(q)for(f=0;f<l;f++)n=w[i++],n=new THREE.Color(G[n]),p.vertexColors.push(n);d.faces.push(p)}if(a.skinWeights){i=0;for(k=a.skinWeights.length;i<k;i+=2)w=a.skinWeights[i],E=a.skinWeights[i+1],d.skinWeights.push(new THREE.Vector4(w,E,0,0))}if(a.skinIndices){i=0;for(k=a.skinIndices.length;i<k;i+=2)w=a.skinIndices[i],E=a.skinIndices[i+1],d.skinIndices.push(new THREE.Vector4(w,E,0,0))}d.bones=
a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){i=0;for(k=a.morphTargets.length;i<k;i++){d.morphTargets[i]={};d.morphTargets[i].name=a.morphTargets[i].name;d.morphTargets[i].vertices=[];G=d.morphTargets[i].vertices;C=a.morphTargets[i].vertices;w=0;for(E=C.length;w<E;w+=3)q=new THREE.Vector3,q.x=C[w]*e,q.y=C[w+1]*e,q.z=C[w+2]*e,G.push(q)}}if(void 0!==a.morphColors){i=0;for(k=a.morphColors.length;i<k;i++){d.morphColors[i]={};d.morphColors[i].name=a.morphColors[i].name;d.morphColors[i].colors=
[];E=d.morphColors[i].colors;G=a.morphColors[i].colors;e=0;for(w=G.length;e<w;e+=3)C=new THREE.Color(16755200),C.setRGB(G[e],G[e+1],G[e+2]),E.push(C)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};
THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:n+"/"+a}function e(){f(z.scene,I.objects)}function f(a,b){var c,e,g,i,k,n,r;for(r in b)if(void 0===z.objects[r]){var p=b[r],w=null;if(p.type&&p.type in l.hierarchyHandlerMap){if(void 0===p.loading){e={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};g={};for(var A in p)A in e||(g[A]=p[A]);s=z.materials[p.material];p.loading=
!0;e=l.hierarchyHandlerMap[p.type].loaderObject;e.options?e.load(d(p.url,I.urlBaseType),h(r,a,s,p)):e.load(d(p.url,I.urlBaseType),h(r,a,s,p),g)}}else if(void 0!==p.geometry){if(m=z.geometries[p.geometry]){w=!1;s=z.materials[p.material];w=s instanceof THREE.ShaderMaterial;g=p.position;i=p.rotation;k=p.scale;c=p.matrix;n=p.quaternion;p.material||(s=new THREE.MeshFaceMaterial(z.face_materials[p.geometry]));s instanceof THREE.MeshFaceMaterial&&0===s.materials.length&&(s=new THREE.MeshFaceMaterial(z.face_materials[p.geometry]));
if(s instanceof THREE.MeshFaceMaterial)for(e=0;e<s.materials.length;e++)w=w||s.materials[e]instanceof THREE.ShaderMaterial;w&&m.computeTangents();p.skin?w=new THREE.SkinnedMesh(m,s):p.morph?(w=new THREE.MorphAnimMesh(m,s),void 0!==p.duration&&(w.duration=p.duration),void 0!==p.time&&(w.time=p.time),void 0!==p.mirroredLoop&&(w.mirroredLoop=p.mirroredLoop),s.morphNormals&&m.computeMorphNormals()):w=new THREE.Mesh(m,s);w.name=r;c?(w.matrixAutoUpdate=!1,w.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],
c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(w.position.set(g[0],g[1],g[2]),n?(w.quaternion.set(n[0],n[1],n[2],n[3]),w.useQuaternion=!0):w.rotation.set(i[0],i[1],i[2]),w.scale.set(k[0],k[1],k[2]));w.visible=p.visible;w.castShadow=p.castShadow;w.receiveShadow=p.receiveShadow;a.add(w);z.objects[r]=w}}else"DirectionalLight"===p.type||"PointLight"===p.type||"AmbientLight"===p.type?(v=void 0!==p.color?p.color:16777215,u=void 0!==p.intensity?p.intensity:1,"DirectionalLight"===p.type?(g=p.direction,
t=new THREE.DirectionalLight(v,u),t.position.set(g[0],g[1],g[2]),p.target&&(K.push({object:t,targetName:p.target}),t.target=null)):"PointLight"===p.type?(g=p.position,e=p.distance,t=new THREE.PointLight(v,u,e),t.position.set(g[0],g[1],g[2])):"AmbientLight"===p.type&&(t=new THREE.AmbientLight(v)),a.add(t),t.name=r,z.lights[r]=t,z.objects[r]=t):"PerspectiveCamera"===p.type||"OrthographicCamera"===p.type?("PerspectiveCamera"===p.type?q=new THREE.PerspectiveCamera(p.fov,p.aspect,p.near,p.far):"OrthographicCamera"===
p.type&&(q=new THREE.OrthographicCamera(p.left,p.right,p.top,p.bottom,p.near,p.far)),g=p.position,q.position.set(g[0],g[1],g[2]),a.add(q),q.name=r,z.cameras[r]=q,z.objects[r]=q):(g=p.position,i=p.rotation,k=p.scale,n=p.quaternion,w=new THREE.Object3D,w.name=r,w.position.set(g[0],g[1],g[2]),n?(w.quaternion.set(n[0],n[1],n[2],n[3]),w.useQuaternion=!0):w.rotation.set(i[0],i[1],i[2]),w.scale.set(k[0],k[1],k[2]),w.visible=void 0!==p.visible?p.visible:!1,a.add(w),z.objects[r]=w,z.empties[r]=w);if(w){if(void 0!==
p.properties)for(var B in p.properties)w.properties[B]=p.properties[B];if(void 0!==p.groups)for(e=0;e<p.groups.length;e++)g=p.groups[e],void 0===z.groups[g]&&(z.groups[g]=[]),z.groups[g].push(r);void 0!==p.children&&f(w,p.children)}}}function g(a){return function(b,c){z.geometries[a]=b;z.face_materials[a]=c;e();w-=1;l.onLoadComplete();k()}}function h(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,g=d.position,h=d.rotation,i=d.quaternion,m=d.scale;f.position.set(g[0],g[1],g[2]);
i?(f.quaternion.set(i[0],i[1],i[2],i[3]),f.useQuaternion=!0):f.rotation.set(h[0],h[1],h[2]);f.scale.set(m[0],m[1],m[2]);c&&f.traverse(function(a){a.material=c});var n=void 0!==d.visible?d.visible:!0;f.traverse(function(a){a.visible=n});b.add(f);f.name=a;z.objects[a]=f;e();w-=1;l.onLoadComplete();k()}}function i(a){return function(b,c){z.geometries[a]=b;z.face_materials[a]=c}}function k(){l.callbackProgress({totalModels:G,totalTextures:C,loadedModels:G-w,loadedTextures:C-E},z);l.onLoadProgress();if(0===
w&&0===E){for(var a=0;a<K.length;a++){var c=K[a],d=z.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,z.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(z)}}var l=this,n=THREE.Loader.prototype.extractUrlBase(c),m,s,q,r,p,t,v,u,w,E,G,C,z,K=[],I=a,H;for(H in this.geometryHandlerMap)a=this.geometryHandlerMap[H].loaderClass,this.geometryHandlerMap[H].loaderObject=new a;for(H in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[H].loaderClass,
this.hierarchyHandlerMap[H].loaderObject=new a;E=w=0;z={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(I.transform&&(H=I.transform.position,a=I.transform.rotation,c=I.transform.scale,H&&z.scene.position.set(H[0],H[1],H[2]),a&&z.scene.rotation.set(a[0],a[1],a[2]),c&&z.scene.scale.set(c[0],c[1],c[2]),H||a||c))z.scene.updateMatrix(),z.scene.updateMatrixWorld();H=function(a){return function(){E-=a;k();l.onLoadComplete()}};
for(var P in I.fogs)a=I.fogs[P],"linear"===a.type?r=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(r=new THREE.FogExp2(0,a.density)),a=a.color,r.color.setRGB(a[0],a[1],a[2]),z.fogs[P]=r;for(var B in I.geometries)r=I.geometries[B],r.type in this.geometryHandlerMap&&(w+=1,l.onLoadStart());for(var S in I.objects)r=I.objects[S],r.type&&r.type in this.hierarchyHandlerMap&&(w+=1,l.onLoadStart());G=w;for(B in I.geometries)if(r=I.geometries[B],"cube"===r.type)m=new THREE.CubeGeometry(r.width,r.height,r.depth,
r.widthSegments,r.heightSegments,r.depthSegments),z.geometries[B]=m;else if("plane"===r.type)m=new THREE.PlaneGeometry(r.width,r.height,r.widthSegments,r.heightSegments),z.geometries[B]=m;else if("sphere"===r.type)m=new THREE.SphereGeometry(r.radius,r.widthSegments,r.heightSegments),z.geometries[B]=m;else if("cylinder"===r.type)m=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),z.geometries[B]=m;else if("torus"===r.type)m=new THREE.TorusGeometry(r.radius,r.tube,r.segmentsR,
r.segmentsT),z.geometries[B]=m;else if("icosahedron"===r.type)m=new THREE.IcosahedronGeometry(r.radius,r.subdivisions),z.geometries[B]=m;else if(r.type in this.geometryHandlerMap){S={};for(p in r)"type"!==p&&"url"!==p&&(S[p]=r[p]);this.geometryHandlerMap[r.type].loaderObject.load(d(r.url,I.urlBaseType),g(B),S)}else"embedded"===r.type&&(S=I.embeds[r.id],S.metadata=I.metadata,S&&this.geometryHandlerMap.ascii.loaderObject.createModel(S,i(B),""));for(var A in I.textures)if(B=I.textures[A],B.url instanceof
Array){E+=B.url.length;for(p=0;p<B.url.length;p++)l.onLoadStart()}else E+=1,l.onLoadStart();C=E;for(A in I.textures){B=I.textures[A];void 0!==B.mapping&&void 0!==THREE[B.mapping]&&(B.mapping=new THREE[B.mapping]);if(B.url instanceof Array){S=B.url.length;r=[];for(p=0;p<S;p++)r[p]=d(B.url[p],I.urlBaseType);p=(p=r[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(r,B.mapping,H(S)):THREE.ImageUtils.loadTextureCube(r,B.mapping,H(S))}else p=B.url.toLowerCase().endsWith(".dds"),S=d(B.url,
I.urlBaseType),r=H(1),p=p?THREE.ImageUtils.loadCompressedTexture(S,B.mapping,r):THREE.ImageUtils.loadTexture(S,B.mapping,r),void 0!==THREE[B.minFilter]&&(p.minFilter=THREE[B.minFilter]),void 0!==THREE[B.magFilter]&&(p.magFilter=THREE[B.magFilter]),B.anisotropy&&(p.anisotropy=B.anisotropy),B.repeat&&(p.repeat.set(B.repeat[0],B.repeat[1]),1!==B.repeat[0]&&(p.wrapS=THREE.RepeatWrapping),1!==B.repeat[1]&&(p.wrapT=THREE.RepeatWrapping)),B.offset&&p.offset.set(B.offset[0],B.offset[1]),B.wrap&&(S={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==S[B.wrap[0]]&&(p.wrapS=S[B.wrap[0]]),void 0!==S[B.wrap[1]]&&(p.wrapT=S[B.wrap[1]]));z.textures[A]=p}var J,O;for(J in I.materials){A=I.materials[J];for(O in A.parameters)"envMap"===O||"map"===O||"lightMap"===O||"bumpMap"===O?A.parameters[O]=z.textures[A.parameters[O]]:"shading"===O?A.parameters[O]="flat"===A.parameters[O]?THREE.FlatShading:THREE.SmoothShading:"side"===O?A.parameters[O]="double"==A.parameters[O]?THREE.DoubleSide:"back"==A.parameters[O]?
THREE.BackSide:THREE.FrontSide:"blending"===O?A.parameters[O]=A.parameters[O]in THREE?THREE[A.parameters[O]]:THREE.NormalBlending:"combine"===O?A.parameters[O]=A.parameters[O]in THREE?THREE[A.parameters[O]]:THREE.MultiplyOperation:"vertexColors"===O?"face"==A.parameters[O]?A.parameters[O]=THREE.FaceColors:A.parameters[O]&&(A.parameters[O]=THREE.VertexColors):"wrapRGB"===O&&(H=A.parameters[O],A.parameters[O]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==A.parameters.opacity&&1>A.parameters.opacity&&
(A.parameters.transparent=!0);A.parameters.normalMap?(H=THREE.ShaderLib.normalmap,B=THREE.UniformsUtils.clone(H.uniforms),p=A.parameters.color,S=A.parameters.specular,r=A.parameters.ambient,P=A.parameters.shininess,B.tNormal.value=z.textures[A.parameters.normalMap],A.parameters.normalScale&&B.uNormalScale.value.set(A.parameters.normalScale[0],A.parameters.normalScale[1]),A.parameters.map&&(B.tDiffuse.value=A.parameters.map,B.enableDiffuse.value=!0),A.parameters.envMap&&(B.tCube.value=A.parameters.envMap,
B.enableReflection.value=!0,B.uReflectivity.value=A.parameters.reflectivity),A.parameters.lightMap&&(B.tAO.value=A.parameters.lightMap,B.enableAO.value=!0),A.parameters.specularMap&&(B.tSpecular.value=z.textures[A.parameters.specularMap],B.enableSpecular.value=!0),A.parameters.displacementMap&&(B.tDisplacement.value=z.textures[A.parameters.displacementMap],B.enableDisplacement.value=!0,B.uDisplacementBias.value=A.parameters.displacementBias,B.uDisplacementScale.value=A.parameters.displacementScale),
B.uDiffuseColor.value.setHex(p),B.uSpecularColor.value.setHex(S),B.uAmbientColor.value.setHex(r),B.uShininess.value=P,A.parameters.opacity&&(B.uOpacity.value=A.parameters.opacity),s=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:B,lights:!0,fog:!0})):s=new THREE[A.type](A.parameters);z.materials[J]=s}for(J in I.materials)if(A=I.materials[J],A.parameters.materials){O=[];for(p=0;p<A.parameters.materials.length;p++)O.push(z.materials[A.parameters.materials[p]]);
z.materials[J].materials=O}e();z.cameras&&I.defaults.camera&&(z.currentCamera=z.cameras[I.defaults.camera]);z.fogs&&I.defaults.fog&&(z.scene.fog=z.fogs[I.defaults.fog]);l.callbackSync(z);k()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Texture=function(a,b,c,d,e,f,g,h,i){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,k,l){THREE.Texture.call(this,null,f,g,h,i,k,d,e,l);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};
THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,k,l){THREE.Texture.call(this,null,f,g,h,i,k,d,e,l);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};
THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};
THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(a){function b(a){G!==a&&(G=u.globalAlpha=a)}function c(a){C!==a&&(a===THREE.NormalBlending?u.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?u.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(u.globalCompositeOperation="darker"),C=a)}function d(a){I!==a&&(I=u.lineWidth=a)}function e(a){H!==a&&(H=u.lineCap=a)}function f(a){P!==a&&(P=u.lineJoin=a)}function g(a){z!==a&&(z=u.strokeStyle=a)}function h(a){K!==a&&(K=u.fillStyle=a)}function i(a,
b){if(B!==a||S!==b)u.setLineDash([a,b]),B=a,S=b}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},k=this,l,n,m,s=new THREE.Projector,q=void 0!==a.canvas?a.canvas:document.createElement("canvas"),r,p,t,v,u=q.getContext("2d"),w=new THREE.Color(0),E=0,G=1,C=0,z=null,K=null,I=null,H=null,P=null,B=null,S=0,A,J,O,ba,ka=new THREE.RenderableVertex,za=new THREE.RenderableVertex,ra,M,ca,pa,Z,L,qa,rb,La,Za,Da,Y,ja=new THREE.Color,na=new THREE.Color,ma=new THREE.Color,X=new THREE.Color,la=new THREE.Color,
ta=new THREE.Color,ua=new THREE.Color,xa=new THREE.Color,Ga={},Ta={},sa,Ma,Ea,ya,eb,Ua,D,da,Ca,lb,mb=new THREE.Box2,Ha=new THREE.Box2,Ia=new THREE.Box2,Db=!1,Ab=new THREE.Color,Cb=new THREE.Color,Qa=new THREE.Color,fb=new THREE.Vector3,Nb,j,tb,Pa,qb,ub,aa=16;Nb=document.createElement("canvas");Nb.width=Nb.height=2;j=Nb.getContext("2d");j.fillStyle="rgba(0,0,0,1)";j.fillRect(0,0,2,2);tb=j.getImageData(0,0,2,2);Pa=tb.data;qb=document.createElement("canvas");qb.width=qb.height=aa;ub=qb.getContext("2d");
ub.translate(-aa/2,-aa/2);ub.scale(aa,aa);aa--;void 0===u.setLineDash&&(u.setLineDash=void 0!==u.mozDash?function(a){u.mozDash=null!==a[0]?a:null}:function(){});this.domElement=q;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(a,b){r=
a*this.devicePixelRatio;p=b*this.devicePixelRatio;t=Math.floor(r/2);v=Math.floor(p/2);q.width=r;q.height=p;q.style.width=a+"px";q.style.height=b+"px";mb.set(new THREE.Vector2(-t,-v),new THREE.Vector2(t,v));Ha.set(new THREE.Vector2(-t,-v),new THREE.Vector2(t,v));G=1;C=0;P=H=I=K=z=null};this.setClearColor=function(a,b){w.copy(a);E=void 0!==b?b:1;Ha.set(new THREE.Vector2(-t,-v),new THREE.Vector2(t,v))};this.setClearColorHex=function(a,b){w.setHex(a);E=void 0!==b?b:1;Ha.set(new THREE.Vector2(-t,-v),new THREE.Vector2(t,
v))};this.getMaxAnisotropy=function(){return 0};this.clear=function(){u.setTransform(1,0,0,-1,t,v);!1===Ha.empty()&&(Ha.intersect(mb),Ha.expandByScalar(2),1>E&&u.clearRect(Ha.min.x|0,Ha.min.y|0,Ha.max.x-Ha.min.x|0,Ha.max.y-Ha.min.y|0),0<E&&(c(THREE.NormalBlending),b(1),h("rgba("+Math.floor(255*w.r)+","+Math.floor(255*w.g)+","+Math.floor(255*w.b)+","+E+")"),u.fillRect(Ha.min.x|0,Ha.min.y|0,Ha.max.x-Ha.min.x|0,Ha.max.y-Ha.min.y|0)),Ha.makeEmpty())};this.render=function(a,p){function q(a,b,c){for(var d=
0,e=m.length;d<e;d++){var f=m[d];xa.copy(f.color);if(f instanceof THREE.DirectionalLight){var g=f.matrixWorld.getPosition().normalize(),h=b.dot(g);0>=h||(h*=f.intensity,c.add(xa.multiplyScalar(h)))}else f instanceof THREE.PointLight&&(g=f.matrixWorld.getPosition(),h=b.dot(fb.subVectors(g,a).normalize()),0>=h||(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0!=h&&(h*=f.intensity,c.add(xa.multiplyScalar(h)))))}}function r(a,d,e,f,g,h,i,j){k.info.render.vertices+=3;k.info.render.faces++;
b(j.opacity);c(j.blending);ra=a.positionScreen.x;M=a.positionScreen.y;ca=d.positionScreen.x;pa=d.positionScreen.y;Z=e.positionScreen.x;L=e.positionScreen.y;w(ra,M,ca,pa,Z,L);(j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial)&&null===j.map&&null===j.map?(ta.copy(j.color),ua.copy(j.emissive),j.vertexColors===THREE.FaceColors&&ta.multiply(i.color),!0===Db?!1===j.wireframe&&j.shading==THREE.SmoothShading&&3==i.vertexNormalsLength?(na.copy(Ab),ma.copy(Ab),X.copy(Ab),q(i.v1.positionWorld,
i.vertexNormalsModel[0],na),q(i.v2.positionWorld,i.vertexNormalsModel[1],ma),q(i.v3.positionWorld,i.vertexNormalsModel[2],X),na.multiply(ta).add(ua),ma.multiply(ta).add(ua),X.multiply(ta).add(ua),la.addColors(ma,X).multiplyScalar(0.5),Ea=E(na,ma,X,la),H(ra,M,ca,pa,Z,L,0,0,1,0,0,1,Ea)):(ja.copy(Ab),q(i.centroidModel,i.normalModel,ja),ja.multiply(ta).add(ua),!0===j.wireframe?B(ja,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ja)):!0===j.wireframe?B(j.color,j.wireframeLinewidth,j.wireframeLinecap,
j.wireframeLinejoin):C(j.color)):j instanceof THREE.MeshBasicMaterial||j instanceof THREE.MeshLambertMaterial||j instanceof THREE.MeshPhongMaterial?null!==j.map?j.map.mapping instanceof THREE.UVMapping&&(ya=i.uvs[0],G(ra,M,ca,pa,Z,L,ya[f].x,ya[f].y,ya[g].x,ya[g].y,ya[h].x,ya[h].y,j.map)):null!==j.envMap?j.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(fb.copy(i.vertexNormalsModelView[f]),eb=0.5*fb.x+0.5,Ua=0.5*fb.y+0.5,fb.copy(i.vertexNormalsModelView[g]),D=0.5*fb.x+0.5,da=0.5*fb.y+
0.5,fb.copy(i.vertexNormalsModelView[h]),Ca=0.5*fb.x+0.5,lb=0.5*fb.y+0.5,G(ra,M,ca,pa,Z,L,eb,Ua,D,da,Ca,lb,j.envMap)):(ja.copy(j.color),j.vertexColors===THREE.FaceColors&&ja.multiply(i.color),!0===j.wireframe?B(ja,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ja)):j instanceof THREE.MeshDepthMaterial?(sa=p.near,Ma=p.far,g=1-K(a.positionScreen.z*a.positionScreen.w,sa,Ma),na.setRGB(g,g,g),g=1-K(d.positionScreen.z*d.positionScreen.w,sa,Ma),ma.setRGB(g,g,g),g=1-K(e.positionScreen.z*e.positionScreen.w,
sa,Ma),X.setRGB(g,g,g),la.addColors(ma,X).multiplyScalar(0.5),Ea=E(na,ma,X,la),H(ra,M,ca,pa,Z,L,0,0,1,0,0,1,Ea)):j instanceof THREE.MeshNormalMaterial&&(j.shading==THREE.FlatShading?(d=i.normalModelView,ja.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),!0===j.wireframe?B(ja,j.wireframeLinewidth,j.wireframeLinecap,j.wireframeLinejoin):C(ja)):j.shading==THREE.SmoothShading&&(d=i.vertexNormalsModelView[f],na.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=i.vertexNormalsModelView[g],
ma.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=i.vertexNormalsModelView[h],X.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),la.addColors(ma,X).multiplyScalar(0.5),Ea=E(na,ma,X,la),H(ra,M,ca,pa,Z,L,0,0,1,0,0,1,Ea)))}function w(a,b,c,d,e,f){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(e,f);u.closePath()}function z(a,b,c,d,e,f,g,h){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(e,f);u.lineTo(g,h);u.closePath()}function B(a,b,c,h){d(b);e(c);f(h);g(a.getStyle());u.stroke();
Ia.expandByScalar(2*b)}function C(a){h(a.getStyle());u.fill()}function G(a,b,c,d,e,f,g,i,j,k,ia,l,D){if(!(D instanceof THREE.DataTexture||void 0===D.image||0==D.image.width)){if(!0===D.needsUpdate){var m=D.wrapS==THREE.RepeatWrapping,n=D.wrapT==THREE.RepeatWrapping;Ga[D.id]=u.createPattern(D.image,!0===m&&!0===n?"repeat":!0===m&&!1===n?"repeat-x":!1===m&&!0===n?"repeat-y":"no-repeat");D.needsUpdate=!1}void 0===Ga[D.id]?h("rgba(0,0,0,1)"):h(Ga[D.id]);var m=D.offset.x/D.repeat.x,n=D.offset.y/D.repeat.y,
vb=D.image.width*D.repeat.x,p=D.image.height*D.repeat.y,g=(g+m)*vb,i=(1-i+n)*p,c=c-a,d=d-b,e=e-a,f=f-b,j=(j+m)*vb-g,k=(1-k+n)*p-i,ia=(ia+m)*vb-g,l=(1-l+n)*p-i,m=j*l-ia*k;0===m?(void 0===Ta[D.id]&&(b=document.createElement("canvas"),b.width=D.image.width,b.height=D.image.height,b=b.getContext("2d"),b.drawImage(D.image,0,0),Ta[D.id]=b.getImageData(0,0,D.image.width,D.image.height).data),b=Ta[D.id],g=4*(Math.floor(g)+Math.floor(i)*D.image.width),ja.setRGB(b[g]/255,b[g+1]/255,b[g+2]/255),C(ja)):(m=1/
m,D=(l*c-k*e)*m,k=(l*d-k*f)*m,c=(j*e-ia*c)*m,d=(j*f-ia*d)*m,a=a-D*g-c*i,g=b-k*g-d*i,u.save(),u.transform(D,k,c,d,a,g),u.fill(),u.restore())}}function H(a,b,c,d,e,f,g,h,i,j,k,ia,D){var l,m;l=D.width-1;m=D.height-1;g*=l;h*=m;c-=a;d-=b;e-=a;f-=b;i=i*l-g;j=j*m-h;k=k*l-g;ia=ia*m-h;m=1/(i*ia-k*j);l=(ia*c-j*e)*m;j=(ia*d-j*f)*m;c=(i*e-k*c)*m;d=(i*f-k*d)*m;a=a-l*g-c*h;b=b-j*g-d*h;u.save();u.transform(l,j,c,d,a,b);u.clip();u.drawImage(D,0,0);u.restore()}function E(a,b,c,d){Pa[0]=255*a.r|0;Pa[1]=255*a.g|0;Pa[2]=
255*a.b|0;Pa[4]=255*b.r|0;Pa[5]=255*b.g|0;Pa[6]=255*b.b|0;Pa[8]=255*c.r|0;Pa[9]=255*c.g|0;Pa[10]=255*c.b|0;Pa[12]=255*d.r|0;Pa[13]=255*d.g|0;Pa[14]=255*d.b|0;j.putImageData(tb,0,0);ub.drawImage(Nb,0,0);return qb}function K(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function I(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===p instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===
this.autoClear&&this.clear();u.setTransform(1,0,0,-1,t,v);k.info.render.vertices=0;k.info.render.faces=0;l=s.projectScene(a,p,this.sortObjects,this.sortElements);n=l.elements;m=l.lights;Db=0<m.length;if(!0===Db){Ab.setRGB(0,0,0);Cb.setRGB(0,0,0);Qa.setRGB(0,0,0);for(var S=0,P=m.length;S<P;S++){var N=m[S],aa=N.color;N instanceof THREE.AmbientLight?Ab.add(aa):N instanceof THREE.DirectionalLight?Cb.add(aa):N instanceof THREE.PointLight&&Qa.add(aa)}}S=0;for(P=n.length;S<P;S++){var ia=n[S],N=ia.material;
if(!(void 0===N||!1===N.visible)){Ia.makeEmpty();if(ia instanceof THREE.RenderableParticle){A=ia;A.x*=t;A.y*=v;var aa=A,nb=ia;b(N.opacity);c(N.blending);var vb=void 0,Fb=void 0,Gb=void 0,Hb=void 0,uc=ia=void 0,id=void 0;N instanceof THREE.ParticleBasicMaterial?null===N.map?(Gb=nb.object.scale.x,Hb=nb.object.scale.y,Gb*=nb.scale.x*t,Hb*=nb.scale.y*v,Ia.min.set(aa.x-Gb,aa.y-Hb),Ia.max.set(aa.x+Gb,aa.y+Hb),!1!==mb.isIntersectionBox(Ia)&&(h(N.color.getStyle()),u.save(),u.translate(aa.x,aa.y),u.rotate(-nb.rotation),
u.scale(Gb,Hb),u.fillRect(-1,-1,2,2),u.restore())):(ia=N.map.image,uc=ia.width>>1,id=ia.height>>1,Gb=nb.scale.x*t,Hb=nb.scale.y*v,vb=Gb*uc,Fb=Hb*id,Ia.min.set(aa.x-vb,aa.y-Fb),Ia.max.set(aa.x+vb,aa.y+Fb),!1!==mb.isIntersectionBox(Ia)&&(u.save(),u.translate(aa.x,aa.y),u.rotate(-nb.rotation),u.scale(Gb,-Hb),u.translate(-uc,-id),u.drawImage(ia,0,0),u.restore())):N instanceof THREE.ParticleCanvasMaterial&&(vb=nb.scale.x*t,Fb=nb.scale.y*v,Ia.min.set(aa.x-vb,aa.y-Fb),Ia.max.set(aa.x+vb,aa.y+Fb),!1!==mb.isIntersectionBox(Ia)&&
(g(N.color.getStyle()),h(N.color.getStyle()),u.save(),u.translate(aa.x,aa.y),u.rotate(-nb.rotation),u.scale(vb,Fb),N.program(u),u.restore()))}else if(ia instanceof THREE.RenderableLine)A=ia.v1,J=ia.v2,A.positionScreen.x*=t,A.positionScreen.y*=v,J.positionScreen.x*=t,J.positionScreen.y*=v,Ia.setFromPoints([A.positionScreen,J.positionScreen]),!0===mb.isIntersectionBox(Ia)&&(aa=A,nb=J,b(N.opacity),c(N.blending),u.beginPath(),u.moveTo(aa.positionScreen.x,aa.positionScreen.y),u.lineTo(nb.positionScreen.x,
nb.positionScreen.y),N instanceof THREE.LineBasicMaterial?(d(N.linewidth),e(N.linecap),f(N.linejoin),g(N.color.getStyle()),i(null,null),u.stroke(),Ia.expandByScalar(2*N.linewidth)):N instanceof THREE.LineDashedMaterial&&(d(N.linewidth),e(N.linecap),f(N.linejoin),g(N.color.getStyle()),i(N.dashSize,N.gapSize),u.stroke(),Ia.expandByScalar(2*N.linewidth)));else if(ia instanceof THREE.RenderableFace3){A=ia.v1;J=ia.v2;O=ia.v3;if(-1>A.positionScreen.z||1<A.positionScreen.z)continue;if(-1>J.positionScreen.z||
1<J.positionScreen.z)continue;if(-1>O.positionScreen.z||1<O.positionScreen.z)continue;A.positionScreen.x*=t;A.positionScreen.y*=v;J.positionScreen.x*=t;J.positionScreen.y*=v;O.positionScreen.x*=t;O.positionScreen.y*=v;!0===N.overdraw&&(I(A.positionScreen,J.positionScreen),I(J.positionScreen,O.positionScreen),I(O.positionScreen,A.positionScreen));Ia.setFromPoints([A.positionScreen,J.positionScreen,O.positionScreen]);r(A,J,O,0,1,2,ia,N,a)}else if(ia instanceof THREE.RenderableFace4){A=ia.v1;J=ia.v2;
O=ia.v3;ba=ia.v4;if(-1>A.positionScreen.z||1<A.positionScreen.z)continue;if(-1>J.positionScreen.z||1<J.positionScreen.z)continue;if(-1>O.positionScreen.z||1<O.positionScreen.z)continue;if(-1>ba.positionScreen.z||1<ba.positionScreen.z)continue;A.positionScreen.x*=t;A.positionScreen.y*=v;J.positionScreen.x*=t;J.positionScreen.y*=v;O.positionScreen.x*=t;O.positionScreen.y*=v;ba.positionScreen.x*=t;ba.positionScreen.y*=v;ka.positionScreen.copy(J.positionScreen);za.positionScreen.copy(ba.positionScreen);
!0===N.overdraw&&(I(A.positionScreen,J.positionScreen),I(J.positionScreen,ba.positionScreen),I(ba.positionScreen,A.positionScreen),I(O.positionScreen,ka.positionScreen),I(O.positionScreen,za.positionScreen));Ia.setFromPoints([A.positionScreen,J.positionScreen,O.positionScreen,ba.positionScreen]);aa=A;nb=J;vb=O;Fb=ba;Gb=ka;Hb=za;uc=a;k.info.render.vertices+=4;k.info.render.faces++;b(N.opacity);c(N.blending);void 0!==N.map&&null!==N.map||void 0!==N.envMap&&null!==N.envMap?(r(aa,nb,Fb,0,1,3,ia,N,uc),
r(Gb,vb,Hb,1,2,3,ia,N,uc)):(ra=aa.positionScreen.x,M=aa.positionScreen.y,ca=nb.positionScreen.x,pa=nb.positionScreen.y,Z=vb.positionScreen.x,L=vb.positionScreen.y,qa=Fb.positionScreen.x,rb=Fb.positionScreen.y,La=Gb.positionScreen.x,Za=Gb.positionScreen.y,Da=Hb.positionScreen.x,Y=Hb.positionScreen.y,N instanceof THREE.MeshLambertMaterial||N instanceof THREE.MeshPhongMaterial?(ta.copy(N.color),ua.copy(N.emissive),N.vertexColors===THREE.FaceColors&&ta.multiply(ia.color),!0===Db?!1===N.wireframe&&N.shading==
THREE.SmoothShading&&4==ia.vertexNormalsLength?(na.copy(Ab),ma.copy(Ab),X.copy(Ab),la.copy(Ab),q(ia.v1.positionWorld,ia.vertexNormalsModel[0],na),q(ia.v2.positionWorld,ia.vertexNormalsModel[1],ma),q(ia.v4.positionWorld,ia.vertexNormalsModel[3],X),q(ia.v3.positionWorld,ia.vertexNormalsModel[2],la),na.multiply(ta).add(ua),ma.multiply(ta).add(ua),X.multiply(ta).add(ua),la.multiply(ta).add(ua),Ea=E(na,ma,X,la),w(ra,M,ca,pa,qa,rb),H(ra,M,ca,pa,qa,rb,0,0,1,0,0,1,Ea),w(La,Za,Z,L,Da,Y),H(La,Za,Z,L,Da,Y,1,
0,1,1,0,1,Ea)):(ja.copy(Ab),q(ia.centroidModel,ia.normalModel,ja),ja.multiply(ta).add(ua),z(ra,M,ca,pa,Z,L,qa,rb),!0===N.wireframe?B(ja,N.wireframeLinewidth,N.wireframeLinecap,N.wireframeLinejoin):C(ja)):(ja.addColors(ta,ua),z(ra,M,ca,pa,Z,L,qa,rb),!0===N.wireframe?B(ja,N.wireframeLinewidth,N.wireframeLinecap,N.wireframeLinejoin):C(ja))):N instanceof THREE.MeshBasicMaterial?(ja.copy(N.color),N.vertexColors===THREE.FaceColors&&ja.multiply(ia.color),z(ra,M,ca,pa,Z,L,qa,rb),!0===N.wireframe?B(ja,N.wireframeLinewidth,
N.wireframeLinecap,N.wireframeLinejoin):C(ja)):N instanceof THREE.MeshNormalMaterial?(aa=void 0,N.shading==THREE.FlatShading?(aa=ia.normalModelView,ja.setRGB(aa.x,aa.y,aa.z).multiplyScalar(0.5).addScalar(0.5),z(ra,M,ca,pa,Z,L,qa,rb),!0===N.wireframe?B(ja,N.wireframeLinewidth,N.wireframeLinecap,N.wireframeLinejoin):C(ja)):N.shading==THREE.SmoothShading&&(aa=ia.vertexNormalsModelView[0],na.setRGB(aa.x,aa.y,aa.z).multiplyScalar(0.5).addScalar(0.5),aa=ia.vertexNormalsModelView[1],ma.setRGB(aa.x,aa.y,
aa.z).multiplyScalar(0.5).addScalar(0.5),aa=ia.vertexNormalsModelView[3],X.setRGB(aa.x,aa.y,aa.z).multiplyScalar(0.5).addScalar(0.5),aa=ia.vertexNormalsModelView[2],la.setRGB(aa.x,aa.y,aa.z).multiplyScalar(0.5).addScalar(0.5),Ea=E(na,ma,X,la),w(ra,M,ca,pa,qa,rb),H(ra,M,ca,pa,qa,rb,0,0,1,0,0,1,Ea),w(La,Za,Z,L,Da,Y),H(La,Za,Z,L,Da,Y,1,0,1,1,0,1,Ea))):N instanceof THREE.MeshDepthMaterial&&(sa=p.near,Ma=p.far,na.r=na.g=na.b=1-K(aa.positionScreen.z*aa.positionScreen.w,sa,Ma),ma.r=ma.g=ma.b=1-K(nb.positionScreen.z*
nb.positionScreen.w,sa,Ma),X.r=X.g=X.b=1-K(Fb.positionScreen.z*Fb.positionScreen.w,sa,Ma),la.r=la.g=la.b=1-K(vb.positionScreen.z*vb.positionScreen.w,sa,Ma),Ea=E(na,ma,X,la),w(ra,M,ca,pa,qa,rb),H(ra,M,ca,pa,qa,rb,0,0,1,0,0,1,Ea),w(La,Za,Z,L,Da,Y),H(La,Za,Z,L,Da,Y,1,0,1,1,0,1,Ea)))}Ha.union(Ia)}}u.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},
tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},
uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)j.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?
g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=j.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,h=a.faces4,i=3*d.length+4*h.length,k=1*d.length+2*h.length,h=3*d.length+4*h.length,d=e(b,a),D=g(d),l=f(d),m=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*i);l&&(a.__normalArray=new Float32Array(3*i));c.hasTangents&&(a.__tangentArray=new Float32Array(4*i));m&&
(a.__colorArray=new Float32Array(3*i));if(D){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*i);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*i)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*i),a.__skinWeightArray=new Float32Array(4*i));a.__faceArray=new Uint16Array(3*k);a.__lineArray=new Uint16Array(2*h);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(D=a.numMorphTargets;c<
D;c++)a.__morphTargetsArrays.push(new Float32Array(3*i))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(D=a.numMorphNormals;c<D;c++)a.__morphNormalsArrays.push(new Float32Array(3*i))}a.__webglFaceCount=3*k;a.__webglLineCount=2*h;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var n in d.attributes){var k=d.attributes[n],c={},p;for(p in k)c[p]=k[p];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,h=1,"v2"===c.type?h=2:
"v3"===c.type?h=3:"v4"===c.type?h=4:"c"===c.type&&(h=3),c.size=h,c.array=new Float32Array(i*h),c.buffer=j.createBuffer(),c.buffer.belongsToAttribute=n,k.needsUpdate=!0,c.__original=k;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function f(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function g(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function h(a){var b,c,d;for(b in a.attributes)d="index"===b?j.ELEMENT_ARRAY_BUFFER:j.ARRAY_BUFFER,c=a.attributes[b],c.buffer=j.createBuffer(),j.bindBuffer(d,c.buffer),j.bufferData(d,c.array,j.STATIC_DRAW)}function i(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;a.elementsNeedUpdate&&
void 0!==e&&(j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,e.buffer),j.bufferData(j.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(j.bindBuffer(j.ARRAY_BUFFER,f.buffer),j.bufferData(j.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(j.bindBuffer(j.ARRAY_BUFFER,g.buffer),j.bufferData(j.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(j.bindBuffer(j.ARRAY_BUFFER,h.buffer),j.bufferData(j.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==i&&(j.bindBuffer(j.ARRAY_BUFFER,
i.buffer),j.bufferData(j.ARRAY_BUFFER,i.array,b));a.tangentsNeedUpdate&&void 0!==d&&(j.bindBuffer(j.ARRAY_BUFFER,d.buffer),j.bufferData(j.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function k(a){Ha[a]||(j.enableVertexAttribArray(a),Ha[a]=!0)}function l(){for(var a in Ha)Ha[a]&&(j.disableVertexAttribArray(a),Ha[a]=!1)}function n(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function m(a,b){return b[0]-a[0]}function s(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)ja=
La=null,Da=Y=la=X=sa=Ta=ta=-1,fb=!0,a[d].render(b,c,lb,mb),ja=La=null,Da=Y=la=X=sa=Ta=ta=-1,fb=!0}function q(a,b,c,d,e,f,g,h){var i,j,k,D;b?(j=a.length-1,D=b=-1):(j=0,b=a.length,D=1);for(var l=j;l!==b;l+=D)if(i=a[l],i.render){j=i.object;k=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&L.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);L.setDepthTest(i.depthTest);L.setDepthWrite(i.depthWrite);I(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}L.setMaterialFaces(i);k instanceof
THREE.BufferGeometry?L.renderBufferDirect(d,e,f,i,k,j):L.renderBuffer(d,e,f,i,k,j)}}function r(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;j<k;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&L.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);L.setDepthTest(h.depthTest);L.setDepthWrite(h.depthWrite);I(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}L.renderImmediateObject(c,d,e,h,i)}}function p(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}
function t(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function v(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function u(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function w(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function E(a,b,c,d,e){ma=0;d.needsUpdate&&(d.program&&Cc(d),L.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(L.maxMorphTargets));
var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;g!==La&&(j.useProgram(g),La=g,f=!0);d.id!==Da&&(Da=d.id,f=!0);if(f||a!==ja)j.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==ja&&(ja=a);if(d.skinning)if(dc&&e.useVertexTexture){if(null!==h.boneTexture){var k=G();j.uniform1i(h.boneTexture,k);L.setTexture(e.boneTexture,k)}}else null!==h.boneGlobalMatrices&&j.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?
(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(fb){for(var D,l=k=0,m=0,n,p,q,r=Nb,da=r.directional.colors,Ca=r.directional.positions,s=r.point.colors,t=r.point.positions,u=r.point.distances,v=r.spot.colors,w=r.spot.positions,lb=r.spot.distances,A=r.spot.directions,C=r.spot.anglesCos,H=r.spot.exponents,Ha=r.hemi.skyColors,E=r.hemi.groundColors,Ia=
r.hemi.positions,I=0,S=0,mb=0,aa=0,M=0,Db=0,P=0,Cb=0,Q=D=0,c=q=Q=0,f=b.length;c<f;c++)D=b[c],D.onlyShadow||(n=D.color,p=D.intensity,q=D.distance,D instanceof THREE.AmbientLight?D.visible&&(L.gammaInput?(k+=n.r*n.r,l+=n.g*n.g,m+=n.b*n.b):(k+=n.r,l+=n.g,m+=n.b)):D instanceof THREE.DirectionalLight?(M+=1,D.visible&&(Qa.copy(D.matrixWorld.getPosition()),Qa.sub(D.target.matrixWorld.getPosition()),Qa.normalize(),0===Qa.x&&0===Qa.y&&0===Qa.z||(D=3*I,Ca[D]=Qa.x,Ca[D+1]=Qa.y,Ca[D+2]=Qa.z,L.gammaInput?z(da,
D,n,p*p):K(da,D,n,p),I+=1))):D instanceof THREE.PointLight?(Db+=1,D.visible&&(Q=3*S,L.gammaInput?z(s,Q,n,p*p):K(s,Q,n,p),p=D.matrixWorld.getPosition(),t[Q]=p.x,t[Q+1]=p.y,t[Q+2]=p.z,u[S]=q,S+=1)):D instanceof THREE.SpotLight?(P+=1,D.visible&&(Q=3*mb,L.gammaInput?z(v,Q,n,p*p):K(v,Q,n,p),p=D.matrixWorld.getPosition(),w[Q]=p.x,w[Q+1]=p.y,w[Q+2]=p.z,lb[mb]=q,Qa.copy(p),Qa.sub(D.target.matrixWorld.getPosition()),Qa.normalize(),A[Q]=Qa.x,A[Q+1]=Qa.y,A[Q+2]=Qa.z,C[mb]=Math.cos(D.angle),H[mb]=D.exponent,
mb+=1)):D instanceof THREE.HemisphereLight&&(Cb+=1,D.visible&&(Qa.copy(D.matrixWorld.getPosition()),Qa.normalize(),0===Qa.x&&0===Qa.y&&0===Qa.z||(q=3*aa,Ia[q]=Qa.x,Ia[q+1]=Qa.y,Ia[q+2]=Qa.z,n=D.color,D=D.groundColor,L.gammaInput?(p*=p,z(Ha,q,n,p),z(E,q,D,p)):(K(Ha,q,n,p),K(E,q,D,p)),aa+=1))));c=3*I;for(f=Math.max(da.length,3*M);c<f;c++)da[c]=0;c=3*S;for(f=Math.max(s.length,3*Db);c<f;c++)s[c]=0;c=3*mb;for(f=Math.max(v.length,3*P);c<f;c++)v[c]=0;c=3*aa;for(f=Math.max(Ha.length,3*Cb);c<f;c++)Ha[c]=0;
c=3*aa;for(f=Math.max(E.length,3*Cb);c<f;c++)E[c]=0;r.directional.length=I;r.point.length=S;r.spot.length=mb;r.hemi.length=aa;r.ambient[0]=k;r.ambient[1]=l;r.ambient[2]=m;fb=!1}c=Nb;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;i.spotLightColor.value=c.spot.colors;i.spotLightPosition.value=
c.spot.positions;i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngleCos.value=c.spot.anglesCos;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=d.opacity;L.gammaInput?
i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale);d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var N;d.map?N=d.map:d.specularMap?N=d.specularMap:d.normalMap?N=d.normalMap:d.bumpMap&&(N=d.bumpMap);void 0!==N&&(c=N.offset,N=N.repeat,i.offsetRepeat.value.set(c.x,c.y,N.x,N.y));i.envMap.value=d.envMap;
i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity,i.dashSize.value=d.dashSize,i.totalSize.value=d.dashSize+d.gapSize,
i.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=O.height/2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,L.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):
d instanceof THREE.MeshLambertMaterial?(L.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&i.shadowMatrix){c=N=0;for(f=b.length;c<f;c++)if(k=
b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))i.shadowMap.value[N]=k.shadowMap,i.shadowMapSize.value[N]=k.shadowMapSize,i.shadowMatrix.value[N]=k.shadowMatrix,i.shadowDarkness.value[N]=k.shadowDarkness,i.shadowBias.value[N]=k.shadowBias,N++}b=d.uniformsList;i=0;for(N=b.length;i<N;i++)if(f=g.uniforms[b[i][1]])if(c=b[i][0],l=c.type,k=c.value,"i"===l)j.uniform1i(f,k);else if("f"===l)j.uniform1f(f,k);else if("v2"===l)j.uniform2f(f,k.x,k.y);else if("v3"===
l)j.uniform3f(f,k.x,k.y,k.z);else if("v4"===l)j.uniform4f(f,k.x,k.y,k.z,k.w);else if("c"===l)j.uniform3f(f,k.r,k.g,k.b);else if("iv1"===l)j.uniform1iv(f,k);else if("iv"===l)j.uniform3iv(f,k);else if("fv1"===l)j.uniform1fv(f,k);else if("fv"===l)j.uniform3fv(f,k);else if("v2v"===l){void 0===c._array&&(c._array=new Float32Array(2*k.length));l=0;for(m=k.length;l<m;l++)r=2*l,c._array[r]=k[l].x,c._array[r+1]=k[l].y;j.uniform2fv(f,c._array)}else if("v3v"===l){void 0===c._array&&(c._array=new Float32Array(3*
k.length));l=0;for(m=k.length;l<m;l++)r=3*l,c._array[r]=k[l].x,c._array[r+1]=k[l].y,c._array[r+2]=k[l].z;j.uniform3fv(f,c._array)}else if("v4v"===l){void 0===c._array&&(c._array=new Float32Array(4*k.length));l=0;for(m=k.length;l<m;l++)r=4*l,c._array[r]=k[l].x,c._array[r+1]=k[l].y,c._array[r+2]=k[l].z,c._array[r+3]=k[l].w;j.uniform4fv(f,c._array)}else if("m4"===l)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),j.uniformMatrix4fv(f,!1,c._array);else if("m4v"===l){void 0===
c._array&&(c._array=new Float32Array(16*k.length));l=0;for(m=k.length;l<m;l++)k[l].flattenToArrayOffset(c._array,16*l);j.uniformMatrix4fv(f,!1,c._array)}else if("t"===l){if(r=k,k=G(),j.uniform1i(f,k),r)if(r.image instanceof Array&&6===r.image.length){if(c=r,f=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=j.createTexture(),L.info.memory.textures++);j.activeTexture(j.TEXTURE0+f);j.bindTexture(j.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,
c.flipY);f=c instanceof THREE.CompressedTexture;k=[];for(l=0;6>l;l++)L.autoScaleCubemaps&&!f?(m=k,r=l,da=c.image[l],s=pc,da.width<=s&&da.height<=s||(t=Math.max(da.width,da.height),Ca=Math.floor(da.width*s/t),s=Math.floor(da.height*s/t),t=document.createElement("canvas"),t.width=Ca,t.height=s,t.getContext("2d").drawImage(da,0,0,da.width,da.height,0,0,Ca,s),da=t),m[r]=da):k[l]=c.image[l];l=k[0];m=0===(l.width&l.width-1)&&0===(l.height&l.height-1);r=J(c.format);da=J(c.type);B(j.TEXTURE_CUBE_MAP,c,m);
for(l=0;6>l;l++)if(f){s=k[l].mipmaps;t=0;for(u=s.length;t<u;t++)Ca=s[t],j.compressedTexImage2D(j.TEXTURE_CUBE_MAP_POSITIVE_X+l,t,r,Ca.width,Ca.height,0,Ca.data)}else j.texImage2D(j.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,r,r,da,k[l]);c.generateMipmaps&&m&&j.generateMipmap(j.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else j.activeTexture(j.TEXTURE0+f),j.bindTexture(j.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else r instanceof THREE.WebGLRenderTargetCube?(c=r,j.activeTexture(j.TEXTURE0+
k),j.bindTexture(j.TEXTURE_CUBE_MAP,c.__webglTexture)):L.setTexture(r,k)}else if("tv"===l){void 0===c._array&&(c._array=[]);l=0;for(m=c.value.length;l<m;l++)c._array[l]=G();j.uniform1iv(f,c._array);l=0;for(m=c.value.length;l<m;l++)r=c.value[l],k=c._array[l],r&&L.setTexture(r,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),j.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||
d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&j.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}j.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&j.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&j.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function G(){var a=ma;a>=Mb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+
Mb);ma+=1;return a}function C(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function z(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function K(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function I(a,b,c){Ma!==a&&(a?j.enable(j.POLYGON_OFFSET_FILL):j.disable(j.POLYGON_OFFSET_FILL),Ma=a);if(a&&(Ea!==b||ya!==c))j.polygonOffset(b,c),Ea=b,ya=c}function H(a){for(var a=a.split("\n"),b=
0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function P(a,b){var c;"fragment"===a?c=j.createShader(j.FRAGMENT_SHADER):"vertex"===a&&(c=j.createShader(j.VERTEX_SHADER));j.shaderSource(c,b);j.compileShader(c);return!j.getShaderParameter(c,j.COMPILE_STATUS)?(console.error(j.getShaderInfoLog(c)),console.error(H(b)),null):c}function B(a,b,c){c?(j.texParameteri(a,j.TEXTURE_WRAP_S,J(b.wrapS)),j.texParameteri(a,j.TEXTURE_WRAP_T,J(b.wrapT)),j.texParameteri(a,j.TEXTURE_MAG_FILTER,J(b.magFilter)),
j.texParameteri(a,j.TEXTURE_MIN_FILTER,J(b.minFilter))):(j.texParameteri(a,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE),j.texParameteri(a,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE),j.texParameteri(a,j.TEXTURE_MAG_FILTER,A(b.magFilter)),j.texParameteri(a,j.TEXTURE_MIN_FILTER,A(b.minFilter)));if(qb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))j.texParameterf(a,qb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Eb)),b.__oldAnisotropy=b.anisotropy}function S(a,b){j.bindRenderbuffer(j.RENDERBUFFER,a);b.depthBuffer&&
!b.stencilBuffer?(j.renderbufferStorage(j.RENDERBUFFER,j.DEPTH_COMPONENT16,b.width,b.height),j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_ATTACHMENT,j.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(j.renderbufferStorage(j.RENDERBUFFER,j.DEPTH_STENCIL,b.width,b.height),j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_STENCIL_ATTACHMENT,j.RENDERBUFFER,a)):j.renderbufferStorage(j.RENDERBUFFER,j.RGBA4,b.width,b.height)}function A(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||
a===THREE.NearestMipMapLinearFilter?j.NEAREST:j.LINEAR}function J(a){if(a===THREE.RepeatWrapping)return j.REPEAT;if(a===THREE.ClampToEdgeWrapping)return j.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return j.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return j.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return j.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return j.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return j.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return j.LINEAR_MIPMAP_NEAREST;
if(a===THREE.LinearMipMapLinearFilter)return j.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return j.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return j.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return j.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return j.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return j.BYTE;if(a===THREE.ShortType)return j.SHORT;if(a===THREE.UnsignedShortType)return j.UNSIGNED_SHORT;if(a===THREE.IntType)return j.INT;if(a===THREE.UnsignedIntType)return j.UNSIGNED_INT;
if(a===THREE.FloatType)return j.FLOAT;if(a===THREE.AlphaFormat)return j.ALPHA;if(a===THREE.RGBFormat)return j.RGB;if(a===THREE.RGBAFormat)return j.RGBA;if(a===THREE.LuminanceFormat)return j.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return j.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return j.FUNC_ADD;if(a===THREE.SubtractEquation)return j.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return j.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return j.ZERO;if(a===THREE.OneFactor)return j.ONE;if(a===
THREE.SrcColorFactor)return j.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return j.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return j.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return j.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return j.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return j.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return j.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return j.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return j.SRC_ALPHA_SATURATE;
if(void 0!==ub){if(a===THREE.RGB_S3TC_DXT1_Format)return ub.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return ub.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return ub.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return ub.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},O=void 0!==a.canvas?a.canvas:document.createElement("canvas"),ba=void 0!==a.precision?a.precision:"highp",ka=void 0!==
a.alpha?a.alpha:!0,za=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ra=void 0!==a.antialias?a.antialias:!1,M=void 0!==a.stencil?a.stencil:!0,ca=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,pa=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),Z=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=O;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateScene=
this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,
geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var L=this,qa=[],rb=0,La=null,Za=null,Da=-1,Y=null,ja=null,na=0,ma=0,X=-1,la=-1,ta=-1,ua=-1,xa=-1,Ga=-1,Ta=-1,sa=-1,Ma=null,Ea=null,ya=null,eb=null,Ua=0,D=0,da=0,Ca=0,lb=0,mb=0,Ha={},Ia=new THREE.Frustum,Db=new THREE.Matrix4,Ab=new THREE.Matrix4,Cb=new THREE.Vector3,Qa=new THREE.Vector3,fb=!0,Nb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],
positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},j,tb,Pa,qb,ub;try{if(!(j=O.getContext("experimental-webgl",{alpha:ka,premultipliedAlpha:za,antialias:ra,stencil:M,preserveDrawingBuffer:ca})))throw"Error creating WebGL context.";}catch(aa){console.error(aa)}tb=j.getExtension("OES_texture_float");Pa=j.getExtension("OES_standard_derivatives");qb=j.getExtension("EXT_texture_filter_anisotropic")||j.getExtension("MOZ_EXT_texture_filter_anisotropic")||
j.getExtension("WEBKIT_EXT_texture_filter_anisotropic");ub=j.getExtension("WEBGL_compressed_texture_s3tc")||j.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||j.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");tb||console.log("THREE.WebGLRenderer: Float textures not supported.");Pa||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");qb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");ub||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");
j.clearColor(0,0,0,1);j.clearDepth(1);j.clearStencil(0);j.enable(j.DEPTH_TEST);j.depthFunc(j.LEQUAL);j.frontFace(j.CCW);j.cullFace(j.BACK);j.enable(j.CULL_FACE);j.enable(j.BLEND);j.blendEquation(j.FUNC_ADD);j.blendFunc(j.SRC_ALPHA,j.ONE_MINUS_SRC_ALPHA);j.clearColor(pa.r,pa.g,pa.b,Z);this.context=j;var Mb=j.getParameter(j.MAX_TEXTURE_IMAGE_UNITS),jc=j.getParameter(j.MAX_VERTEX_TEXTURE_IMAGE_UNITS);j.getParameter(j.MAX_TEXTURE_SIZE);var pc=j.getParameter(j.MAX_CUBE_MAP_TEXTURE_SIZE),Eb=qb?j.getParameter(qb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):
0,cc=0<jc,dc=cc&&tb;ub&&j.getParameter(j.COMPRESSED_TEXTURE_FORMATS);var fd=j.getShaderPrecisionFormat(j.VERTEX_SHADER,j.HIGH_FLOAT),gd=j.getShaderPrecisionFormat(j.VERTEX_SHADER,j.MEDIUM_FLOAT);j.getShaderPrecisionFormat(j.VERTEX_SHADER,j.LOW_FLOAT);var hd=j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.HIGH_FLOAT),ed=j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.MEDIUM_FLOAT);j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.LOW_FLOAT);j.getShaderPrecisionFormat(j.VERTEX_SHADER,j.HIGH_INT);j.getShaderPrecisionFormat(j.VERTEX_SHADER,
j.MEDIUM_INT);j.getShaderPrecisionFormat(j.VERTEX_SHADER,j.LOW_INT);j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.HIGH_INT);j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.MEDIUM_INT);j.getShaderPrecisionFormat(j.FRAGMENT_SHADER,j.LOW_INT);var dd=0<fd.precision&&0<hd.precision,Ac=0<gd.precision&&0<ed.precision;"highp"===ba&&!dd&&(Ac?(ba="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(ba="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));
"mediump"===ba&&!Ac&&(ba="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return j};this.supportsVertexTextures=function(){return cc};this.supportsFloatTextures=function(){return tb};this.supportsStandardDerivatives=function(){return Pa};this.supportsCompressedTextureS3TC=function(){return ub};this.getMaxAnisotropy=function(){return Eb};this.getPrecision=function(){return ba};this.setSize=function(a,b){O.width=a*this.devicePixelRatio;O.height=b*this.devicePixelRatio;
O.style.width=a+"px";O.style.height=b+"px";this.setViewport(0,0,O.width,O.height)};this.setViewport=function(a,b,c,d){Ua=void 0!==a?a:0;D=void 0!==b?b:0;da=void 0!==c?c:O.width;Ca=void 0!==d?d:O.height;j.viewport(Ua,D,da,Ca)};this.setScissor=function(a,b,c,d){j.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?j.enable(j.SCISSOR_TEST):j.disable(j.SCISSOR_TEST)};this.setClearColorHex=function(a,b){pa.setHex(a);Z=b;j.clearColor(pa.r,pa.g,pa.b,Z)};this.setClearColor=function(a,b){pa.copy(a);Z=b;
j.clearColor(pa.r,pa.g,pa.b,Z)};this.getClearColor=function(){return pa};this.getClearAlpha=function(){return Z};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=j.COLOR_BUFFER_BIT;if(void 0===b||b)d|=j.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=j.STENCIL_BUFFER_BIT;j.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};
this.updateShadowMap=function(a,b){La=null;Da=Y=sa=Ta=ta=-1;fb=!0;la=X=-1;this.shadowMapPlugin.update(a,b)};var td=function(a){a=a.target;a.removeEventListener("dispose",td);a.__webglInit=void 0;void 0!==a.__webglVertexBuffer&&j.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&j.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&j.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&j.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&
j.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&j.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&j.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&j.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&j.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&j.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&j.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.geometryGroups)for(var c in a.geometryGroups){var d=
a.geometryGroups[c];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<f;e++)j.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)j.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d)}b(a);L.info.memory.geometries--},Bc=function(a){a=a.target;a.removeEventListener("dispose",Bc);a.image&&a.image.__webglTextureCube?j.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,j.deleteTexture(a.__webglTexture));
L.info.memory.textures--},Nc=function(a){a=a.target;a.removeEventListener("dispose",Nc);if(a&&a.__webglTexture)if(j.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)j.deleteFramebuffer(a.__webglFramebuffer[b]),j.deleteRenderbuffer(a.__webglRenderbuffer[b]);else j.deleteFramebuffer(a.__webglFramebuffer),j.deleteRenderbuffer(a.__webglRenderbuffer);L.info.memory.textures--},N=function(a){a=a.target;a.removeEventListener("dispose",N);Cc(a)},Cc=function(a){var b=
a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,a=0;for(c=qa.length;a<c;a++)if(d=qa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=qa.length;a<c;a++)d=qa[a],d.program!==b&&e.push(d);qa=e;j.deleteProgram(b);L.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=j.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=j.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&
(a.__webglUvBuffer=j.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=j.createBuffer());a.hasPositions&&(j.bindBuffer(j.ARRAY_BUFFER,a.__webglVertexBuffer),j.bufferData(j.ARRAY_BUFFER,a.positionArray,j.DYNAMIC_DRAW),j.enableVertexAttribArray(b.attributes.position),j.vertexAttribPointer(b.attributes.position,3,j.FLOAT,!1,0,0));if(a.hasNormals){j.bindBuffer(j.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,i,k,l,D,m,n,p=3*a.count;for(n=0;n<
p;n+=9)m=a.normalArray,d=m[n],e=m[n+1],f=m[n+2],g=m[n+3],i=m[n+4],l=m[n+5],h=m[n+6],k=m[n+7],D=m[n+8],d=(d+g+h)/3,e=(e+i+k)/3,f=(f+l+D)/3,m[n]=d,m[n+1]=e,m[n+2]=f,m[n+3]=d,m[n+4]=e,m[n+5]=f,m[n+6]=d,m[n+7]=e,m[n+8]=f}j.bufferData(j.ARRAY_BUFFER,a.normalArray,j.DYNAMIC_DRAW);j.enableVertexAttribArray(b.attributes.normal);j.vertexAttribPointer(b.attributes.normal,3,j.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(j.bindBuffer(j.ARRAY_BUFFER,a.__webglUvBuffer),j.bufferData(j.ARRAY_BUFFER,a.uvArray,j.DYNAMIC_DRAW),
j.enableVertexAttribArray(b.attributes.uv),j.vertexAttribPointer(b.attributes.uv,2,j.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(j.bindBuffer(j.ARRAY_BUFFER,a.__webglColorBuffer),j.bufferData(j.ARRAY_BUFFER,a.colorArray,j.DYNAMIC_DRAW),j.enableVertexAttribArray(b.attributes.color),j.vertexAttribPointer(b.attributes.color,3,j.FLOAT,!1,0,0));j.drawArrays(j.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=E(a,b,c,d,f),a=c.attributes,
b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==Y&&(Y=d,b=!0),b&&l(),f instanceof THREE.Mesh)if(f=e.attributes.index){d=e.offsets;1<d.length&&(b=!0);for(var c=0,g=d.length;c<g;c++){var h=d[c].index;if(b){var i=e.attributes.position,D=i.itemSize;j.bindBuffer(j.ARRAY_BUFFER,i.buffer);k(a.position);j.vertexAttribPointer(a.position,D,j.FLOAT,!1,0,4*h*D);D=e.attributes.normal;if(0<=a.normal&&D){var m=D.itemSize;j.bindBuffer(j.ARRAY_BUFFER,D.buffer);k(a.normal);j.vertexAttribPointer(a.normal,m,j.FLOAT,
!1,0,4*h*m)}D=e.attributes.uv;0<=a.uv&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.uv),j.vertexAttribPointer(a.uv,m,j.FLOAT,!1,0,4*h*m));D=e.attributes.color;0<=a.color&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.color),j.vertexAttribPointer(a.color,m,j.FLOAT,!1,0,4*h*m));D=e.attributes.tangent;0<=a.tangent&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.tangent),j.vertexAttribPointer(a.tangent,m,j.FLOAT,!1,0,4*h*m));j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,f.buffer)}j.drawElements(j.TRIANGLES,
d[c].count,j.UNSIGNED_SHORT,2*d[c].start);L.info.render.calls++;L.info.render.vertices+=d[c].count;L.info.render.faces+=d[c].count/3}}else b&&(i=e.attributes.position,D=i.itemSize,j.bindBuffer(j.ARRAY_BUFFER,i.buffer),k(a.position),j.vertexAttribPointer(a.position,D,j.FLOAT,!1,0,0),D=e.attributes.normal,0<=a.normal&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.normal),j.vertexAttribPointer(a.normal,m,j.FLOAT,!1,0,0)),D=e.attributes.uv,0<=a.uv&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,
D.buffer),k(a.uv),j.vertexAttribPointer(a.uv,m,j.FLOAT,!1,0,0)),D=e.attributes.color,0<=a.color&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.color),j.vertexAttribPointer(a.color,m,j.FLOAT,!1,0,0)),D=e.attributes.tangent,0<=a.tangent&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.tangent),j.vertexAttribPointer(a.tangent,m,j.FLOAT,!1,0,0))),j.drawArrays(j.TRIANGLES,0,i.numItems/3),L.info.render.calls++,L.info.render.vertices+=i.numItems/3,L.info.render.faces+=i.numItems/
3/3;else f instanceof THREE.ParticleSystem?b&&(i=e.attributes.position,D=i.itemSize,j.bindBuffer(j.ARRAY_BUFFER,i.buffer),k(a.position),j.vertexAttribPointer(a.position,D,j.FLOAT,!1,0,0),D=e.attributes.color,0<=a.color&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.color),j.vertexAttribPointer(a.color,m,j.FLOAT,!1,0,0)),j.drawArrays(j.POINTS,0,i.numItems/3),L.info.render.calls++,L.info.render.points+=i.numItems/3):f instanceof THREE.Line&&b&&(i=e.attributes.position,D=i.itemSize,j.bindBuffer(j.ARRAY_BUFFER,
i.buffer),k(a.position),j.vertexAttribPointer(a.position,D,j.FLOAT,!1,0,0),D=e.attributes.color,0<=a.color&&D&&(m=D.itemSize,j.bindBuffer(j.ARRAY_BUFFER,D.buffer),k(a.color),j.vertexAttribPointer(a.color,m,j.FLOAT,!1,0,0)),j.drawArrays(j.LINE_STRIP,0,i.numItems/3),L.info.render.calls++,L.info.render.points+=i.numItems)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,i,c=E(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Y&&(Y=c,a=!0);a&&l();if(!d.morphTargets&&
0<=b.position)a&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglVertexBuffer),k(b.position),j.vertexAttribPointer(b.position,3,j.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(j.bindBuffer(j.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),k(c.position),j.vertexAttribPointer(c.position,3,j.FLOAT,!1,0,0)):0<=c.position&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglVertexBuffer),k(c.position),j.vertexAttribPointer(c.position,3,j.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var h=
0;i=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;h<d.numSupportedMorphTargets&&h<i.length;)0<=c["morphTarget"+h]&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[h]]),k(c["morphTarget"+h]),j.vertexAttribPointer(c["morphTarget"+h],3,j.FLOAT,!1,0,0)),0<=c["morphNormal"+h]&&d.morphNormals&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[h]]),k(c["morphNormal"+h]),j.vertexAttribPointer(c["morphNormal"+h],3,j.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=g[i[h]],h++}else{i=
[];g=f.morphTargetInfluences;var D,n=g.length;for(D=0;D<n;D++)h=g[D],0<h&&i.push([h,D]);i.length>d.numSupportedMorphTargets?(i.sort(m),i.length=d.numSupportedMorphTargets):i.length>d.numSupportedMorphNormals?i.sort(m):0===i.length&&i.push([0,0]);for(h=0;h<d.numSupportedMorphTargets;)i[h]?(D=i[h][1],0<=c["morphTarget"+h]&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[D]),k(c["morphTarget"+h]),j.vertexAttribPointer(c["morphTarget"+h],3,j.FLOAT,!1,0,0)),0<=c["morphNormal"+h]&&d.morphNormals&&
(j.bindBuffer(j.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[D]),k(c["morphNormal"+h]),j.vertexAttribPointer(c["morphNormal"+h],3,j.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[h]=g[D]):f.__webglMorphTargetInfluences[h]=0,h++}null!==d.program.uniforms.morphTargetInfluences&&j.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(i=e.__webglCustomAttributesList.length;g<i;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&
(j.bindBuffer(j.ARRAY_BUFFER,c.buffer),k(b[c.buffer.belongsToAttribute]),j.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,j.FLOAT,!1,0,0))}0<=b.color&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglColorBuffer),k(b.color),j.vertexAttribPointer(b.color,3,j.FLOAT,!1,0,0));0<=b.normal&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglNormalBuffer),k(b.normal),j.vertexAttribPointer(b.normal,3,j.FLOAT,!1,0,0));0<=b.tangent&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglTangentBuffer),k(b.tangent),j.vertexAttribPointer(b.tangent,
4,j.FLOAT,!1,0,0));0<=b.uv&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglUVBuffer),k(b.uv),j.vertexAttribPointer(b.uv,2,j.FLOAT,!1,0,0));0<=b.uv2&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglUV2Buffer),k(b.uv2),j.vertexAttribPointer(b.uv2,2,j.FLOAT,!1,0,0));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),k(b.skinIndex),j.vertexAttribPointer(b.skinIndex,4,j.FLOAT,!1,0,0),j.bindBuffer(j.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),k(b.skinWeight),j.vertexAttribPointer(b.skinWeight,
4,j.FLOAT,!1,0,0));0<=b.lineDistance&&(j.bindBuffer(j.ARRAY_BUFFER,e.__webglLineDistanceBuffer),k(b.lineDistance),j.vertexAttribPointer(b.lineDistance,1,j.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==eb&&(j.lineWidth(d),eb=d),a&&j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),j.drawElements(j.LINES,e.__webglLineCount,j.UNSIGNED_SHORT,0)):(a&&j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),j.drawElements(j.TRIANGLES,e.__webglFaceCount,j.UNSIGNED_SHORT,
0)),L.info.render.calls++,L.info.render.vertices+=e.__webglFaceCount,L.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?j.LINE_STRIP:j.LINES,d=d.linewidth,d!==eb&&(j.lineWidth(d),eb=d),j.drawArrays(f,0,e.__webglLineCount),L.info.render.calls++):f instanceof THREE.ParticleSystem?(j.drawArrays(j.POINTS,0,e.__webglParticleCount),L.info.render.calls++,L.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(j.drawArrays(j.TRIANGLE_STRIP,0,e.__webglVertexCount),
L.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,i=a.__lights,k=a.fog;Da=-1;fb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Db.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Ia.setFromMatrix(Db);this.autoUpdateObjects&&this.initWebGLObjects(a);s(this.renderPluginsPre,
a,b);L.info.render.calls=0;L.info.render.vertices=0;L.info.render.faces=0;L.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||Ia.intersectsObject(g))){C(g,b);var D=f,l=D.buffer,m=void 0,p=m=void 0,p=D.object.material;if(p instanceof THREE.MeshFaceMaterial)m=
l.materialIndex,m=p.materials[m],m.transparent?(D.transparent=m,D.opaque=null):(D.opaque=m,D.transparent=null);else if(m=p)m.transparent?(D.transparent=m,D.opaque=null):(D.opaque=m,D.transparent=null);f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Cb.copy(g.matrixWorld.getPosition()),Cb.applyProjection(Db),f.z=Cb.z),f.id=g.id)}this.sortObjects&&h.sort(n);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(C(g,b),g=f.object.material,g.transparent?
(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),I(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),q(a.__webglObjects,!1,"",b,i,k,!0,d),r(a.__webglObjectsImmediate,"",b,i,k,!1,d)):(d=null,this.setBlending(THREE.NoBlending),q(a.__webglObjects,!0,"opaque",b,i,k,!1,d),r(a.__webglObjectsImmediate,"opaque",
b,i,k,!1,d),q(a.__webglObjects,!1,"transparent",b,i,k,!0,d),r(a.__webglObjectsImmediate,"transparent",b,i,k,!0,d));s(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(j.bindTexture(j.TEXTURE_CUBE_MAP,c.__webglTexture),j.generateMipmap(j.TEXTURE_CUBE_MAP),j.bindTexture(j.TEXTURE_CUBE_MAP,null)):(j.bindTexture(j.TEXTURE_2D,c.__webglTexture),j.generateMipmap(j.TEXTURE_2D),j.bindTexture(j.TEXTURE_2D,
null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=E(a,b,c,d,e);Y=-1;L.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,j,Ia):e.render(function(a){L.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var b=a.__objectsAdded[0],k=a,D=void 0,l=void 0,n=void 0,r=void 0;
if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,void 0!==b.geometry&&void 0===b.geometry.__webglInit&&(b.geometry.__webglInit=!0,b.geometry.addEventListener("dispose",td)),b instanceof THREE.Mesh)if(l=b.geometry,n=b.material,l instanceof THREE.Geometry){if(void 0===l.geometryGroups){var q=l,da=void 0,Ca=void 0,s=void 0,lb=void 0,z=void 0,A=void 0,B={},C=q.morphTargets.length,G=q.morphNormals.length,Ha=n instanceof THREE.MeshFaceMaterial;
q.geometryGroups={};da=0;for(Ca=q.faces.length;da<Ca;da++)s=q.faces[da],lb=Ha?s.materialIndex:0,void 0===B[lb]&&(B[lb]={hash:lb,counter:0}),A=B[lb].hash+"_"+B[lb].counter,void 0===q.geometryGroups[A]&&(q.geometryGroups[A]={faces3:[],faces4:[],materialIndex:lb,vertices:0,numMorphTargets:C,numMorphNormals:G}),z=s instanceof THREE.Face3?3:4,65535<q.geometryGroups[A].vertices+z&&(B[lb].counter+=1,A=B[lb].hash+"_"+B[lb].counter,void 0===q.geometryGroups[A]&&(q.geometryGroups[A]={faces3:[],faces4:[],materialIndex:lb,
vertices:0,numMorphTargets:C,numMorphNormals:G})),s instanceof THREE.Face3?q.geometryGroups[A].faces3.push(da):q.geometryGroups[A].faces4.push(da),q.geometryGroups[A].vertices+=z;q.geometryGroupsList=[];var H=void 0;for(H in q.geometryGroups)q.geometryGroups[H].id=na++,q.geometryGroupsList.push(q.geometryGroups[H])}for(D in l.geometryGroups)if(r=l.geometryGroups[D],!r.__webglVertexBuffer){var E=r;E.__webglVertexBuffer=j.createBuffer();E.__webglNormalBuffer=j.createBuffer();E.__webglTangentBuffer=
j.createBuffer();E.__webglColorBuffer=j.createBuffer();E.__webglUVBuffer=j.createBuffer();E.__webglUV2Buffer=j.createBuffer();E.__webglSkinIndicesBuffer=j.createBuffer();E.__webglSkinWeightsBuffer=j.createBuffer();E.__webglFaceBuffer=j.createBuffer();E.__webglLineBuffer=j.createBuffer();var J=void 0,I=void 0;if(E.numMorphTargets){E.__webglMorphTargetsBuffers=[];J=0;for(I=E.numMorphTargets;J<I;J++)E.__webglMorphTargetsBuffers.push(j.createBuffer())}if(E.numMorphNormals){E.__webglMorphNormalsBuffers=
[];J=0;for(I=E.numMorphNormals;J<I;J++)E.__webglMorphNormalsBuffers.push(j.createBuffer())}L.info.memory.geometries++;d(r,b);l.verticesNeedUpdate=!0;l.morphTargetsNeedUpdate=!0;l.elementsNeedUpdate=!0;l.uvsNeedUpdate=!0;l.normalsNeedUpdate=!0;l.tangentsNeedUpdate=!0;l.colorsNeedUpdate=!0}}else l instanceof THREE.BufferGeometry&&h(l);else if(b instanceof THREE.Ribbon){if(l=b.geometry,!l.__webglVertexBuffer){var S=l;S.__webglVertexBuffer=j.createBuffer();S.__webglColorBuffer=j.createBuffer();S.__webglNormalBuffer=
j.createBuffer();L.info.memory.geometries++;var Ia=l,mb=b,aa=Ia.vertices.length;Ia.__vertexArray=new Float32Array(3*aa);Ia.__colorArray=new Float32Array(3*aa);Ia.__normalArray=new Float32Array(3*aa);Ia.__webglVertexCount=aa;c(Ia,mb);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0;l.normalsNeedUpdate=!0}}else if(b instanceof THREE.Line){if(l=b.geometry,!l.__webglVertexBuffer)if(l instanceof THREE.Geometry){var K=l;K.__webglVertexBuffer=j.createBuffer();K.__webglColorBuffer=j.createBuffer();K.__webglLineDistanceBuffer=
j.createBuffer();L.info.memory.geometries++;var M=l,O=b,N=M.vertices.length;M.__vertexArray=new Float32Array(3*N);M.__colorArray=new Float32Array(3*N);M.__lineDistanceArray=new Float32Array(1*N);M.__webglLineCount=N;c(M,O);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0;l.lineDistancesNeedUpdate=!0}else l instanceof THREE.BufferGeometry&&h(l)}else if(b instanceof THREE.ParticleSystem&&(l=b.geometry,!l.__webglVertexBuffer))if(l instanceof THREE.Geometry){var P=l;P.__webglVertexBuffer=j.createBuffer();
P.__webglColorBuffer=j.createBuffer();L.info.memory.geometries++;var X=l,ja=b,Qa=X.vertices.length;X.__vertexArray=new Float32Array(3*Qa);X.__colorArray=new Float32Array(3*Qa);X.__sortArray=[];X.__webglParticleCount=Qa;c(X,ja);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0}else l instanceof THREE.BufferGeometry&&h(l);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(l=b.geometry,l instanceof THREE.BufferGeometry)p(k.__webglObjects,l,b);else{if(l instanceof THREE.Geometry)for(D in l.geometryGroups)r=
l.geometryGroups[D],p(k.__webglObjects,r,b)}else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?(l=b.geometry,p(k.__webglObjects,l,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?k.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?k.__webglSprites.push(b):b instanceof THREE.LensFlare&&k.__webglFlares.push(b);b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var qa=
a.__objectsRemoved[0],fb=a;qa instanceof THREE.Mesh||qa instanceof THREE.ParticleSystem||qa instanceof THREE.Ribbon||qa instanceof THREE.Line?u(fb.__webglObjects,qa):qa instanceof THREE.Sprite?w(fb.__webglSprites,qa):qa instanceof THREE.LensFlare?w(fb.__webglFlares,qa):(qa instanceof THREE.ImmediateRenderObject||qa.immediateRenderCallback)&&u(fb.__webglObjectsImmediate,qa);qa.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var ba=0,ma=a.__webglObjects.length;ba<ma;ba++){var ca=a.__webglObjects[ba].object,
Q=ca.geometry,La=void 0,tb=void 0,Z=void 0;if(ca instanceof THREE.Mesh)if(Q instanceof THREE.BufferGeometry)(Q.verticesNeedUpdate||Q.elementsNeedUpdate||Q.uvsNeedUpdate||Q.normalsNeedUpdate||Q.colorsNeedUpdate||Q.tangentsNeedUpdate)&&i(Q,j.DYNAMIC_DRAW,!Q.dynamic),Q.verticesNeedUpdate=!1,Q.elementsNeedUpdate=!1,Q.uvsNeedUpdate=!1,Q.normalsNeedUpdate=!1,Q.colorsNeedUpdate=!1,Q.tangentsNeedUpdate=!1;else{for(var Nb=0,la=Q.geometryGroupsList.length;Nb<la;Nb++)if(La=Q.geometryGroupsList[Nb],Z=e(ca,La),
Q.buffersNeedUpdate&&d(La,ca),tb=Z.attributes&&t(Z),Q.verticesNeedUpdate||Q.morphTargetsNeedUpdate||Q.elementsNeedUpdate||Q.uvsNeedUpdate||Q.normalsNeedUpdate||Q.colorsNeedUpdate||Q.tangentsNeedUpdate||tb){var Y=La,pa=ca,Pa=j.DYNAMIC_DRAW,rb=!Q.dynamic,ka=Z;if(Y.__inittedArrays){var ua=f(ka),sa=ka.vertexColors?ka.vertexColors:!1,ub=g(ka),ta=ua===THREE.SmoothShading,F=void 0,W=void 0,Da=void 0,R=void 0,ra=void 0,xa=void 0,Za=void 0,za=void 0,Mb=void 0,jc=void 0,qb=void 0,T=void 0,U=void 0,V=void 0,
wa=void 0,ya=void 0,Ga=void 0,Ea=void 0,pc=void 0,Ma=void 0,Ta=void 0,Ua=void 0,eb=void 0,Eb=void 0,Qb=void 0,Rb=void 0,cc=void 0,Sb=void 0,Tb=void 0,Ub=void 0,dc=void 0,Vb=void 0,Wb=void 0,Xb=void 0,Dc=void 0,Fa=void 0,Ac=void 0,kc=void 0,vc=void 0,wc=void 0,gb=void 0,Bc=void 0,cb=void 0,db=void 0,lc=void 0,ec=void 0,$a=0,bb=0,fc=0,gc=0,Ib=0,ob=0,Na=0,sb=0,ab=0,fa=0,oa=0,y=0,Ja=void 0,hb=Y.__vertexArray,Ec=Y.__uvArray,Fc=Y.__uv2Array,Jb=Y.__normalArray,Va=Y.__tangentArray,ib=Y.__colorArray,Wa=Y.__skinIndexArray,
Xa=Y.__skinWeightArray,jd=Y.__morphTargetsArrays,kd=Y.__morphNormalsArrays,ld=Y.__webglCustomAttributesList,x=void 0,Yb=Y.__faceArray,Bb=Y.__lineArray,wb=pa.geometry,Nc=wb.elementsNeedUpdate,Cc=wb.uvsNeedUpdate,dd=wb.normalsNeedUpdate,ed=wb.tangentsNeedUpdate,fd=wb.colorsNeedUpdate,gd=wb.morphTargetsNeedUpdate,qc=wb.vertices,Aa=Y.faces3,Ba=Y.faces4,pb=wb.faces,md=wb.faceVertexUvs[0],nd=wb.faceVertexUvs[1],rc=wb.skinIndices,mc=wb.skinWeights,nc=wb.morphTargets,Oc=wb.morphNormals;if(wb.verticesNeedUpdate){F=
0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],T=qc[R.a],U=qc[R.b],V=qc[R.c],hb[bb]=T.x,hb[bb+1]=T.y,hb[bb+2]=T.z,hb[bb+3]=U.x,hb[bb+4]=U.y,hb[bb+5]=U.z,hb[bb+6]=V.x,hb[bb+7]=V.y,hb[bb+8]=V.z,bb+=9;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],T=qc[R.a],U=qc[R.b],V=qc[R.c],wa=qc[R.d],hb[bb]=T.x,hb[bb+1]=T.y,hb[bb+2]=T.z,hb[bb+3]=U.x,hb[bb+4]=U.y,hb[bb+5]=U.z,hb[bb+6]=V.x,hb[bb+7]=V.y,hb[bb+8]=V.z,hb[bb+9]=wa.x,hb[bb+10]=wa.y,hb[bb+11]=wa.z,bb+=12;j.bindBuffer(j.ARRAY_BUFFER,Y.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,
hb,Pa)}if(gd){gb=0;for(Bc=nc.length;gb<Bc;gb++){F=oa=0;for(W=Aa.length;F<W;F++)lc=Aa[F],R=pb[lc],T=nc[gb].vertices[R.a],U=nc[gb].vertices[R.b],V=nc[gb].vertices[R.c],cb=jd[gb],cb[oa]=T.x,cb[oa+1]=T.y,cb[oa+2]=T.z,cb[oa+3]=U.x,cb[oa+4]=U.y,cb[oa+5]=U.z,cb[oa+6]=V.x,cb[oa+7]=V.y,cb[oa+8]=V.z,ka.morphNormals&&(ta?(ec=Oc[gb].vertexNormals[lc],Ma=ec.a,Ta=ec.b,Ua=ec.c):Ua=Ta=Ma=Oc[gb].faceNormals[lc],db=kd[gb],db[oa]=Ma.x,db[oa+1]=Ma.y,db[oa+2]=Ma.z,db[oa+3]=Ta.x,db[oa+4]=Ta.y,db[oa+5]=Ta.z,db[oa+6]=Ua.x,
db[oa+7]=Ua.y,db[oa+8]=Ua.z),oa+=9;F=0;for(W=Ba.length;F<W;F++)lc=Ba[F],R=pb[lc],T=nc[gb].vertices[R.a],U=nc[gb].vertices[R.b],V=nc[gb].vertices[R.c],wa=nc[gb].vertices[R.d],cb=jd[gb],cb[oa]=T.x,cb[oa+1]=T.y,cb[oa+2]=T.z,cb[oa+3]=U.x,cb[oa+4]=U.y,cb[oa+5]=U.z,cb[oa+6]=V.x,cb[oa+7]=V.y,cb[oa+8]=V.z,cb[oa+9]=wa.x,cb[oa+10]=wa.y,cb[oa+11]=wa.z,ka.morphNormals&&(ta?(ec=Oc[gb].vertexNormals[lc],Ma=ec.a,Ta=ec.b,Ua=ec.c,eb=ec.d):eb=Ua=Ta=Ma=Oc[gb].faceNormals[lc],db=kd[gb],db[oa]=Ma.x,db[oa+1]=Ma.y,db[oa+
2]=Ma.z,db[oa+3]=Ta.x,db[oa+4]=Ta.y,db[oa+5]=Ta.z,db[oa+6]=Ua.x,db[oa+7]=Ua.y,db[oa+8]=Ua.z,db[oa+9]=eb.x,db[oa+10]=eb.y,db[oa+11]=eb.z),oa+=12;j.bindBuffer(j.ARRAY_BUFFER,Y.__webglMorphTargetsBuffers[gb]);j.bufferData(j.ARRAY_BUFFER,jd[gb],Pa);ka.morphNormals&&(j.bindBuffer(j.ARRAY_BUFFER,Y.__webglMorphNormalsBuffers[gb]),j.bufferData(j.ARRAY_BUFFER,kd[gb],Pa))}}if(mc.length){F=0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],Sb=mc[R.a],Tb=mc[R.b],Ub=mc[R.c],Xa[fa]=Sb.x,Xa[fa+1]=Sb.y,Xa[fa+2]=Sb.z,Xa[fa+3]=
Sb.w,Xa[fa+4]=Tb.x,Xa[fa+5]=Tb.y,Xa[fa+6]=Tb.z,Xa[fa+7]=Tb.w,Xa[fa+8]=Ub.x,Xa[fa+9]=Ub.y,Xa[fa+10]=Ub.z,Xa[fa+11]=Ub.w,Vb=rc[R.a],Wb=rc[R.b],Xb=rc[R.c],Wa[fa]=Vb.x,Wa[fa+1]=Vb.y,Wa[fa+2]=Vb.z,Wa[fa+3]=Vb.w,Wa[fa+4]=Wb.x,Wa[fa+5]=Wb.y,Wa[fa+6]=Wb.z,Wa[fa+7]=Wb.w,Wa[fa+8]=Xb.x,Wa[fa+9]=Xb.y,Wa[fa+10]=Xb.z,Wa[fa+11]=Xb.w,fa+=12;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],Sb=mc[R.a],Tb=mc[R.b],Ub=mc[R.c],dc=mc[R.d],Xa[fa]=Sb.x,Xa[fa+1]=Sb.y,Xa[fa+2]=Sb.z,Xa[fa+3]=Sb.w,Xa[fa+4]=Tb.x,Xa[fa+5]=Tb.y,Xa[fa+6]=
Tb.z,Xa[fa+7]=Tb.w,Xa[fa+8]=Ub.x,Xa[fa+9]=Ub.y,Xa[fa+10]=Ub.z,Xa[fa+11]=Ub.w,Xa[fa+12]=dc.x,Xa[fa+13]=dc.y,Xa[fa+14]=dc.z,Xa[fa+15]=dc.w,Vb=rc[R.a],Wb=rc[R.b],Xb=rc[R.c],Dc=rc[R.d],Wa[fa]=Vb.x,Wa[fa+1]=Vb.y,Wa[fa+2]=Vb.z,Wa[fa+3]=Vb.w,Wa[fa+4]=Wb.x,Wa[fa+5]=Wb.y,Wa[fa+6]=Wb.z,Wa[fa+7]=Wb.w,Wa[fa+8]=Xb.x,Wa[fa+9]=Xb.y,Wa[fa+10]=Xb.z,Wa[fa+11]=Xb.w,Wa[fa+12]=Dc.x,Wa[fa+13]=Dc.y,Wa[fa+14]=Dc.z,Wa[fa+15]=Dc.w,fa+=16;0<fa&&(j.bindBuffer(j.ARRAY_BUFFER,Y.__webglSkinIndicesBuffer),j.bufferData(j.ARRAY_BUFFER,
Wa,Pa),j.bindBuffer(j.ARRAY_BUFFER,Y.__webglSkinWeightsBuffer),j.bufferData(j.ARRAY_BUFFER,Xa,Pa))}if(fd&&sa){F=0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],Za=R.vertexColors,za=R.color,3===Za.length&&sa===THREE.VertexColors?(Eb=Za[0],Qb=Za[1],Rb=Za[2]):Rb=Qb=Eb=za,ib[ab]=Eb.r,ib[ab+1]=Eb.g,ib[ab+2]=Eb.b,ib[ab+3]=Qb.r,ib[ab+4]=Qb.g,ib[ab+5]=Qb.b,ib[ab+6]=Rb.r,ib[ab+7]=Rb.g,ib[ab+8]=Rb.b,ab+=9;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],Za=R.vertexColors,za=R.color,4===Za.length&&sa===THREE.VertexColors?(Eb=
Za[0],Qb=Za[1],Rb=Za[2],cc=Za[3]):cc=Rb=Qb=Eb=za,ib[ab]=Eb.r,ib[ab+1]=Eb.g,ib[ab+2]=Eb.b,ib[ab+3]=Qb.r,ib[ab+4]=Qb.g,ib[ab+5]=Qb.b,ib[ab+6]=Rb.r,ib[ab+7]=Rb.g,ib[ab+8]=Rb.b,ib[ab+9]=cc.r,ib[ab+10]=cc.g,ib[ab+11]=cc.b,ab+=12;0<ab&&(j.bindBuffer(j.ARRAY_BUFFER,Y.__webglColorBuffer),j.bufferData(j.ARRAY_BUFFER,ib,Pa))}if(ed&&wb.hasTangents){F=0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],Mb=R.vertexTangents,ya=Mb[0],Ga=Mb[1],Ea=Mb[2],Va[Na]=ya.x,Va[Na+1]=ya.y,Va[Na+2]=ya.z,Va[Na+3]=ya.w,Va[Na+4]=Ga.x,Va[Na+
5]=Ga.y,Va[Na+6]=Ga.z,Va[Na+7]=Ga.w,Va[Na+8]=Ea.x,Va[Na+9]=Ea.y,Va[Na+10]=Ea.z,Va[Na+11]=Ea.w,Na+=12;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],Mb=R.vertexTangents,ya=Mb[0],Ga=Mb[1],Ea=Mb[2],pc=Mb[3],Va[Na]=ya.x,Va[Na+1]=ya.y,Va[Na+2]=ya.z,Va[Na+3]=ya.w,Va[Na+4]=Ga.x,Va[Na+5]=Ga.y,Va[Na+6]=Ga.z,Va[Na+7]=Ga.w,Va[Na+8]=Ea.x,Va[Na+9]=Ea.y,Va[Na+10]=Ea.z,Va[Na+11]=Ea.w,Va[Na+12]=pc.x,Va[Na+13]=pc.y,Va[Na+14]=pc.z,Va[Na+15]=pc.w,Na+=16;j.bindBuffer(j.ARRAY_BUFFER,Y.__webglTangentBuffer);j.bufferData(j.ARRAY_BUFFER,
Va,Pa)}if(dd&&ua){F=0;for(W=Aa.length;F<W;F++)if(R=pb[Aa[F]],ra=R.vertexNormals,xa=R.normal,3===ra.length&&ta)for(Fa=0;3>Fa;Fa++)kc=ra[Fa],Jb[ob]=kc.x,Jb[ob+1]=kc.y,Jb[ob+2]=kc.z,ob+=3;else for(Fa=0;3>Fa;Fa++)Jb[ob]=xa.x,Jb[ob+1]=xa.y,Jb[ob+2]=xa.z,ob+=3;F=0;for(W=Ba.length;F<W;F++)if(R=pb[Ba[F]],ra=R.vertexNormals,xa=R.normal,4===ra.length&&ta)for(Fa=0;4>Fa;Fa++)kc=ra[Fa],Jb[ob]=kc.x,Jb[ob+1]=kc.y,Jb[ob+2]=kc.z,ob+=3;else for(Fa=0;4>Fa;Fa++)Jb[ob]=xa.x,Jb[ob+1]=xa.y,Jb[ob+2]=xa.z,ob+=3;j.bindBuffer(j.ARRAY_BUFFER,
Y.__webglNormalBuffer);j.bufferData(j.ARRAY_BUFFER,Jb,Pa)}if(Cc&&md&&ub){F=0;for(W=Aa.length;F<W;F++)if(Da=Aa[F],jc=md[Da],void 0!==jc)for(Fa=0;3>Fa;Fa++)vc=jc[Fa],Ec[fc]=vc.x,Ec[fc+1]=vc.y,fc+=2;F=0;for(W=Ba.length;F<W;F++)if(Da=Ba[F],jc=md[Da],void 0!==jc)for(Fa=0;4>Fa;Fa++)vc=jc[Fa],Ec[fc]=vc.x,Ec[fc+1]=vc.y,fc+=2;0<fc&&(j.bindBuffer(j.ARRAY_BUFFER,Y.__webglUVBuffer),j.bufferData(j.ARRAY_BUFFER,Ec,Pa))}if(Cc&&nd&&ub){F=0;for(W=Aa.length;F<W;F++)if(Da=Aa[F],qb=nd[Da],void 0!==qb)for(Fa=0;3>Fa;Fa++)wc=
qb[Fa],Fc[gc]=wc.x,Fc[gc+1]=wc.y,gc+=2;F=0;for(W=Ba.length;F<W;F++)if(Da=Ba[F],qb=nd[Da],void 0!==qb)for(Fa=0;4>Fa;Fa++)wc=qb[Fa],Fc[gc]=wc.x,Fc[gc+1]=wc.y,gc+=2;0<gc&&(j.bindBuffer(j.ARRAY_BUFFER,Y.__webglUV2Buffer),j.bufferData(j.ARRAY_BUFFER,Fc,Pa))}if(Nc){F=0;for(W=Aa.length;F<W;F++)Yb[Ib]=$a,Yb[Ib+1]=$a+1,Yb[Ib+2]=$a+2,Ib+=3,Bb[sb]=$a,Bb[sb+1]=$a+1,Bb[sb+2]=$a,Bb[sb+3]=$a+2,Bb[sb+4]=$a+1,Bb[sb+5]=$a+2,sb+=6,$a+=3;F=0;for(W=Ba.length;F<W;F++)Yb[Ib]=$a,Yb[Ib+1]=$a+1,Yb[Ib+2]=$a+3,Yb[Ib+3]=$a+1,
Yb[Ib+4]=$a+2,Yb[Ib+5]=$a+3,Ib+=6,Bb[sb]=$a,Bb[sb+1]=$a+1,Bb[sb+2]=$a,Bb[sb+3]=$a+3,Bb[sb+4]=$a+1,Bb[sb+5]=$a+2,Bb[sb+6]=$a+2,Bb[sb+7]=$a+3,sb+=8,$a+=4;j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,Y.__webglFaceBuffer);j.bufferData(j.ELEMENT_ARRAY_BUFFER,Yb,Pa);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,Y.__webglLineBuffer);j.bufferData(j.ELEMENT_ARRAY_BUFFER,Bb,Pa)}if(ld){Fa=0;for(Ac=ld.length;Fa<Ac;Fa++)if(x=ld[Fa],x.__original.needsUpdate){y=0;if(1===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo){F=0;for(W=
Aa.length;F<W;F++)R=pb[Aa[F]],x.array[y]=x.value[R.a],x.array[y+1]=x.value[R.b],x.array[y+2]=x.value[R.c],y+=3;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],x.array[y]=x.value[R.a],x.array[y+1]=x.value[R.b],x.array[y+2]=x.value[R.c],x.array[y+3]=x.value[R.d],y+=4}else{if("faces"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)Ja=x.value[Aa[F]],x.array[y]=Ja,x.array[y+1]=Ja,x.array[y+2]=Ja,y+=3;F=0;for(W=Ba.length;F<W;F++)Ja=x.value[Ba[F]],x.array[y]=Ja,x.array[y+1]=Ja,x.array[y+2]=Ja,x.array[y+3]=Ja,y+=4}}else if(2===
x.size)if(void 0===x.boundTo||"vertices"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],T=x.value[R.a],U=x.value[R.b],V=x.value[R.c],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=U.x,x.array[y+3]=U.y,x.array[y+4]=V.x,x.array[y+5]=V.y,y+=6;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],T=x.value[R.a],U=x.value[R.b],V=x.value[R.c],wa=x.value[R.d],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=U.x,x.array[y+3]=U.y,x.array[y+4]=V.x,x.array[y+5]=V.y,x.array[y+6]=wa.x,x.array[y+7]=wa.y,y+=8}else{if("faces"===
x.boundTo){F=0;for(W=Aa.length;F<W;F++)V=U=T=Ja=x.value[Aa[F]],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=U.x,x.array[y+3]=U.y,x.array[y+4]=V.x,x.array[y+5]=V.y,y+=6;F=0;for(W=Ba.length;F<W;F++)wa=V=U=T=Ja=x.value[Ba[F]],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=U.x,x.array[y+3]=U.y,x.array[y+4]=V.x,x.array[y+5]=V.y,x.array[y+6]=wa.x,x.array[y+7]=wa.y,y+=8}}else if(3===x.size){var ea;ea="c"===x.type?["r","g","b"]:["x","y","z"];if(void 0===x.boundTo||"vertices"===x.boundTo){F=0;for(W=Aa.length;F<
W;F++)R=pb[Aa[F]],T=x.value[R.a],U=x.value[R.b],V=x.value[R.c],x.array[y]=T[ea[0]],x.array[y+1]=T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+6]=V[ea[0]],x.array[y+7]=V[ea[1]],x.array[y+8]=V[ea[2]],y+=9;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],T=x.value[R.a],U=x.value[R.b],V=x.value[R.c],wa=x.value[R.d],x.array[y]=T[ea[0]],x.array[y+1]=T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+
6]=V[ea[0]],x.array[y+7]=V[ea[1]],x.array[y+8]=V[ea[2]],x.array[y+9]=wa[ea[0]],x.array[y+10]=wa[ea[1]],x.array[y+11]=wa[ea[2]],y+=12}else if("faces"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)V=U=T=Ja=x.value[Aa[F]],x.array[y]=T[ea[0]],x.array[y+1]=T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+6]=V[ea[0]],x.array[y+7]=V[ea[1]],x.array[y+8]=V[ea[2]],y+=9;F=0;for(W=Ba.length;F<W;F++)wa=V=U=T=Ja=x.value[Ba[F]],x.array[y]=T[ea[0]],x.array[y+1]=
T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+6]=V[ea[0]],x.array[y+7]=V[ea[1]],x.array[y+8]=V[ea[2]],x.array[y+9]=wa[ea[0]],x.array[y+10]=wa[ea[1]],x.array[y+11]=wa[ea[2]],y+=12}else if("faceVertices"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)Ja=x.value[Aa[F]],T=Ja[0],U=Ja[1],V=Ja[2],x.array[y]=T[ea[0]],x.array[y+1]=T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+6]=V[ea[0]],x.array[y+
7]=V[ea[1]],x.array[y+8]=V[ea[2]],y+=9;F=0;for(W=Ba.length;F<W;F++)Ja=x.value[Ba[F]],T=Ja[0],U=Ja[1],V=Ja[2],wa=Ja[3],x.array[y]=T[ea[0]],x.array[y+1]=T[ea[1]],x.array[y+2]=T[ea[2]],x.array[y+3]=U[ea[0]],x.array[y+4]=U[ea[1]],x.array[y+5]=U[ea[2]],x.array[y+6]=V[ea[0]],x.array[y+7]=V[ea[1]],x.array[y+8]=V[ea[2]],x.array[y+9]=wa[ea[0]],x.array[y+10]=wa[ea[1]],x.array[y+11]=wa[ea[2]],y+=12}}else if(4===x.size)if(void 0===x.boundTo||"vertices"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)R=pb[Aa[F]],T=x.value[R.a],
U=x.value[R.b],V=x.value[R.c],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+8]=V.x,x.array[y+9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,y+=12;F=0;for(W=Ba.length;F<W;F++)R=pb[Ba[F]],T=x.value[R.a],U=x.value[R.b],V=x.value[R.c],wa=x.value[R.d],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+8]=V.x,x.array[y+
9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,x.array[y+12]=wa.x,x.array[y+13]=wa.y,x.array[y+14]=wa.z,x.array[y+15]=wa.w,y+=16}else if("faces"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)V=U=T=Ja=x.value[Aa[F]],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+8]=V.x,x.array[y+9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,y+=12;F=0;for(W=Ba.length;F<W;F++)wa=V=U=T=Ja=x.value[Ba[F]],x.array[y]=T.x,x.array[y+1]=T.y,
x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+8]=V.x,x.array[y+9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,x.array[y+12]=wa.x,x.array[y+13]=wa.y,x.array[y+14]=wa.z,x.array[y+15]=wa.w,y+=16}else if("faceVertices"===x.boundTo){F=0;for(W=Aa.length;F<W;F++)Ja=x.value[Aa[F]],T=Ja[0],U=Ja[1],V=Ja[2],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+
8]=V.x,x.array[y+9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,y+=12;F=0;for(W=Ba.length;F<W;F++)Ja=x.value[Ba[F]],T=Ja[0],U=Ja[1],V=Ja[2],wa=Ja[3],x.array[y]=T.x,x.array[y+1]=T.y,x.array[y+2]=T.z,x.array[y+3]=T.w,x.array[y+4]=U.x,x.array[y+5]=U.y,x.array[y+6]=U.z,x.array[y+7]=U.w,x.array[y+8]=V.x,x.array[y+9]=V.y,x.array[y+10]=V.z,x.array[y+11]=V.w,x.array[y+12]=wa.x,x.array[y+13]=wa.y,x.array[y+14]=wa.z,x.array[y+15]=wa.w,y+=16}j.bindBuffer(j.ARRAY_BUFFER,x.buffer);j.bufferData(j.ARRAY_BUFFER,x.array,
Pa)}}rb&&(delete Y.__inittedArrays,delete Y.__colorArray,delete Y.__normalArray,delete Y.__tangentArray,delete Y.__uvArray,delete Y.__uv2Array,delete Y.__faceArray,delete Y.__vertexArray,delete Y.__lineArray,delete Y.__skinIndexArray,delete Y.__skinWeightArray)}}Q.verticesNeedUpdate=!1;Q.morphTargetsNeedUpdate=!1;Q.elementsNeedUpdate=!1;Q.uvsNeedUpdate=!1;Q.normalsNeedUpdate=!1;Q.colorsNeedUpdate=!1;Q.tangentsNeedUpdate=!1;Q.buffersNeedUpdate=!1;Z.attributes&&v(Z)}else if(ca instanceof THREE.Ribbon){Z=
e(ca,Q);tb=Z.attributes&&t(Z);if(Q.verticesNeedUpdate||Q.colorsNeedUpdate||Q.normalsNeedUpdate||tb){var Kb=Q,Pc=j.DYNAMIC_DRAW,Gc=void 0,Hc=void 0,Ic=void 0,Qc=void 0,Ka=void 0,Rc=void 0,Sc=void 0,Tc=void 0,ud=void 0,jb=void 0,xc=void 0,Ra=void 0,xb=void 0,vd=Kb.vertices,wd=Kb.colors,xd=Kb.normals,hd=vd.length,Gd=wd.length,Hd=xd.length,Uc=Kb.__vertexArray,Vc=Kb.__colorArray,Wc=Kb.__normalArray,Id=Kb.colorsNeedUpdate,Jd=Kb.normalsNeedUpdate,od=Kb.__webglCustomAttributesList;if(Kb.verticesNeedUpdate){for(Gc=
0;Gc<hd;Gc++)Qc=vd[Gc],Ka=3*Gc,Uc[Ka]=Qc.x,Uc[Ka+1]=Qc.y,Uc[Ka+2]=Qc.z;j.bindBuffer(j.ARRAY_BUFFER,Kb.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,Uc,Pc)}if(Id){for(Hc=0;Hc<Gd;Hc++)Rc=wd[Hc],Ka=3*Hc,Vc[Ka]=Rc.r,Vc[Ka+1]=Rc.g,Vc[Ka+2]=Rc.b;j.bindBuffer(j.ARRAY_BUFFER,Kb.__webglColorBuffer);j.bufferData(j.ARRAY_BUFFER,Vc,Pc)}if(Jd){for(Ic=0;Ic<Hd;Ic++)Sc=xd[Ic],Ka=3*Ic,Wc[Ka]=Sc.x,Wc[Ka+1]=Sc.y,Wc[Ka+2]=Sc.z;j.bindBuffer(j.ARRAY_BUFFER,Kb.__webglNormalBuffer);j.bufferData(j.ARRAY_BUFFER,Wc,Pc)}if(od){Tc=
0;for(ud=od.length;Tc<ud;Tc++)if(Ra=od[Tc],Ra.needsUpdate&&(void 0===Ra.boundTo||"vertices"===Ra.boundTo)){Ka=0;xc=Ra.value.length;if(1===Ra.size)for(jb=0;jb<xc;jb++)Ra.array[jb]=Ra.value[jb];else if(2===Ra.size)for(jb=0;jb<xc;jb++)xb=Ra.value[jb],Ra.array[Ka]=xb.x,Ra.array[Ka+1]=xb.y,Ka+=2;else if(3===Ra.size)if("c"===Ra.type)for(jb=0;jb<xc;jb++)xb=Ra.value[jb],Ra.array[Ka]=xb.r,Ra.array[Ka+1]=xb.g,Ra.array[Ka+2]=xb.b,Ka+=3;else for(jb=0;jb<xc;jb++)xb=Ra.value[jb],Ra.array[Ka]=xb.x,Ra.array[Ka+1]=
xb.y,Ra.array[Ka+2]=xb.z,Ka+=3;else if(4===Ra.size)for(jb=0;jb<xc;jb++)xb=Ra.value[jb],Ra.array[Ka]=xb.x,Ra.array[Ka+1]=xb.y,Ra.array[Ka+2]=xb.z,Ra.array[Ka+3]=xb.w,Ka+=4;j.bindBuffer(j.ARRAY_BUFFER,Ra.buffer);j.bufferData(j.ARRAY_BUFFER,Ra.array,Pc)}}}Q.verticesNeedUpdate=!1;Q.colorsNeedUpdate=!1;Q.normalsNeedUpdate=!1;Z.attributes&&v(Z)}else if(ca instanceof THREE.Line)if(Q instanceof THREE.BufferGeometry)(Q.verticesNeedUpdate||Q.colorsNeedUpdate)&&i(Q,j.DYNAMIC_DRAW,!Q.dynamic),Q.verticesNeedUpdate=
!1,Q.colorsNeedUpdate=!1;else{Z=e(ca,Q);tb=Z.attributes&&t(Z);if(Q.verticesNeedUpdate||Q.colorsNeedUpdate||Q.lineDistancesNeedUpdate||tb){var Lb=Q,Xc=j.DYNAMIC_DRAW,Jc=void 0,Kc=void 0,Lc=void 0,Yc=void 0,Ya=void 0,Zc=void 0,yd=Lb.vertices,zd=Lb.colors,Ad=Lb.lineDistances,Kd=yd.length,Ld=zd.length,Md=Ad.length,$c=Lb.__vertexArray,ad=Lb.__colorArray,Bd=Lb.__lineDistanceArray,Nd=Lb.colorsNeedUpdate,Od=Lb.lineDistancesNeedUpdate,pd=Lb.__webglCustomAttributesList,bd=void 0,Cd=void 0,kb=void 0,yc=void 0,
yb=void 0,Sa=void 0;if(Lb.verticesNeedUpdate){for(Jc=0;Jc<Kd;Jc++)Yc=yd[Jc],Ya=3*Jc,$c[Ya]=Yc.x,$c[Ya+1]=Yc.y,$c[Ya+2]=Yc.z;j.bindBuffer(j.ARRAY_BUFFER,Lb.__webglVertexBuffer);j.bufferData(j.ARRAY_BUFFER,$c,Xc)}if(Nd){for(Kc=0;Kc<Ld;Kc++)Zc=zd[Kc],Ya=3*Kc,ad[Ya]=Zc.r,ad[Ya+1]=Zc.g,ad[Ya+2]=Zc.b;j.bindBuffer(j.ARRAY_BUFFER,Lb.__webglColorBuffer);j.bufferData(j.ARRAY_BUFFER,ad,Xc)}if(Od){for(Lc=0;Lc<Md;Lc++)Bd[Lc]=Ad[Lc];j.bindBuffer(j.ARRAY_BUFFER,Lb.__webglLineDistanceBuffer);j.bufferData(j.ARRAY_BUFFER,
Bd,Xc)}if(pd){bd=0;for(Cd=pd.length;bd<Cd;bd++)if(Sa=pd[bd],Sa.needsUpdate&&(void 0===Sa.boundTo||"vertices"===Sa.boundTo)){Ya=0;yc=Sa.value.length;if(1===Sa.size)for(kb=0;kb<yc;kb++)Sa.array[kb]=Sa.value[kb];else if(2===Sa.size)for(kb=0;kb<yc;kb++)yb=Sa.value[kb],Sa.array[Ya]=yb.x,Sa.array[Ya+1]=yb.y,Ya+=2;else if(3===Sa.size)if("c"===Sa.type)for(kb=0;kb<yc;kb++)yb=Sa.value[kb],Sa.array[Ya]=yb.r,Sa.array[Ya+1]=yb.g,Sa.array[Ya+2]=yb.b,Ya+=3;else for(kb=0;kb<yc;kb++)yb=Sa.value[kb],Sa.array[Ya]=yb.x,
Sa.array[Ya+1]=yb.y,Sa.array[Ya+2]=yb.z,Ya+=3;else if(4===Sa.size)for(kb=0;kb<yc;kb++)yb=Sa.value[kb],Sa.array[Ya]=yb.x,Sa.array[Ya+1]=yb.y,Sa.array[Ya+2]=yb.z,Sa.array[Ya+3]=yb.w,Ya+=4;j.bindBuffer(j.ARRAY_BUFFER,Sa.buffer);j.bufferData(j.ARRAY_BUFFER,Sa.array,Xc)}}}Q.verticesNeedUpdate=!1;Q.colorsNeedUpdate=!1;Q.lineDistancesNeedUpdate=!1;Z.attributes&&v(Z)}else if(ca instanceof THREE.ParticleSystem)if(Q instanceof THREE.BufferGeometry)(Q.verticesNeedUpdate||Q.colorsNeedUpdate)&&i(Q,j.DYNAMIC_DRAW,
!Q.dynamic),Q.verticesNeedUpdate=!1,Q.colorsNeedUpdate=!1;else{Z=e(ca,Q);tb=Z.attributes&&t(Z);if(Q.verticesNeedUpdate||Q.colorsNeedUpdate||ca.sortParticles||tb){var Zb=Q,qd=j.DYNAMIC_DRAW,Mc=ca,zb=void 0,$b=void 0,ac=void 0,ha=void 0,bc=void 0,oc=void 0,cd=Zb.vertices,rd=cd.length,sd=Zb.colors,Dd=sd.length,sc=Zb.__vertexArray,tc=Zb.__colorArray,hc=Zb.__sortArray,Ed=Zb.verticesNeedUpdate,Fd=Zb.colorsNeedUpdate,ic=Zb.__webglCustomAttributesList,Ob=void 0,zc=void 0,va=void 0,Pb=void 0,Oa=void 0,ga=
void 0;if(Mc.sortParticles){Ab.copy(Db);Ab.multiply(Mc.matrixWorld);for(zb=0;zb<rd;zb++)ac=cd[zb],Cb.copy(ac),Cb.applyProjection(Ab),hc[zb]=[Cb.z,zb];hc.sort(m);for(zb=0;zb<rd;zb++)ac=cd[hc[zb][1]],ha=3*zb,sc[ha]=ac.x,sc[ha+1]=ac.y,sc[ha+2]=ac.z;for($b=0;$b<Dd;$b++)ha=3*$b,oc=sd[hc[$b][1]],tc[ha]=oc.r,tc[ha+1]=oc.g,tc[ha+2]=oc.b;if(ic){Ob=0;for(zc=ic.length;Ob<zc;Ob++)if(ga=ic[Ob],void 0===ga.boundTo||"vertices"===ga.boundTo)if(ha=0,Pb=ga.value.length,1===ga.size)for(va=0;va<Pb;va++)bc=hc[va][1],
ga.array[va]=ga.value[bc];else if(2===ga.size)for(va=0;va<Pb;va++)bc=hc[va][1],Oa=ga.value[bc],ga.array[ha]=Oa.x,ga.array[ha+1]=Oa.y,ha+=2;else if(3===ga.size)if("c"===ga.type)for(va=0;va<Pb;va++)bc=hc[va][1],Oa=ga.value[bc],ga.array[ha]=Oa.r,ga.array[ha+1]=Oa.g,ga.array[ha+2]=Oa.b,ha+=3;else for(va=0;va<Pb;va++)bc=hc[va][1],Oa=ga.value[bc],ga.array[ha]=Oa.x,ga.array[ha+1]=Oa.y,ga.array[ha+2]=Oa.z,ha+=3;else if(4===ga.size)for(va=0;va<Pb;va++)bc=hc[va][1],Oa=ga.value[bc],ga.array[ha]=Oa.x,ga.array[ha+
1]=Oa.y,ga.array[ha+2]=Oa.z,ga.array[ha+3]=Oa.w,ha+=4}}else{if(Ed)for(zb=0;zb<rd;zb++)ac=cd[zb],ha=3*zb,sc[ha]=ac.x,sc[ha+1]=ac.y,sc[ha+2]=ac.z;if(Fd)for($b=0;$b<Dd;$b++)oc=sd[$b],ha=3*$b,tc[ha]=oc.r,tc[ha+1]=oc.g,tc[ha+2]=oc.b;if(ic){Ob=0;for(zc=ic.length;Ob<zc;Ob++)if(ga=ic[Ob],ga.needsUpdate&&(void 0===ga.boundTo||"vertices"===ga.boundTo))if(Pb=ga.value.length,ha=0,1===ga.size)for(va=0;va<Pb;va++)ga.array[va]=ga.value[va];else if(2===ga.size)for(va=0;va<Pb;va++)Oa=ga.value[va],ga.array[ha]=Oa.x,
ga.array[ha+1]=Oa.y,ha+=2;else if(3===ga.size)if("c"===ga.type)for(va=0;va<Pb;va++)Oa=ga.value[va],ga.array[ha]=Oa.r,ga.array[ha+1]=Oa.g,ga.array[ha+2]=Oa.b,ha+=3;else for(va=0;va<Pb;va++)Oa=ga.value[va],ga.array[ha]=Oa.x,ga.array[ha+1]=Oa.y,ga.array[ha+2]=Oa.z,ha+=3;else if(4===ga.size)for(va=0;va<Pb;va++)Oa=ga.value[va],ga.array[ha]=Oa.x,ga.array[ha+1]=Oa.y,ga.array[ha+2]=Oa.z,ga.array[ha+3]=Oa.w,ha+=4}}if(Ed||Mc.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,Zb.__webglVertexBuffer),j.bufferData(j.ARRAY_BUFFER,
sc,qd);if(Fd||Mc.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,Zb.__webglColorBuffer),j.bufferData(j.ARRAY_BUFFER,tc,qd);if(ic){Ob=0;for(zc=ic.length;Ob<zc;Ob++)if(ga=ic[Ob],ga.needsUpdate||Mc.sortParticles)j.bindBuffer(j.ARRAY_BUFFER,ga.buffer),j.bufferData(j.ARRAY_BUFFER,ga.array,qd)}}Q.verticesNeedUpdate=!1;Q.colorsNeedUpdate=!1;Z.attributes&&v(Z)}}};this.initMaterial=function(a,b,c,d){var e,f,g,h;a.addEventListener("dispose",N);var i,k,l,D,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof
THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic");if(m){var n=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(n.uniforms);a.vertexShader=n.vertexShader;a.fragmentShader=n.fragmentShader}var p,r,q;e=g=r=q=
n=0;for(f=b.length;e<f;e++)p=b[e],p.onlyShadow||(p instanceof THREE.DirectionalLight&&g++,p instanceof THREE.PointLight&&r++,p instanceof THREE.SpotLight&&q++,p instanceof THREE.HemisphereLight&&n++);e=g;f=r;g=q;h=n;n=p=0;for(q=b.length;n<q;n++)r=b[n],r.castShadow&&(r instanceof THREE.SpotLight&&p++,r instanceof THREE.DirectionalLight&&!r.shadowCascade&&p++);D=p;dc&&d&&d.useVertexTexture?l=1024:(b=j.getParameter(j.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&
(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),l=b);a:{r=a.fragmentShader;q=a.vertexShader;n=a.uniforms;b=a.attributes;p=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:l,useVertexTexture:dc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:D,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},da,Ca,s,d=[];m?d.push(m):(d.push(r),d.push(q));for(Ca in p)d.push(Ca),d.push(p[Ca]);for(da in c)d.push(da),d.push(c[da]);m=d.join();da=0;for(Ca=qa.length;da<Ca;da++)if(d=qa[da],d.code===m){d.usedTimes++;k=d.program;break a}da="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?da="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&
(da="SHADOWMAP_TYPE_PCF_SOFT");Ca=[];for(s in p)d=p[s],!1!==d&&(d="#define "+s+" "+d,Ca.push(d));d=Ca.join("\n");s=j.createProgram();Ca=["precision "+ba+" float;",d,cc?"#define VERTEX_TEXTURES":"",L.gammaInput?"#define GAMMA_INPUT":"",L.gammaOutput?"#define GAMMA_OUTPUT":"",L.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,
"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+
c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+da:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":
"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
da=["precision "+ba+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",L.gammaInput?"#define GAMMA_INPUT":"",L.gammaOutput?"#define GAMMA_OUTPUT":"",L.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":
"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+da:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");da=P("fragment",da+r);Ca=P("vertex",Ca+q);j.attachShader(s,Ca);j.attachShader(s,da);j.linkProgram(s);j.getProgramParameter(s,j.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+j.getProgramParameter(s,j.VALIDATE_STATUS)+", gl error ["+
j.getError()+"]");j.deleteShader(da);j.deleteShader(Ca);s.uniforms={};s.attributes={};var t;da="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?da.push("boneTexture"):da.push("boneGlobalMatrices");for(t in n)da.push(t);t=da;da=0;for(Ca=t.length;da<Ca;da++)n=t[da],s.uniforms[n]=j.getUniformLocation(s,n);da="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(t=0;t<c.maxMorphTargets;t++)da.push("morphTarget"+
t);for(t=0;t<c.maxMorphNormals;t++)da.push("morphNormal"+t);for(k in b)da.push(k);k=da;t=0;for(b=k.length;t<b;t++)da=k[t],s.attributes[da]=j.getAttribLocation(s,da);s.id=rb++;qa.push({program:s,code:m,usedTimes:1});L.info.memory.programs=qa.length;k=s}a.program=k;t=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(k=0;k<this.maxMorphTargets;k++)s=b+k,0<=t[s]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;b="morphNormal";for(k=0;k<
this.maxMorphNormals;k++)s=b+k,0<=t[s]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?j.disable(j.CULL_FACE):(b===THREE.FrontFaceDirectionCW?j.frontFace(j.CW):j.frontFace(j.CCW),a===THREE.CullFaceBack?j.cullFace(j.BACK):a===THREE.CullFaceFront?j.cullFace(j.FRONT):j.cullFace(j.FRONT_AND_BACK),j.enable(j.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,
a=a.side===THREE.BackSide;X!==b&&(b?j.disable(j.CULL_FACE):j.enable(j.CULL_FACE),X=b);la!==a&&(a?j.frontFace(j.CW):j.frontFace(j.CCW),la=a)};this.setDepthTest=function(a){Ta!==a&&(a?j.enable(j.DEPTH_TEST):j.disable(j.DEPTH_TEST),Ta=a)};this.setDepthWrite=function(a){sa!==a&&(j.depthMask(a),sa=a)};this.setBlending=function(a,b,c,d){a!==ta&&(a===THREE.NoBlending?j.disable(j.BLEND):a===THREE.AdditiveBlending?(j.enable(j.BLEND),j.blendEquation(j.FUNC_ADD),j.blendFunc(j.SRC_ALPHA,j.ONE)):a===THREE.SubtractiveBlending?
(j.enable(j.BLEND),j.blendEquation(j.FUNC_ADD),j.blendFunc(j.ZERO,j.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(j.enable(j.BLEND),j.blendEquation(j.FUNC_ADD),j.blendFunc(j.ZERO,j.SRC_COLOR)):a===THREE.CustomBlending?j.enable(j.BLEND):(j.enable(j.BLEND),j.blendEquationSeparate(j.FUNC_ADD,j.FUNC_ADD),j.blendFuncSeparate(j.SRC_ALPHA,j.ONE_MINUS_SRC_ALPHA,j.ONE,j.ONE_MINUS_SRC_ALPHA)),ta=a);if(a===THREE.CustomBlending){if(b!==ua&&(j.blendEquation(J(b)),ua=b),c!==xa||d!==Ga)j.blendFunc(J(c),J(d)),
xa=c,Ga=d}else Ga=xa=ua=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Bc),a.__webglTexture=j.createTexture(),L.info.memory.textures++);j.activeTexture(j.TEXTURE0+b);j.bindTexture(j.TEXTURE_2D,a.__webglTexture);j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,a.flipY);j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);j.pixelStorei(j.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-
1),e=J(a.format),f=J(a.type);B(j.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,i=g.length;h<i;h++)c=g[h],j.texImage2D(j.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else j.texImage2D(j.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){h=0;for(i=g.length;h<i;h++)c=g[h],j.compressedTexImage2D(j.TEXTURE_2D,h,e,c.width,c.height,0,c.data)}else if(0<g.length&&d){h=0;for(i=g.length;h<i;h++)c=
g[h],j.texImage2D(j.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else j.texImage2D(j.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&j.generateMipmap(j.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else j.activeTexture(j.TEXTURE0+b),j.bindTexture(j.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",
Nc);a.__webglTexture=j.createTexture();L.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=J(a.format),e=J(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];j.bindTexture(j.TEXTURE_CUBE_MAP,a.__webglTexture);B(j.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=j.createFramebuffer();a.__webglRenderbuffer[f]=j.createRenderbuffer();j.texImage2D(j.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=j.TEXTURE_CUBE_MAP_POSITIVE_X+
f;j.bindFramebuffer(j.FRAMEBUFFER,a.__webglFramebuffer[f]);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,h,g.__webglTexture,0);S(a.__webglRenderbuffer[f],a)}c&&j.generateMipmap(j.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=j.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:j.createRenderbuffer(),j.bindTexture(j.TEXTURE_2D,a.__webglTexture),B(j.TEXTURE_2D,a,c),j.texImage2D(j.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=j.TEXTURE_2D,j.bindFramebuffer(j.FRAMEBUFFER,
a.__webglFramebuffer),j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_ATTACHMENT,j.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&j.framebufferRenderbuffer(j.FRAMEBUFFER,j.DEPTH_STENCIL_ATTACHMENT,j.RENDERBUFFER,a.__webglRenderbuffer):S(a.__webglRenderbuffer,a),c&&j.generateMipmap(j.TEXTURE_2D);b?j.bindTexture(j.TEXTURE_CUBE_MAP,null):j.bindTexture(j.TEXTURE_2D,
null);j.bindRenderbuffer(j.RENDERBUFFER,null);j.bindFramebuffer(j.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=da,a=Ca,d=Ua,e=D);b!==Za&&(j.bindFramebuffer(j.FRAMEBUFFER,b),j.viewport(d,e,c,a),Za=b);lb=c;mb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){THREE.EventDispatcher.call(this);this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);
this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;return a};
THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};
THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;a.getHSV(e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,k=f.faces,l=a.faceVertexUvs[0],f=f.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix3,d.getInverse(c),d.transpose());for(var n=0,m=h.length;n<m;n++){var s=h[n].clone();c&&s.applyMatrix4(c);g.push(s)}n=0;for(m=k.length;n<m;n++){var s=k[n],q,r,p=s.vertexNormals,t=s.vertexColors;s instanceof THREE.Face3?
q=new THREE.Face3(s.a+e,s.b+e,s.c+e):s instanceof THREE.Face4&&(q=new THREE.Face4(s.a+e,s.b+e,s.c+e,s.d+e));q.normal.copy(s.normal);d&&q.normal.applyMatrix3(d).normalize();g=0;for(h=p.length;g<h;g++)r=p[g].clone(),d&&r.applyMatrix3(d).normalize(),q.vertexNormals.push(r);q.color.copy(s.color);g=0;for(h=t.length;g<h;g++)r=t[g],q.vertexColors.push(r.clone());q.materialIndex=s.materialIndex;q.centroid.copy(s.centroid);c&&q.centroid.applyMatrix4(c);i.push(q)}n=0;for(m=f.length;n<m;n++){c=f[n];d=[];g=0;
for(h=c.length;g<h;g++)d.push(new THREE.Vector2(c[g].x,c[g].y));l.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var f,g=[],d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.materialIndex in c||g.push(f);a.faces=g},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.add(h);
h.copy(c);h.multiplyScalar(f);g.add(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,
e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,k=[],l,n,m,s;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(l=g[d.a],n=g[d.b],m=g[d.c],
d._area=THREE.GeometryUtils.triangleArea(l,n,m)):d instanceof THREE.Face4&&(l=g[d.a],n=g[d.b],m=g[d.c],s=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(l,n,s),d._area2=THREE.GeometryUtils.triangleArea(n,m,s),d._area=d._area1+d._area2),i+=d._area,k[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1,e=THREE.GeometryUtils.__v2;d.subVectors(b,a);e.subVectors(c,a);
d.cross(e);return 0.5*d.length()},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.addVectors(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].x&&(d[e].x-=Math.floor(d[e].x)),1!==d[e].y&&(d[e].y-=Math.floor(d[e].y))},triangulateQuads:function(a){var b,c,d,e,
f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,k=d.c,l=d.d,n=new THREE.Face3,m=new THREE.Face3;n.color.copy(d.color);m.color.copy(d.color);n.materialIndex=d.materialIndex;m.materialIndex=d.materialIndex;n.a=e;n.b=i;n.c=l;m.a=i;m.b=k;m.c=l;4===d.vertexColors.length&&(n.vertexColors[0]=d.vertexColors[0].clone(),n.vertexColors[1]=d.vertexColors[1].clone(),
n.vertexColors[2]=d.vertexColors[3].clone(),m.vertexColors[0]=d.vertexColors[1].clone(),m.vertexColors[1]=d.vertexColors[2].clone(),m.vertexColors[2]=d.vertexColors[3].clone());f.push(n,m);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(n=a.faceVertexUvs[d][b],i=n[1],k=n[2],l=n[3],n=[n[0].clone(),i.clone(),l.clone()],i=[i.clone(),k.clone(),l.clone()],h[d].push(n,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d);d=0;for(e=
a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},setMaterialIndex:function(a,b,c,d){a=a.faces;d=d||a.length-1;for(c=c||0;c<=d;c++)a[c].materialIndex=b}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);f.sourceFile=a;return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var g=0,h=a.length;g<h;++g){var i={};
e[g]=i;var k=new XMLHttpRequest;k.onload=b(k,i);k.onerror=d;i=a[g];k.open("GET",i,!0);k.responseType="arraybuffer";k.send(null)}else k=new XMLHttpRequest,k.onload=function(){var a=THREE.ImageUtils.parseDDS(k.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}f.format=a.format;f.needsUpdate=!0;c&&c(f)}},k.onerror=
d,k.open("GET",a,!0),k.responseType="arraybuffer",k.send(null);return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var i=h[21];switch(i){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.isCubemap=h[28]&512?!0:!1;d.width=h[4];d.height=h[3];for(var h=h[1]+4,f=d.width,g=d.height,i=d.isCubemap?
6:1,k=0;k<i;k++){for(var l=0;l<d.mipmapCount;l++){var n=Math.max(4,f)/4*Math.max(4,g)/4*e,m={data:new Uint8Array(a,h,n),width:f,height:g};d.mipmaps.push(m);h+=n;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}f=d.width;g=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,
0,d,e).data,i=g.createImageData(d,e),k=i.data,l=0;l<d;l++)for(var n=0;n<e;n++){var m=0>n-1?0:n-1,s=n+1>e-1?e-1:n+1,q=0>l-1?0:l-1,r=l+1>d-1?d-1:l+1,p=[],t=[0,0,h[4*(n*d+l)]/255*b];p.push([-1,0,h[4*(n*d+q)]/255*b]);p.push([-1,-1,h[4*(m*d+q)]/255*b]);p.push([0,-1,h[4*(m*d+l)]/255*b]);p.push([1,-1,h[4*(m*d+r)]/255*b]);p.push([1,0,h[4*(n*d+r)]/255*b]);p.push([1,1,h[4*(s*d+r)]/255*b]);p.push([0,1,h[4*(s*d+l)]/255*b]);p.push([-1,1,h[4*(s*d+q)]/255*b]);m=[];q=p.length;for(s=0;s<q;s++){var r=p[s],v=p[(s+1)%
q],r=[r[0]-t[0],r[1]-t[1],r[2]-t[2]],v=[v[0]-t[0],v[1]-t[1],v[2]-t[2]];m.push(c([r[1]*v[2]-r[2]*v[1],r[2]*v[0]-r[0]*v[2],r[0]*v[1]-r[1]*v[0]]))}p=[0,0,0];for(s=0;s<m.length;s++)p[0]+=m[s][0],p[1]+=m[s][1],p[2]+=m[s][2];p[0]/=m.length;p[1]/=m.length;p[2]/=m.length;t=4*(n*d+l);k[t]=255*((p[0]+1)/2)|0;k[t+1]=255*((p[1]+1)/2)|0;k[t+2]=255*p[2]|0;k[t+3]=255}g.putImageData(i,0,0);return f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),
c=Math.floor(255*c.b),h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,k,l,n,m,s,q,r,p,t=b.glyphs[a]||b.glyphs["?"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(" "));k=b.length;for(a=0;a<k;)switch(i=b[a++],i){case "m":i=b[a++]*c+d;l=b[a++]*c;e.moveTo(i,l);break;case "l":i=b[a++]*c+d;l=b[a++]*c;e.lineTo(i,l);break;case "q":i=b[a++]*
c+d;l=b[a++]*c;s=b[a++]*c+d;q=b[a++]*c;e.quadraticCurveTo(s,q,i,l);if(g=f[f.length-1]){n=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){var v=g/h;THREE.Shape.Utils.b2(v,n,s,i);THREE.Shape.Utils.b2(v,m,q,l)}}break;case "b":if(i=b[a++]*c+d,l=b[a++]*c,s=b[a++]*c+d,q=b[a++]*-c,r=b[a++]*c+d,p=b[a++]*-c,e.bezierCurveTo(i,l,s,q,r,p),g=f[f.length-1]){n=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++)v=g/h,THREE.Shape.Utils.b3(v,n,s,r,i),THREE.Shape.Utils.b3(v,m,q,p,l)}}}return{offset:t.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],i,k,l;if(0<b(a))for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var n=2*e;for(k=e-1;2<e;){if(0>=n--){console.log("Warning, unable to triangulate polygon!");break}i=k;e<=i&&(i=0);k=i+1;e<=k&&(k=0);l=k+1;e<=l&&(l=0);var m;a:{var s=m=void 0,q=void 0,r=void 0,p=void 0,t=void 0,v=void 0,u=void 0,w=
void 0,s=a[g[i]].x,q=a[g[i]].y,r=a[g[k]].x,p=a[g[k]].y,t=a[g[l]].x,v=a[g[l]].y;if(1E-10>(r-s)*(v-q)-(p-q)*(t-s))m=!1;else{var E=void 0,G=void 0,C=void 0,z=void 0,K=void 0,I=void 0,H=void 0,P=void 0,B=void 0,S=void 0,B=P=H=w=u=void 0,E=t-r,G=v-p,C=s-t,z=q-v,K=r-s,I=p-q;for(m=0;m<e;m++)if(!(m===i||m===k||m===l))if(u=a[g[m]].x,w=a[g[m]].y,H=u-s,P=w-q,B=u-r,S=w-p,u-=t,w-=v,B=E*S-G*B,H=K*P-I*H,P=C*w-z*u,0<=B&&0<=P&&0<=H){m=!1;break a}m=!0}}if(m){f.push([a[g[i]],a[g[k]],a[g[l]]]);h.push([g[i],g[k],g[l]]);
i=k;for(l=k+1;l<e;i++,l++)g[i]=g[l];e--;n=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;)if(d=Math.floor(g+(h-g)/2),i=c[d]-f,0>i)g=d+1;else if(0<i)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=0.5*(c-a),d=0.5*(d-b),f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,i,k,l,n=a[0]instanceof THREE.Vector3;l=n?new THREE.Vector3:new THREE.Vector2;i=0;for(k=a.length;i<k;i++)h=a[i],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),n&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),l.add(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:l.divideScalar(k)};n&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g),g=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,e,f,g,h,i,k,l,n,m,s,q,r;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];n=f[0];m=f[1];0<c.length?(g=c[c.length-1],s=g.x,
q=g.y):(g=this.actions[d-1].args,s=g[g.length-2],q=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b2(r,s,n,h),r=THREE.Shape.Utils.b2(r,q,m,i),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];n=f[0];m=f[1];k=f[2];l=f[3];0<c.length?(g=c[c.length-1],s=g.x,q=g.y):(g=this.actions[d-1].args,s=g[g.length-2],q=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b3(r,s,n,k,h),r=THREE.Shape.Utils.b3(r,q,m,l,i),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;r=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;r=r.concat(f[0]);r=new THREE.SplineCurve(r);for(f=1;f<=g;f++)c.push(r.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];i=f[1];m=f[2];k=f[3];g=f[4];n=!!f[5];s=g-k;q=2*a;for(f=1;f<=q;f++)r=f/q,n||(r=1-r),r=k+r*s,g=h+m*Math.cos(r),r=i+m*Math.sin(r),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.ELLIPSE:h=f[0];i=f[1];m=f[2];l=f[3];k=f[4];g=f[5];n=!!f[6];s=g-k;q=2*a;for(f=1;f<=q;f++)r=f/q,n||
(r=1-r),r=k+r*s,g=h+m*Math.cos(r),r=i+l*Math.sin(r),c.push(new THREE.Vector2(g,r))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,k,l,n,m,s,q=[];for(i=0;i<b.length;i++){k=b[i];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){m=k[e];s=[];for(n=0;n<c.length;n++)l=c[n],l=m.distanceToSquared(l),s.push(l),l<f&&(f=l,g=e,h=n)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;var r=[k[g],c[h],c[e]];n=THREE.FontUtils.Triangulate.area(r);var p=[k[g],k[f],c[h]];m=THREE.FontUtils.Triangulate.area(p);s=h;l=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;r=[k[g],c[h],c[e]];r=THREE.FontUtils.Triangulate.area(r);p=[k[g],k[f],c[h]];p=THREE.FontUtils.Triangulate.area(p);n+m>r+p&&(h=s,g=l,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:k.length-1);n=c.slice(0,h);m=c.slice(h);s=k.slice(g);l=k.slice(0,g);f=[k[g],k[f],c[h]];q.push([k[g],c[h],c[e]]);q.push(f);c=n.concat(s).concat(l).concat(m)}return{shape:c,
isolatedPts:q,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,i,k={};f=0;for(g=d.length;f<g;f++)i=d[f].x+":"+d[f].y,void 0!==k[i]&&console.log("Duplicate point",i),k[i]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=k[i],void 0!==i&&(h[d]=i)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)i=h[d].x+":"+h[d].y,i=k[i],void 0!==i&&(h[d]=i)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var k=a.hierarchy[c].keys[d].morphTargets[i];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var l={};for(k in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===k){l[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(l[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=l}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,i,k,l;l=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,m=this.hierarchy.length;n<m;n++){a=this.hierarchy[n];i=a.animationCache;for(var s=0;3>s;s++){c=b[s];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=l){if(k<l)if(this.loop){g=this.data.hierarchy[n].keys[0];for(h=this.getNextKeyWith(c,n,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,n,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,n,h.index+1);while(h.time<k)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+n),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",n,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",n,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.sub(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,k;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];i=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],i[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],i[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],i[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,k=this.hierarchy.length;a<k;a++){var l=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=l.length-1;e=this.hierarchy[a];if(l.length){for(l=
0;l<f.length;l++)g=f[l],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var l=b.keys,n=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(l.length){this.JITCompile&&n&&(d instanceof
THREE.Bone?d.skinMatrix=n.originalMatrix:d.matrix=n.originalMatrix);b=n.prevKey;c=n.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=l[0];for(c=l[1];c.time<g;)b=c,c=l[b.index+1]}else if(!i)for(var m=l.length-1;c.time<g&&c.index!==m;)b=c,c=l[b.index+1];n.prevKey=b;n.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,e=c.length;d<e;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8,e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),
this.faceVertexUvs[0].push([f[e],f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,r){var p,t=h.widthSegments,v=h.heightSegments,u=e/2,w=f/2,E=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)p="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)p="y",v=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)p="x",t=h.depthSegments;var G=t+1,C=v+1,z=e/t,K=f/v,I=new THREE.Vector3;I[p]=0<g?1:-1;for(e=0;e<C;e++)for(f=0;f<G;f++){var H=new THREE.Vector3;H[a]=(f*z-u)*c;H[b]=(e*K-w)*d;H[p]=g;h.vertices.push(H)}for(e=
0;e<v;e++)for(f=0;f<t;f++)a=new THREE.Face4(f+G*e+E,f+G*(e+1)+E,f+1+G*(e+1)+E,f+1+G*e+E),a.normal.copy(I),a.vertexNormals.push(I.clone(),I.clone(),I.clone(),I.clone()),a.materialIndex=r,h.faces.push(a),h.faceVertexUvs[0].push([new THREE.Vector2(f/t,1-e/v),new THREE.Vector2(f/t,1-(e+1)/v),new THREE.Vector2((f+1)/t,1-(e+1)/v),new THREE.Vector2((f+1)/t,1-e/v)])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=
f||1;a=this.width/2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,g=c/2,d=d||8,e=e||1,h,i,k=[],l=[];for(i=0;i<=e;i++){var n=[],m=[],s=i/e,q=s*(b-a)+a;for(h=0;h<=d;h++){var r=h/d,p=new THREE.Vector3;p.x=q*Math.sin(2*r*Math.PI);p.y=-s*c+g;p.z=q*Math.cos(2*r*Math.PI);this.vertices.push(p);n.push(this.vertices.length-1);m.push(new THREE.Vector2(r,1-s))}k.push(n);l.push(m)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(n=this.vertices[k[0][h]].clone(),
m=this.vertices[k[0][h+1]].clone()):(n=this.vertices[k[1][h]].clone(),m=this.vertices[k[1][h+1]].clone());n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();for(i=0;i<e;i++){var s=k[i][h],q=k[i+1][h],r=k[i+1][h+1],p=k[i][h+1],t=n.clone(),v=n.clone(),u=m.clone(),w=m.clone(),E=l[i][h].clone(),G=l[i+1][h].clone(),C=l[i+1][h+1].clone(),z=l[i][h+1].clone();this.faces.push(new THREE.Face4(s,q,r,p,[t,v,u,w]));this.faceVertexUvs[0].push([E,G,C,z])}}if(!f&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)s=k[0][h],q=k[0][h+1],r=this.vertices.length-1,t=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),u=new THREE.Vector3(0,1,0),E=l[0][h].clone(),G=l[0][h+1].clone(),C=new THREE.Vector2(G.u,0),this.faces.push(new THREE.Face3(s,q,r,[t,v,u])),this.faceVertexUvs[0].push([E,G,C])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)s=k[i][h+1],q=k[i][h],r=this.vertices.length-1,t=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,
-1,0),u=new THREE.Vector3(0,-1,0),E=l[i][h+1].clone(),G=l[i][h].clone(),C=new THREE.Vector2(G.u,1),this.faces.push(new THREE.Face3(s,q,r,[t,v,u])),this.faceVertexUvs[0].push([E,G,C])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).add(f);i.copy(a).add(g);if(h.equals(i))return g.clone();
h.copy(b).add(f);i.copy(c).add(g);f=d.dot(g);g=i.sub(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).add(h).sub(a).clone()}function e(c,d){var e,f;for(M=c.length;0<=--M;){e=M;f=M-1;0>f&&(f=c.length-1);for(var g=0,h=s+2*l,
g=0;g<h;g++){var i=ka*g,k=ka*(g+1),m=d+e+i,i=d+f+i,n=d+f+k,k=d+e+k,p=c,r=g,q=h,t=e,w=f,m=m+P,i=i+P,n=n+P,k=k+P;H.faces.push(new THREE.Face4(m,i,n,k,null,null,v));m=u.generateSideWallUV(H,a,p,b,m,i,n,k,r,q,t,w);H.faceVertexUvs[0].push(m)}}}function f(a,b,c){H.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=P;d+=P;e+=P;H.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?u.generateBottomUV(H,a,b,c,d,e):u.generateTopUV(H,a,b,c,d,e);H.faceVertexUvs[0].push(c)}var h=void 0!==b.amount?b.amount:
100,i=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:i-2,l=void 0!==b.bevelSegments?b.bevelSegments:3,n=void 0!==b.bevelEnabled?b.bevelEnabled:!0,m=void 0!==b.curveSegments?b.curveSegments:12,s=void 0!==b.steps?b.steps:1,q=b.extrudePath,r,p=!1,t=b.material,v=b.extrudeMaterial,u=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,E,G,C;q&&(r=q.getSpacedPoints(s),p=!0,n=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(q,s,
!1),E=new THREE.Vector3,G=new THREE.Vector3,C=new THREE.Vector3);n||(k=i=l=0);var z,K,I,H=this,P=this.vertices.length,m=a.extractPoints(m),B=m.shape,m=m.holes;if(q=!THREE.Shape.Utils.isClockWise(B)){B=B.reverse();K=0;for(I=m.length;K<I;K++)z=m[K],THREE.Shape.Utils.isClockWise(z)&&(m[K]=z.reverse());q=!1}var S=THREE.Shape.Utils.triangulateShape(B,m),q=B;K=0;for(I=m.length;K<I;K++)z=m[K],B=B.concat(z);var A,J,O,ba,ka=B.length,za=S.length,ra=[],M=0,ca=q.length;A=ca-1;for(J=M+1;M<ca;M++,A++,J++)A===ca&&
(A=0),J===ca&&(J=0),ra[M]=d(q[M],q[A],q[J]);var pa=[],Z,L=ra.concat();K=0;for(I=m.length;K<I;K++){z=m[K];Z=[];M=0;ca=z.length;A=ca-1;for(J=M+1;M<ca;M++,A++,J++)A===ca&&(A=0),J===ca&&(J=0),Z[M]=d(z[M],z[A],z[J]);pa.push(Z);L=L.concat(Z)}for(A=0;A<l;A++){z=A/l;O=i*(1-z);J=k*Math.sin(z*Math.PI/2);M=0;for(ca=q.length;M<ca;M++)ba=c(q[M],ra[M],J),f(ba.x,ba.y,-O);K=0;for(I=m.length;K<I;K++){z=m[K];Z=pa[K];M=0;for(ca=z.length;M<ca;M++)ba=c(z[M],Z[M],J),f(ba.x,ba.y,-O)}}J=k;for(M=0;M<ka;M++)ba=n?c(B[M],L[M],
J):B[M],p?(G.copy(w.normals[0]).multiplyScalar(ba.x),E.copy(w.binormals[0]).multiplyScalar(ba.y),C.copy(r[0]).add(G).add(E),f(C.x,C.y,C.z)):f(ba.x,ba.y,0);for(z=1;z<=s;z++)for(M=0;M<ka;M++)ba=n?c(B[M],L[M],J):B[M],p?(G.copy(w.normals[z]).multiplyScalar(ba.x),E.copy(w.binormals[z]).multiplyScalar(ba.y),C.copy(r[z]).add(G).add(E),f(C.x,C.y,C.z)):f(ba.x,ba.y,h/s*z);for(A=l-1;0<=A;A--){z=A/l;O=i*(1-z);J=k*Math.sin(z*Math.PI/2);M=0;for(ca=q.length;M<ca;M++)ba=c(q[M],ra[M],J),f(ba.x,ba.y,h+O);K=0;for(I=
m.length;K<I;K++){z=m[K];Z=pa[K];M=0;for(ca=z.length;M<ca;M++)ba=c(z[M],Z[M],J),p?f(ba.x,ba.y+r[s-1].y,r[s-1].x+O):f(ba.x,ba.y,h+O)}}if(n){i=0*ka;for(M=0;M<za;M++)h=S[M],g(h[2]+i,h[1]+i,h[0]+i,!0);i=ka*(s+2*l);for(M=0;M<za;M++)h=S[M],g(h[0]+i,h[1]+i,h[2]+i,!1)}else{for(M=0;M<za;M++)h=S[M],g(h[2],h[1],h[0],!0);for(M=0;M<za;M++)h=S[M],g(h[0]+ka*s,h[1]+ka*s,h[2]+ka*s,!1)}h=0;e(q,h);h+=q.length;K=0;for(I=m.length;K<I;K++)z=m[K],e(z,h),h+=z.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,k=a.vertices[g].x,
l=a.vertices[g].y,g=a.vertices[g].z,n=a.vertices[h].x,m=a.vertices[h].y,a=a.vertices[h].z;return 0.01>Math.abs(c-i)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(k,1-g),new THREE.Vector2(n,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(i,1-f),new THREE.Vector2(l,1-g),new THREE.Vector2(m,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var i=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();e=0;for(f=k.length;e<f;e++)g=k[e],THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}var l=THREE.Shape.Utils.triangulateShape(i,k);e=0;for(f=k.length;e<f;e++)g=k[e],
i=i.concat(g);k=i.length;f=l.length;for(e=0;e<k;e++)g=i[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)k=l[e],i=k[0]+h,g=k[1]+h,k=k[2]+h,this.faces.push(new THREE.Face3(i,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,k))};
THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var b=b||12,c=c||0,d=d||2*Math.PI,e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var i=c+g*f*d,k=Math.cos(i),l=Math.sin(i),i=0,n=a.length;i<n;i++){var m=a[i],s=new THREE.Vector3;s.x=k*m.x-l*m.y;s.y=l*m.x+k*m.y;s.z=m.z;this.vertices.push(s)}c=a.length;g=0;for(h=b;g<h;g++){i=0;for(n=a.length-1;i<n;i++)d=b=i+c*g,l=b+c,k=b+1+c,this.faces.push(new THREE.Face4(d,l,k,b+1)),k=g*f,b=i*e,d=k+f,l=b+e,this.faceVertexUvs[0].push([new THREE.Vector2(k,
b),new THREE.Vector2(d,b),new THREE.Vector2(d,l),new THREE.Vector2(k,l)])}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;for(var c=a/2,e=b/2,d=this.widthSegments,f=this.heightSegments,g=d+1,h=f+1,i=this.width/d,k=this.height/f,l=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-c,-(a*k-e),0));for(a=0;a<f;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),c.normal.copy(l),c.vertexNormals.push(l.clone(),l.clone(),
l.clone(),l.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.Vector2(b/d,1-a/f),new THREE.Vector2(b/d,1-(a+1)/f),new THREE.Vector2((b+1)/d,1-(a+1)/f),new THREE.Vector2((b+1)/d,1-a/f)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);for(var d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI,h=[],i=[],c=0;c<=this.heightSegments;c++){for(var k=[],l=[],b=0;b<=this.widthSegments;b++){var n=b/this.widthSegments,m=c/this.heightSegments,s=new THREE.Vector3;s.x=-this.radius*Math.cos(d+n*e)*Math.sin(f+m*g);s.y=this.radius*
Math.cos(f+m*g);s.z=this.radius*Math.sin(d+n*e)*Math.sin(f+m*g);this.vertices.push(s);k.push(this.vertices.length-1);l.push(new THREE.Vector2(n,1-m))}h.push(k);i.push(l)}for(c=0;c<this.heightSegments;c++)for(b=0;b<this.widthSegments;b++){var d=h[c][b+1],e=h[c][b],f=h[c+1][b],g=h[c+1][b+1],k=this.vertices[d].clone().normalize(),l=this.vertices[e].clone().normalize(),n=this.vertices[f].clone().normalize(),m=this.vertices[g].clone().normalize(),s=i[c][b+1].clone(),q=i[c][b].clone(),r=i[c+1][b].clone(),
p=i[c+1][b+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,f,g,[k,n,m])),this.faceVertexUvs[0].push([s,r,p])):Math.abs(this.vertices[f].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,f,[k,l,n])),this.faceVertexUvs[0].push([s,q,r])):(this.faces.push(new THREE.Face4(d,e,f,g,[k,l,n,m])),this.faceVertexUvs[0].push([s,q,r,p]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};
THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().sub(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.add(b[e]);i.normal.add(b[f]);i.normal.add(b[g]);i.normal.add(b[h]);
i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var i=2*(a/this.radialSegments)*this.p*Math.PI,g=2*(b/this.tubularSegments)*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.subVectors(i,f);d.addVectors(i,f);e.crossVectors(c,d);d.crossVectors(e,c);e.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=i*d.x+g*e.x;f.y+=i*d.y+g*e.y;f.z+=i*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,
f.y,f.z))-1}}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments),i=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),l=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,
d,e,f));this.faceVertexUvs[0].push([g,i,k,l])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h,e=this.segments+1,i,k,l,f=new THREE.Vector3,n,m,s,b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);n=b.tangents;m=b.normals;s=b.binormals;this.tangents=n;this.normals=m;this.binormals=s;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);l=a.getPointAt(d);d=n[b];g=m[b];
h=s[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,l,c,255)),this.debug.add(new THREE.ArrowHelper(g,l,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,l,c,65280)));for(d=0;d<this.radiusSegments;d++)i=2*(d/this.radiusSegments)*Math.PI,k=-this.radius*Math.cos(i),i=this.radius*Math.sin(i),f.copy(l),f.x+=k*g.x+i*h.x,f.y+=k*g.y+i*h.y,f.z+=k*g.z+i*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)e=this.closed?
(b+1)%this.segments:b+1,f=(d+1)%this.radiusSegments,a=this.grid[b][d],c=this.grid[e][d],e=this.grid[e][f],f=this.grid[b][f],n=new THREE.Vector2(b/this.segments,d/this.radiusSegments),m=new THREE.Vector2((b+1)/this.segments,d/this.radiusSegments),s=new THREE.Vector2((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.Vector2(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,e,f)),this.faceVertexUvs[0].push([n,m,s,g]);this.computeCentroids();this.computeFaceNormals();
this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,k,l,n;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++)l=k/(b-1),e[k]=a.getTangentAt(l),e[k].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);l=Math.abs(e[0].y);n=Math.abs(e[0].z);k<=a&&(a=k,d.set(1,0,0));l<=a&&(a=l,d.set(0,1,0));n<=a&&d.set(0,0,1);h.crossVectors(e[0],
d).normalize();f[0].crossVectors(e[0],h);g[0].crossVectors(e[0],f[0]);for(k=1;k<b;k++)f[k]=f[k-1].clone(),g[k]=g[k-1].clone(),h.crossVectors(e[k-1],e[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[k-1].dot(e[k])),f[k].applyMatrix4(i.makeRotationAxis(h,d))),g[k].crossVectors(e[k],f[k]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d);for(k=1;k<b;k++)f[k].applyMatrix4(i.makeRotationAxis(e[k],d*k)),g[k].crossVectors(e[k],f[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.add(a).add(b).add(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),i.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),i.faceVertexUvs[0].push([h(a.uv,
a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){n[a.index]||(n[a.index]=[]);n[b.index]||(n[b.index]=[]);var c=n[a.index][b.index];void 0===c&&(n[a.index][b.index]=n[b.index][a.index]=c=e((new THREE.Vector3).addVectors(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+0.5,a.y));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,i=this,k=0,l=a.length;k<l;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));for(var n=[],a=this.vertices,k=0,l=b.length;k<l;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(l=this.vertices.length;k<l;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=void 0===d?!1:d,h,i,k,l,n=b+1;for(h=0;h<=c;h++){l=h/c;for(i=0;i<=b;i++)k=i/b,k=a(k,l),e.push(k)}var m,s,q,r;for(h=0;h<c;h++)for(i=0;i<b;i++)a=h*n+i,e=h*n+i+1,l=(h+1)*n+i,k=(h+1)*n+i+1,m=new THREE.Vector2(i/b,h/c),s=new THREE.Vector2((i+1)/b,h/c),q=new THREE.Vector2(i/b,(h+1)/c),r=new THREE.Vector2((i+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,l)),f.push(new THREE.Face3(e,
k,l)),g.push([m,s,q]),g.push([s,r,q])):(f.push(new THREE.Face4(a,e,k,l)),g.push([m,s,r,q]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.Vector2(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x+=g*2E-6*(Math.random()-0.5);f.y+=g*2E-6*(Math.random()-0.5);f.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var i=c[h],k=f,l=a[i[0]],n;n=l;var m=a[i[1]],s=a[i[2]],q=new THREE.Vector3,r=new THREE.Vector3;q.subVectors(s,m);r.subVectors(n,m);q.cross(r);q.normalize();n=q;l=n.dot(l);
if(n.dot(k)>=l){for(k=0;3>k;k++){l=[i[k],i[(k+1)%3]];n=!0;for(m=0;m<g.length;m++)if(g[m][0]===l[1]&&g[m][1]===l[0]){g[m]=g[g.length-1];g.pop();n=!1;break}n&&g.push(l)}c[h]=c[c.length-1];c.pop()}else h++}for(m=0;m<g.length;m++)c.push([g[m][0],g[m][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===f[g[h]]&&(f[g[h]]=e++,this.vertices.push(a[g[h]])),g[h]=f[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=
this.faces[d],this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=20);void 0===d&&(d=16776960);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=THREE.ArrowHelper.__v1.copy(a).normalize();0.999<b.y?this.rotation.set(0,0,0):-0.999>b.y?this.rotation.set(Math.PI,0,0):(a=THREE.ArrowHelper.__v2.set(b.z,0,-b.x).normalize(),b=Math.acos(b.y),a=THREE.ArrowHelper.__q1.setFromAxisAngle(a,b),this.rotation.setEulerFromQuaternion(a,this.eulerOrder))};
THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.ArrowHelper.__v1=new THREE.Vector3;THREE.ArrowHelper.__v2=new THREE.Vector3;THREE.ArrowHelper.__q1=new THREE.Quaternion;
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.MeshBasicMaterial({color:c,fog:!1}),g=new THREE.LineBasicMaterial({color:c,fog:!1});this.lightSphere=
new THREE.Mesh(d,f);this.lightRays=new THREE.Line(e,g,THREE.LinePieces);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(d=new THREE.SphereGeometry(b,8,4),e=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(d,e),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=
!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=new THREE.Line(d,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),
this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};
THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(d);var e=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.multiplyScalar(d);for(var d=this.groundColor.getHex(),f=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*Math.PI,Math.PI),h=new THREE.MeshBasicMaterial({color:e,
fog:!1}),i=new THREE.MeshBasicMaterial({color:d,fog:!1}),k=0,l=f.faces.length;k<l;k++)f.faces[k].materialIndex=0;k=0;for(l=g.faces.length;k<l;k++)g.faces[k].materialIndex=1;THREE.GeometryUtils.merge(f,g);this.lightSphere=new THREE.Mesh(f,new THREE.MeshFaceMaterial([h,i]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,e);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*
(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.groundColor.copy(this.light.groundColor);this.groundColor.multiplyScalar(a);this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());this.lookAt(this.target)};
THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.IcosahedronGeometry(1,2),g=new THREE.MeshBasicMaterial({color:d,fog:!1}),h=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.1,
transparent:!0});this.lightSphere=new THREE.Mesh(c,g);this.lightRays=new THREE.Line(e,h,THREE.LinePieces);this.lightDistance=new THREE.Mesh(f,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};
THREE.SpotLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),f=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),g=new THREE.Matrix4;g.rotateX(-Math.PI/2);g.translate(new THREE.Vector3(0,
-0.5,0));f.applyMatrix(g);var h=new THREE.MeshBasicMaterial({color:c,fog:!1}),g=new THREE.LineBasicMaterial({color:c,fog:!1}),i=new THREE.MeshBasicMaterial({color:c,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightSphere=new THREE.Mesh(d,h);this.lightCone=new THREE.Mesh(f,i);d=a.distance?a.distance:1E4;f=2*d*Math.tan(0.5*a.angle);this.lightCone.scale.set(f,f,d);this.lightRays=new THREE.Line(e,g,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);
this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(e=new THREE.SphereGeometry(b,8,4),g=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(e,g),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=
a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),e=new THREE.Geometry,e.vertices.push(this.position.clone()),e.vertices.push(this.targetSphere.position.clone()),e.computeLineDistances(),this.targetLine=new THREE.Line(e,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);
null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=i)}}for(i in d)h=d[i],this.createAnimation(i,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,e,f,g,h,i,k,l,n,m,s;this.init=function(q){b=q.context;c=q;d=q.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);q=0;e[q++]=-1;e[q++]=-1;
e[q++]=0;e[q++]=0;e[q++]=1;e[q++]=-1;e[q++]=1;e[q++]=0;e[q++]=1;e[q++]=1;e[q++]=1;e[q++]=1;e[q++]=-1;e[q++]=1;e[q++]=0;e[q++]=1;q=0;f[q++]=0;f[q++]=1;f[q++]=2;f[q++]=0;f[q++]=2;f[q++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);i=b.createTexture();k=b.createTexture();b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,k);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(l=!1,n=a(THREE.ShaderFlares.lensFlare,d)):(l=!0,n=a(THREE.ShaderFlares.lensFlareVertexTexture,d));m={};s={};m.vertex=b.getAttribLocation(n,"position");m.uv=b.getAttribLocation(n,"uv");s.renderType=b.getUniformLocation(n,"renderType");s.map=b.getUniformLocation(n,"map");s.occlusionMap=b.getUniformLocation(n,"occlusionMap");s.opacity=
b.getUniformLocation(n,"opacity");s.color=b.getUniformLocation(n,"color");s.scale=b.getUniformLocation(n,"scale");s.rotation=b.getUniformLocation(n,"rotation");s.screenPosition=b.getUniformLocation(n,"screenPosition")};this.render=function(a,d,e,f){var a=a.__webglFlares,v=a.length;if(v){var u=new THREE.Vector3,w=f/e,E=0.5*e,G=0.5*f,C=16/f,z=new THREE.Vector2(C*w,C),K=new THREE.Vector3(1,1,0),I=new THREE.Vector2(1,1),H=s,C=m;b.useProgram(n);b.enableVertexAttribArray(m.vertex);b.enableVertexAttribArray(m.uv);
b.uniform1i(H.occlusionMap,0);b.uniform1i(H.map,1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(C.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(C.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.disable(b.CULL_FACE);b.depthMask(!1);var P,B,S,A,J;for(P=0;P<v;P++)if(C=16/f,z.set(C*w,C),A=a[P],u.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]),u.applyMatrix4(d.matrixWorldInverse),u.applyProjection(d.projectionMatrix),K.copy(u),I.x=K.x*E+E,
I.y=K.y*G+G,l||0<I.x&&I.x<e&&0<I.y&&I.y<f){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,I.x-8,I.y-8,16,16,0);b.uniform1i(H.renderType,0);b.uniform2f(H.scale,z.x,z.y);b.uniform3f(H.screenPosition,K.x,K.y,K.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,k);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,I.x-8,I.y-8,16,16,0);b.uniform1i(H.renderType,1);b.disable(b.DEPTH_TEST);
b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,i);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);A.positionScreen.copy(K);A.customUpdateCallback?A.customUpdateCallback(A):A.updateLensFlares();b.uniform1i(H.renderType,2);b.enable(b.BLEND);B=0;for(S=A.lensFlares.length;B<S;B++)J=A.lensFlares[B],0.001<J.opacity&&0.001<J.scale&&(K.x=J.x,K.y=J.y,K.z=J.z,C=J.size*J.scale/f,z.x=C*w,z.y=C,b.uniform3f(H.screenPosition,K.x,K.y,K.z),b.uniform2f(H.scale,z.x,z.y),b.uniform1f(H.rotation,J.rotation),b.uniform1f(H.opacity,
J.opacity),b.uniform3f(H.color,J.color.r,J.color.g,J.color.b),c.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),c.setTexture(J.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(l,n){var m,s,q,r,p,t,v,u,w,E=[];r=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);m=0;for(s=l.__lights.length;m<s;m++)if(q=l.__lights[m],q.castShadow)if(q instanceof THREE.DirectionalLight&&q.shadowCascade)for(p=0;p<q.shadowCascadeCount;p++){var G;if(q.shadowCascadeArray[p])G=q.shadowCascadeArray[p];else{w=q;v=p;G=new THREE.DirectionalLight;G.isVirtual=!0;G.onlyShadow=!0;G.castShadow=!0;G.shadowCameraNear=w.shadowCameraNear;G.shadowCameraFar=w.shadowCameraFar;G.shadowCameraLeft=w.shadowCameraLeft;G.shadowCameraRight=w.shadowCameraRight;
G.shadowCameraBottom=w.shadowCameraBottom;G.shadowCameraTop=w.shadowCameraTop;G.shadowCameraVisible=w.shadowCameraVisible;G.shadowDarkness=w.shadowDarkness;G.shadowBias=w.shadowCascadeBias[v];G.shadowMapWidth=w.shadowCascadeWidth[v];G.shadowMapHeight=w.shadowCascadeHeight[v];G.pointsWorld=[];G.pointsFrustum=[];u=G.pointsWorld;t=G.pointsFrustum;for(var C=0;8>C;C++)u[C]=new THREE.Vector3,t[C]=new THREE.Vector3;u=w.shadowCascadeNearZ[v];w=w.shadowCascadeFarZ[v];t[0].set(-1,-1,u);t[1].set(1,-1,u);t[2].set(-1,
1,u);t[3].set(1,1,u);t[4].set(-1,-1,w);t[5].set(1,-1,w);t[6].set(-1,1,w);t[7].set(1,1,w);G.originalCamera=n;t=new THREE.Gyroscope;t.position=q.shadowCascadeOffset;t.add(G);t.add(G.target);n.add(t);q.shadowCascadeArray[p]=G;console.log("Created virtualLight",G)}v=q;u=p;w=v.shadowCascadeArray[u];w.position.copy(v.position);w.target.position.copy(v.target.position);w.lookAt(w.target);w.shadowCameraVisible=v.shadowCameraVisible;w.shadowDarkness=v.shadowDarkness;w.shadowBias=v.shadowCascadeBias[u];t=v.shadowCascadeNearZ[u];
v=v.shadowCascadeFarZ[u];w=w.pointsFrustum;w[0].z=t;w[1].z=t;w[2].z=t;w[3].z=t;w[4].z=v;w[5].z=v;w[6].z=v;w[7].z=v;E[r]=G;r++}else E[r]=q,r++;m=0;for(s=E.length;m<s;m++){q=E[m];q.shadowMap||(p=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(p=THREE.NearestFilter),q.shadowMap=new THREE.WebGLRenderTarget(q.shadowMapWidth,q.shadowMapHeight,{minFilter:p,magFilter:p,format:THREE.RGBAFormat}),q.shadowMapSize=new THREE.Vector2(q.shadowMapWidth,q.shadowMapHeight),q.shadowMatrix=new THREE.Matrix4);
if(!q.shadowCamera){if(q instanceof THREE.SpotLight)q.shadowCamera=new THREE.PerspectiveCamera(q.shadowCameraFov,q.shadowMapWidth/q.shadowMapHeight,q.shadowCameraNear,q.shadowCameraFar);else if(q instanceof THREE.DirectionalLight)q.shadowCamera=new THREE.OrthographicCamera(q.shadowCameraLeft,q.shadowCameraRight,q.shadowCameraTop,q.shadowCameraBottom,q.shadowCameraNear,q.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}l.add(q.shadowCamera);b.autoUpdateScene&&l.updateMatrixWorld()}q.shadowCameraVisible&&
!q.cameraHelper&&(q.cameraHelper=new THREE.CameraHelper(q.shadowCamera),q.shadowCamera.add(q.cameraHelper));if(q.isVirtual&&G.originalCamera==n){p=n;r=q.shadowCamera;t=q.pointsFrustum;w=q.pointsWorld;i.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(v=0;8>v;v++)u=w[v],u.copy(t[v]),THREE.ShadowMapPlugin.__projector.unprojectVector(u,p),u.applyMatrix4(r.matrixWorldInverse),u.x<i.x&&(i.x=u.x),u.x>k.x&&(k.x=u.x),u.y<i.y&&(i.y=u.y),u.y>k.y&&(k.y=u.y),u.z<i.z&&(i.z=u.z),u.z>k.z&&
(k.z=u.z);r.left=i.x;r.right=k.x;r.top=k.y;r.bottom=i.y;r.updateProjectionMatrix()}r=q.shadowMap;t=q.shadowMatrix;p=q.shadowCamera;p.position.copy(q.matrixWorld.getPosition());p.lookAt(q.target.matrixWorld.getPosition());p.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);q.cameraHelper&&(q.cameraHelper.visible=q.shadowCameraVisible);q.shadowCameraVisible&&q.cameraHelper.update();t.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);t.multiply(p.projectionMatrix);t.multiply(p.matrixWorldInverse);
h.multiplyMatrices(p.projectionMatrix,p.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(r);b.clear();w=l.__webglObjects;q=0;for(r=w.length;q<r;q++)if(v=w[q],t=v.object,v.render=!1,t.visible&&t.castShadow&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||g.intersectsObject(t)))t._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,t.matrixWorld),v.render=!0;q=0;for(r=w.length;q<r;q++)v=w[q],v.render&&(t=v.object,v=v.buffer,C=t.material instanceof THREE.MeshFaceMaterial?
t.material.materials[0]:t.material,u=0<t.geometry.morphTargets.length&&C.morphTargets,C=t instanceof THREE.SkinnedMesh&&C.skinning,u=t.customDepthMaterial?t.customDepthMaterial:C?u?f:e:u?d:c,v instanceof THREE.BufferGeometry?b.renderBufferDirect(p,l.__lights,null,u,v,t):b.renderBuffer(p,l.__lights,null,u,v,t));w=l.__webglObjectsImmediate;q=0;for(r=w.length;q<r;q++)v=w[q],t=v.object,t.visible&&t.castShadow&&(t._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,t.matrixWorld),b.renderImmediateObject(p,
l.__lights,null,c,t))}m=b.getClearColor();s=b.getClearAlpha();a.clearColor(m.r,m.g,m.b,s);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,f,g,h,i,k,l;this.init=function(a){b=a.context;c=a;d=a.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);a=0;e[a++]=-1;e[a++]=-1;e[a++]=0;e[a++]=0;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;a=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,
e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),s=b.createShader(b.FRAGMENT_SHADER),q=b.createShader(b.VERTEX_SHADER),r="precision "+d+" float;\n";b.shaderSource(s,r+a.fragmentShader);b.shaderSource(q,r+a.vertexShader);b.compileShader(s);b.compileShader(q);b.attachShader(m,s);b.attachShader(m,q);b.linkProgram(m);i=m;k={};l={};k.position=b.getAttribLocation(i,"position");k.uv=b.getAttribLocation(i,
"uv");l.uvOffset=b.getUniformLocation(i,"uvOffset");l.uvScale=b.getUniformLocation(i,"uvScale");l.rotation=b.getUniformLocation(i,"rotation");l.scale=b.getUniformLocation(i,"scale");l.alignment=b.getUniformLocation(i,"alignment");l.color=b.getUniformLocation(i,"color");l.map=b.getUniformLocation(i,"map");l.opacity=b.getUniformLocation(i,"opacity");l.useScreenCoordinates=b.getUniformLocation(i,"useScreenCoordinates");l.sizeAttenuation=b.getUniformLocation(i,"sizeAttenuation");l.screenPosition=b.getUniformLocation(i,
"screenPosition");l.modelViewMatrix=b.getUniformLocation(i,"modelViewMatrix");l.projectionMatrix=b.getUniformLocation(i,"projectionMatrix");l.fogType=b.getUniformLocation(i,"fogType");l.fogDensity=b.getUniformLocation(i,"fogDensity");l.fogNear=b.getUniformLocation(i,"fogNear");l.fogFar=b.getUniformLocation(i,"fogFar");l.fogColor=b.getUniformLocation(i,"fogColor");l.alphaTest=b.getUniformLocation(i,"alphaTest")};this.render=function(d,e,f,q){var r=d.__webglSprites,p=r.length;if(p){var t=k,v=l,u=q/
f,f=0.5*f,w=0.5*q;b.useProgram(i);b.enableVertexAttribArray(t.position);b.enableVertexAttribArray(t.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(t.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(t.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.uniformMatrix4fv(v.projectionMatrix,!1,e.projectionMatrix.elements);b.activeTexture(b.TEXTURE0);b.uniform1i(v.map,0);var E=t=0,G=d.fog;G?(b.uniform3f(v.fogColor,G.color.r,G.color.g,G.color.b),
G instanceof THREE.Fog?(b.uniform1f(v.fogNear,G.near),b.uniform1f(v.fogFar,G.far),b.uniform1i(v.fogType,1),E=t=1):G instanceof THREE.FogExp2&&(b.uniform1f(v.fogDensity,G.density),b.uniform1i(v.fogType,2),E=t=2)):(b.uniform1i(v.fogType,0),E=t=0);for(var C,z,K=[],G=0;G<p;G++)C=r[G],z=C.material,C.visible&&0!==z.opacity&&(z.useScreenCoordinates?C.z=-C.position.z:(C._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]));r.sort(a);for(G=0;G<p;G++)C=
r[G],z=C.material,C.visible&&0!==z.opacity&&(z.map&&z.map.image&&z.map.image.width)&&(b.uniform1f(v.alphaTest,z.alphaTest),!0===z.useScreenCoordinates?(b.uniform1i(v.useScreenCoordinates,1),b.uniform3f(v.screenPosition,(C.position.x*c.devicePixelRatio-f)/f,(w-C.position.y*c.devicePixelRatio)/w,Math.max(0,Math.min(1,C.position.z))),K[0]=c.devicePixelRatio,K[1]=c.devicePixelRatio):(b.uniform1i(v.useScreenCoordinates,0),b.uniform1i(v.sizeAttenuation,z.sizeAttenuation?1:0),b.uniformMatrix4fv(v.modelViewMatrix,
!1,C._modelViewMatrix.elements),K[0]=1,K[1]=1),e=d.fog&&z.fog?E:0,t!==e&&(b.uniform1i(v.fogType,e),t=e),e=1/(z.scaleByViewport?q:1),K[0]*=e*u*C.scale.x,K[1]*=e*C.scale.y,b.uniform2f(v.uvScale,z.uvScale.x,z.uvScale.y),b.uniform2f(v.uvOffset,z.uvOffset.x,z.uvOffset.y),b.uniform2f(v.alignment,z.alignment.x,z.alignment.y),b.uniform1f(v.opacity,z.opacity),b.uniform3f(v.color,z.color.r,z.color.g,z.color.b),b.uniform1f(v.rotation,C.rotation),b.uniform2fv(v.scale,K),c.setBlending(z.blending,z.blendEquation,
z.blendSrc,z.blendDst),c.setDepthTest(z.depthTest),c.setDepthWrite(z.depthWrite),c.setTexture(z.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(i,k){var l,n,m,s,q,r;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&i.updateMatrixWorld();k.matrixWorldInverse.getInverse(k.matrixWorld);h.multiplyMatrices(k.projectionMatrix,
k.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();r=i.__webglObjects;l=0;for(n=r.length;l<n;l++)if(m=r[l],q=m.object,m.render=!1,q.visible&&(!(q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)||!q.frustumCulled||g.intersectsObject(q)))q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,q.matrixWorld),m.render=!0;var p;l=0;for(n=r.length;l<n;l++)if(m=r[l],m.render&&(q=m.object,m=m.buffer,!(q instanceof THREE.ParticleSystem)||q.customDepthMaterial))(p=
q.material instanceof THREE.MeshFaceMaterial?q.material.materials[0]:q.material)&&b.setMaterialFaces(q.material),s=0<q.geometry.morphTargets.length&&p.morphTargets,p=q instanceof THREE.SkinnedMesh&&p.skinning,s=q.customDepthMaterial?q.customDepthMaterial:p?s?f:e:s?d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(k,i.__lights,null,s,m,q):b.renderBuffer(k,i.__lights,null,s,m,q);r=i.__webglObjectsImmediate;l=0;for(n=r.length;l<n;l++)m=r[l],q=m.object,q.visible&&(q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,
q.matrixWorld),b.renderImmediateObject(k,i.__lights,null,c,q));l=b.getClearColor();n=b.getClearAlpha();a.clearColor(l.r,l.g,l.b,n);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};
(function(a){a.util=function(){var a=this,c=function(a,b){this[a]=b},d=[].forEach,e=Object.freeze||function(a){return a};return{log:function(a){var b,c;b="string"===typeof a?a:"object"===typeof a?JSON.stringify(a):"ERROR: Use Strings or Objects with log().";c=document.getElementById("log");null!==c?(c.innerHTML+="&nbsp["+(new Date).toTimeString().replace(/.*(\d{2}:\d{2}:\d{2}).*/,"$1")+"] "+b+"<br>",c.scrollTop=c.scrollHeight):console.log(a)},extend:function(a){if(null===a)return a;var b,c=arguments.length,
d,e,l,n;for(b=1;b<c;b++)if(d=arguments[b],null!==d)for(e in d)d.hasOwnProperty(e)&&(l=d.__lookupGetter__(e),n=d.__lookupSetter__(e),l||n?(l&&a.__defineGetter__(e,l),n&&a.__defineSetter__(e,n)):a[e]=d[e]);return a},toType:function(c){return c===a?"global":{}.toString.call(c).match(/\s([a-z|A-Z]+)/)[1].toLowerCase()},createEnum:function(){var a={};d.call(arguments,c,a);return e(a)},innerWidth:function(a){if(a instanceof window.Element)return a.clientWidth;if(a instanceof window.Document||a instanceof
window.Window)return a.width;throw new TypeError(["Could not get innerWidth of given object."]);},innerHeight:function(a){if(a instanceof window.Element)return a.clientHeight;if(a instanceof window.Document||a instanceof window.Window)return a.height;throw new TypeError(["Could not get innerHeight of given object."]);}}}()})(window.webtundra=window.webtundra||{});
(function(a){a.VERSION="0.1 dev";a.NAME="WebTundra";a.ENUMS={};a.ECOMPONENTS={};a.initScene=function(b){try{return new a.SceneManager(b)}catch(c){return console.log(c.stack),!1}};a.initConnection=function(b,c,d){var e;try{e=new a.WSManager(b,c,d)}catch(f){console.error("ERROR:",f.stack)}return e};a.storeComponent=function(a,c,d){var e=this.ECOMPONENTS=this.ECOMPONENTS||{};e.hasOwnProperty(a)||(e[a]={Constructor:d,typeName:c})}})(window.webtundra=window.webtundra||{});
(function(a){var b=!!window.CanvasRenderingContext2D,c;try{c=!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(d){c=!1}var e=a.Detector={canvas:b,webgl:c,workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLError:function(a,b,c){return!this.webgl?(b=window.WebGLRenderingContext?b:c,"element"===a?(a=document.createElement("div"),a.id="webgl-error-message",a.style.fontFamily="monospace",a.style.fontSize=
"13px",a.style.fontWeight="normal",a.style.textAlign="center",a.style.background="#fff",a.style.color="#000",a.style.padding="1.5em",a.style.width="400px",a.style.margin="5em auto 0",a.innerHTML=b,a):b):!1},throwWebGLError:function(a){var a=a||{},a=$.extend({},{parent:document.body,type:"element",gpuErrorMsg:'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.',
browserErrorMsg:'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'},a),b;"element"===a.type?(b=e.getWebGLError(a.type,a.gpuErrorMsg,a.browserErrorMsg),a.parent.appendChild(b)):"alert"===a.type&&alert(e.getWebGLError(a.type,a.gpuErrorMsg,a.browserErrorMsg))}}})(window.webtundra=window.webtundra||{});
(function(a,b){var c={},d=0,e=[];window.URL=window.URL||window.webkitURL;a.Workers={spawnWorker:function(a,b){var h;try{if(5>d)return h=new Worker(a),b&&b.onmessage&&(h.onmessage=b.onmessage),h.id=(Math.random()+""+(new Date).getMilliseconds()).substring(2),c[h.id]=h,d+=1,h;e.push({path:a,onmessage:function(){}});console.log("Added worker to queue...");return e[e.length]}catch(i){return console.error("ERROR: ",i.stack),!1}},spawnInlineWorker:function(a,d){var e,i,k,l;if(d===b)d=(Math.random()+""+
(new Date).getMilliseconds()).substring(2),e=document.createElement("script"),e.type="javascript/worker",e.setAttribute("id","worker_"+d),e.innerText=a,document.body.appendChild(e);else try{if(e=document.querySelector("#worker_"+d),null===e)return console.error("ERROR: ","Worker script with id: "+d+" not found."),!1}catch(n){return console.error("ERROR: ",n.stack),!1}try{i=new Blob([e.textContent]),k=window.URL.createObjectURL(i),l=new Worker(k)}catch(m){return console.error("ERROR: ",m.stack),e.parentNode.removeChild(e),
!1}l.id=(Math.random()+""+(new Date).getMilliseconds()).substring(2);l.url=k;console.log(k);l.scriptId=d;return c[l.id]=l},killWorker:function(a){if(c[a]!==b)try{if(c[a].terminate(),c[a].url!==b&&window.URL.revokeObjectURL(c[a].url),delete c[a],d-=1,console.log("Worker ("+a+") killed."),0<e.length){var g=e.pop();this.spawnWorker(g.path,{onmessage:g.onmessage})}}catch(h){console.log("ERROR: ",h.stack)}},removeScript:function(a){if(a!==b){var d,e,i;try{d=document.querySelector("#worker_"+a);if(null===
d)return console.error("ERROR: ","Worker script with id: "+a+" not found."),!1;d.parentNode.removeChild(d);for(e in c)c.hasOwnProperty(e)&&(i=c[e],i.hasOwnProperty("scriptId")&&i.hasOwnProperty("id")&&i.scriptId===a&&this.killWorker(i.id))}catch(k){return console.error("ERROR: ",k.stack),!1}}else return console.error("ERROR: ","Can not remove script tag with id: "+a),!1;console.log("Removed worker script: "+a);return!0}}})(window.webtundra=window.webtundra||{});
(function(a){function b(a,b,c,d,i){this._listener=b;this._isOnce=c;this.context=d;this._signal=a;this._priority=i||0}function c(a,b){if("function"!==typeof a)throw Error("listener is a required param of {fn}() and should be a Function.".replace("{fn}",b));}function d(){this._bindings=[];this._prevParams=null;var a=this;this.dispatch=function(){d.prototype.dispatch.apply(a,arguments)}}b.prototype={active:!0,params:null,execute:function(a){var b;this.active&&this._listener&&(a=this.params?this.params.concat(a):
a,b=this._listener.apply(this.context,a),this._isOnce&&this.detach());return b},detach:function(){return this.isBound()?this._signal.remove(this._listener,this.context):null},isBound:function(){return!!this._signal&&!!this._listener},isOnce:function(){return this._isOnce},getListener:function(){return this._listener},getSignal:function(){return this._signal},_destroy:function(){delete this._signal;delete this._listener;delete this.context},toString:function(){return"[SignalBinding isOnce:"+this._isOnce+
", isBound:"+this.isBound()+", active:"+this.active+"]"}};d.prototype={VERSION:"1.0.0",memorize:!1,_shouldPropagate:!0,active:!0,_registerListener:function(a,c,d,h){var i=this._indexOfListener(a,d);if(-1!==i){if(a=this._bindings[i],a.isOnce()!==c)throw Error("You cannot add"+(c?"":"Once")+"() then add"+(!c?"":"Once")+"() the same listener without removing the relationship first.");}else a=new b(this,a,c,d,h),this._addBinding(a);this.memorize&&this._prevParams&&a.execute(this._prevParams);return a},
_addBinding:function(a){var b=this._bindings.length;do--b;while(this._bindings[b]&&a._priority<=this._bindings[b]._priority);this._bindings.splice(b+1,0,a)},_indexOfListener:function(a,b){for(var c=this._bindings.length,d;c--;)if(d=this._bindings[c],d._listener===a&&d.context===b)return c;return-1},has:function(a,b){return-1!==this._indexOfListener(a,b)},add:function(a,b,d){c(a,"add");return this._registerListener(a,!1,b,d)},addOnce:function(a,b,d){c(a,"addOnce");return this._registerListener(a,!0,
b,d)},remove:function(a,b){c(a,"remove");var d=this._indexOfListener(a,b);-1!==d&&(this._bindings[d]._destroy(),this._bindings.splice(d,1));return a},removeAll:function(){for(var a=this._bindings.length;a--;)this._bindings[a]._destroy();this._bindings.length=0},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(a){if(this.active){var b=Array.prototype.slice.call(arguments),c=this._bindings.length,d;this.memorize&&(this._prevParams=
b);if(c){d=this._bindings.slice();this._shouldPropagate=!0;do c--;while(d[c]&&this._shouldPropagate&&!1!==d[c].execute(b))}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll();delete this._bindings;delete this._prevParams},toString:function(){return"[Signal active:"+this.active+" numListeners:"+this.getNumListeners()+"]"}};a.Signal=d})(window.webtundra=window.webtundra||{});
THREE.ColladaLoader=function(){function a(a,b,c){for(var a=La.evaluate(a,La,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function b(a){var c=Da.getChildById(a.name,!0),d=null;if(c&&c.keys){d={fps:60,hierarchy:[{node:c,keys:c.keys,sids:c.sids}],node:a,name:"animation_"+a.name,length:0};xa.push(d);for(var e=0,f=c.keys.length;e<f;e++)d.length=Math.max(d.length,c.keys[e].time)}else d=
{hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var c=0,g=b(a.children[e]).hierarchy.length;c<g;c++)d.hierarchy.push({keys:[],sids:[]});return d}function c(a,b,d,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[d];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiplyMatrices(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)c(a.nodes[e],b,d,a.world)}function d(a){var b,e=new THREE.Object3D,
f,g,h,i;for(h=0;h<a.controllers.length;h++){var k=ma[a.controllers[h].url];switch(k.type){case "skin":if(X[k.skin.source]){var n=new m;n.url=k.skin.source;n.instance_material=a.controllers[h].instance_material;a.geometries.push(n);f=a.controllers[h]}else ma[k.skin.source]&&(g=k=ma[k.skin.source],k.morph&&X[k.morph.source]&&(n=new m,n.url=k.morph.source,n.instance_material=a.controllers[h].instance_material,a.geometries.push(n)));break;case "morph":X[k.morph.source]&&(n=new m,n.url=k.morph.source,
n.instance_material=a.controllers[h].instance_material,a.geometries.push(n),g=a.controllers[h]),console.log("ColladaLoader: Morph-controller partially supported.")}}n={};for(h=0;h<a.geometries.length;h++){var p=a.geometries[h],k=p.instance_material,p=X[p.url],r={};b=[];var q=0,s;if(p&&p.mesh&&p.mesh.primitives){0==e.name.length&&(e.name=p.id);if(k)for(i=0;i<k.length;i++){s=k[i];var j=la[s.target],t=ta[j.instance_effect.url].shader.material;if(p.doubleSided){if(!(t in n)){var v=t.clone();v.side=THREE.DoubleSide;
n[t]=v}t=n[t]}t.opacity=!t.opacity?1:t.opacity;r[s.symbol]=q;b.push(t);s=t;s.name=null==j.name||""===j.name?j.id:j.name;q++}k=s||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:p.doubleSided?THREE.DoubleSide:THREE.FrontSide});p=p.mesh.geometry3js;if(1<q){k=new THREE.MeshFaceMaterial(b);for(i=0;i<p.faces.length;i++)b=p.faces[i],b.materialIndex=r[b.daeMaterial]}if(void 0!==f){i=p;j=f;q=void 0;r=ma[j.url];if(!r||!r.skin)console.log("ColladaLoader: Could not find skin controller.");
else if(!j.skeleton||!j.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{b=1E6;q=-b;t=0;v=void 0;for(v in na)for(var w=na[v],u=0;u<w.sampler.length;u++){var z=w.sampler[u];z.create();b=Math.min(b,z.startTime);q=Math.max(q,z.endTime);t=Math.max(t,z.input.length)}b=t;for(var j=Da.getChildById(j.skeleton[0],!0)||Da.getChildBySid(j.skeleton[0],!0),A=z=u=void 0,B=void 0,A=void 0,t=new THREE.Vector3,C=void 0,B=void 0,u=0;u<i.vertices.length;u++)i.vertices[u].applyMatrix4(r.skin.bindShapeMatrix);
for(q=0;q<b;q++){v=[];w=[];for(u=0;u<i.vertices.length;u++)w.push(new THREE.Vector3);c(j,v,q);u=v;z=r.skin;for(B=0;B<u.length;B++)if(A=u[B],C=-1,"JOINT"==A.type){for(var E=0;E<z.joints.length;E++)if(A.sid==z.joints[E]){C=E;break}if(0<=C){E=z.invBindMatrices[C];A.invBindMatrix=E;A.skinningMatrix=new THREE.Matrix4;A.skinningMatrix.multiplyMatrices(A.world,E);A.weights=[];for(E=0;E<z.weights.length;E++)for(var G=0;G<z.weights[E].length;G++){var H=z.weights[E][G];H.joint==C&&A.weights.push(H)}}else throw"ColladaLoader: Could not find joint '"+
A.sid+"'.";}for(u=0;u<v.length;u++)if("JOINT"==v[u].type)for(z=0;z<v[u].weights.length;z++)A=v[u].weights[z],B=A.index,A=A.weight,C=i.vertices[B],B=w[B],t.x=C.x,t.y=C.y,t.z=C.z,t.applyMatrix4(v[u].skinningMatrix),B.x+=t.x*A,B.y+=t.y*A,B.z+=t.z*A;i.morphTargets.push({name:"target_"+q,vertices:w})}}k.morphTargets=!0;k=new THREE.SkinnedMesh(p,k,!1);k.skeleton=f.skeleton;k.skinController=ma[f.url];k.skinInstanceController=f;k.name="skin_"+Ma.length;Ma.push(k)}else if(void 0!==g){i=p;r=g instanceof l?
ma[g.url]:g;if(!r||!r.morph)console.log("could not find morph controller!");else{r=r.morph;for(b=0;b<r.targets.length;b++)q=X[r.targets[b]],q.mesh&&(q.mesh.primitives&&q.mesh.primitives.length)&&(q=q.mesh.primitives[0].geometry,q.vertices.length===i.vertices.length&&i.morphTargets.push({name:"target_1",vertices:q.vertices}));i.morphTargets.push({name:"target_Z",vertices:i.vertices})}k.morphTargets=!0;k=new THREE.Mesh(p,k);k.name="morph_"+sa.length;sa.push(k)}else k=new THREE.Mesh(p,k);1<a.geometries.length?
e.add(k):e=k}}for(h=0;h<a.cameras.length;h++)e=ua[a.cameras[h].url],e=new THREE.PerspectiveCamera(e.fov,e.aspect_ratio,e.znear,e.zfar);e.name=a.name||a.id||"";e.matrix=a.matrix;h=a.matrix.decompose();e.position=h[0];e.quaternion=h[1];e.useQuaternion=!0;e.scale=h[2];ya.centerGeometry&&e.geometry&&(h=THREE.GeometryUtils.center(e.geometry),h.multiply(e.scale),h.applyQuaternion(e.quaternion),e.position.sub(h));for(h=0;h<a.nodes.length;h++)e.add(d(a.nodes[h],a));return e}function e(){this.init_from=this.id=
""}function f(){this.weights=this.targets=this.source=this.method=null}function g(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function h(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function i(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=[];this.matrix=new THREE.Matrix4}function k(){this.type=this.sid="";this.data=[];this.obj=null}function l(){this.url=
"";this.skeleton=[];this.instance_material=[]}function n(){this.target=this.symbol=""}function m(){this.url="";this.instance_material=[]}function s(){this.id="";this.mesh=null}function q(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function r(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function p(){r.call(this);this.vcount=[]}function t(){r.call(this);this.vcount=3}function v(){this.source="";this.stride=
this.count=0;this.params=[]}function u(){this.input={}}function w(){this.semantic="";this.offset=0;this.source="";this.set=0}function E(a){this.id=a;this.type=null}function G(){this.name=this.id="";this.instance_effect=null}function C(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function z(a,b){this.type=a;this.effect=b;this.material=null}function K(a){this.effect=a;this.format=this.init_from=
null}function I(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function H(){this.name=this.id="";this.shader=null;this.surface={};this.sampler={}}function P(){this.url=""}function B(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function S(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=this.sid=this.fullSid=null}function A(a){this.id="";this.animation=a;this.inputs=
[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function J(a){this.targets=[];this.time=a}function O(){this.technique=this.name=this.id=""}function ba(){this.url=""}function ka(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function za(a){for(var a=M(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function ra(a){for(var a=M(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function M(a){return 0<
a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function ca(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function pa(a,b){a.doubleSided=!1;var c=La.evaluate(".//dae:extra//dae:double_sided",b,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function Z(a,b){if(ya.convertUpAxis&&eb!==ya.upAxis)switch(Ua){case "XtoY":var c=a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];
a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function L(a,b){var c=[a[b],a[b+1],a[b+2]];Z(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function qa(a){if(ya.convertUpAxis){var b=[a[0],a[4],a[8]];Z(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];Z(b,-1);a[1]=b[0];a[5]=b[1];a[9]=b[2];b=[a[2],a[6],a[10]];Z(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],
a[1],a[2]];Z(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];Z(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];Z(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];Z(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function rb(a){if(ya.convertUpAxis)switch(a){case "X":switch(Ua){case "XtoY":case "XtoZ":case "YtoX":a="Y";break;case "ZtoX":a="Z"}break;case "Y":switch(Ua){case "XtoY":case "YtoX":case "ZtoX":a=
"X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(Ua){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var La=null,Za=null,Da,Y={},ja={},na={},ma={},X={},la={},ta={},ua={},xa,Ga,Ta,sa,Ma,Ea=THREE.SmoothShading,ya={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},eb="Y",Ua=null;this.parse=function(c,f,g){La=c;f=f||null;void 0!==g&&(c=g.split("/"),c.pop(),Ta=(1>c.length?".":c.join("/"))+"/");if((c=La.evaluate("//dae:asset",
La,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&c.childNodes)for(g=0;g<c.childNodes.length;g++){var i=c.childNodes[g];switch(i.nodeName){case "unit":(i=i.getAttribute("meter"))&&parseFloat(i);break;case "up_axis":eb=i.textContent.charAt(0)}}if(!ya.convertUpAxis||eb===ya.upAxis)Ua=null;else switch(eb){case "X":Ua="Y"===ya.upAxis?"XtoY":"XtoZ";break;case "Y":Ua="X"===ya.upAxis?"YtoX":"YtoZ";break;case "Z":Ua="X"===ya.upAxis?"ZtoX":"ZtoY"}ja=a("//dae:library_images/dae:image",e,"image");
la=a("//dae:library_materials/dae:material",G,"material");ta=a("//dae:library_effects/dae:effect",H,"effect");X=a("//dae:library_geometries/dae:geometry",s,"geometry");na=a("//dae:library_animations/dae:animation",B,"animation");Ga=a(".//dae:library_visual_scenes/dae:visual_scene",h,"visual_scene");sa=[];Ma=[];(c=La.evaluate(".//dae:scene/dae:instance_visual_scene",La,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(c=c.getAttribute("url").replace(/^#/,""),Da=Ga[0<c.length?c:"visual_scene0"]):
Da=null;Za=new THREE.Object3D;for(c=0;c<Da.nodes.length;c++)Za.add(d(Da.nodes[c]).clone());xa=[];b(Za);na=Da=Ga=X=la=null;c={scene:Za,morphs:sa,skins:Ma,animations:xa};f&&f(c);return c};e.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};f.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,
"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new E).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};f.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new w).parse(d))}}return b};
g.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=za(f.textContent);this.bindShapeMatrix=qa(f);break;case "source":f=(new E).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,
b);return this};g.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new w).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};g.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new w).parse(g));break;case "v":c=
ra(g.textContent);break;case "vcount":d=ra(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],k=0;k<h;k++){for(var l={},m=0;m<e.length;m++){var n=e[m],j=c[g+n.offset];switch(n.semantic){case "JOINT":l.joint=j;break;case "WEIGHT":l.weight=b[n.source].data[j]}}i.push(l);g+=e.length}for(k=0;k<i.length;k++)i[k].index=f;this.weights.push(i)}};h.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};h.prototype.getChildBySid=
function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new i).parse(c))}}return this};i.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");
d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};i.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};i.prototype.getChildBySid=function(a,b){if(this.sid==
a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};i.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};i.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=
[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new i).parse(b));break;case "instance_camera":this.cameras.push((new ba).parse(b));break;case "instance_controller":this.controllers.push((new l).parse(b));break;case "instance_geometry":this.geometries.push((new m).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,
"");(b=La.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",La,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new i).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new k).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=[];c=1E6;b=-1E6;for(var d in na)for(var e=na[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];d==this.id&&
(h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var n=this.channels[c],f=n.fullSid,g=n.sampler,h=g.input,p=this.getTransformBySid(n.sid),r;if(n.arrIndices){r=[];b=0;for(var q=n.arrIndices.length;b<q;b++){var t=r,j=b,s=n.arrIndices[b];-1<s&&3>s&&(s=rb(["X","Y","Z"][s]),s={X:0,Y:1,Z:2}[s]);t[j]=s}}else r=rb(n.member);if(p){-1===
a.indexOf(f)&&a.push(f);b=0;for(q=h.length;b<q;b++){for(var t=h[b],n=g.getData(p.type,b),j=null,s=0,u=d.length;s<u&&null==j;s++){var v=d[s];if(v.time===t)j=v;else if(v.time>t)break}if(!j){j=new J(t);s=-1;u=0;for(v=d.length;u<v&&-1==s;u++)d[u].time>=t&&(s=u);t=s;d.splice(-1==t?d.length:t,0,j)}j.addTarget(f,p,r,n)}}else console.log('Could not find transform "'+n.sid+'" in node '+this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(j=d[b],!j.hasTarget(e)){h=d;f=j;r=b;g=e;p=void 0;a:{p=r?
r-1:0;for(p=0<=p?p:p+h.length;0<=p;p--)if(q=h[p],q.hasTarget(g)){p=q;break a}p=null}q=void 0;a:{for(r+=1;r<h.length;r++)if(q=h[r],q.hasTarget(g))break a;q=null}if(p&&q){h=(f.time-p.time)/(q.time-p.time);p=p.getTarget(g);r=q.getTarget(g).data;q=p.data;n=void 0;if("matrix"===p.type)n=q;else if(q.length){n=[];for(t=0;t<q.length;++t)n[t]=q[t]+(r[t]-q[t])*h}else n=q+(r-q)*h;f.addTarget(g,p.transform,p.member,n)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};i.prototype.updateMatrix=function(){this.matrix.identity();
for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};k.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=za(a.textContent);this.convert();return this};k.prototype.convert=function(){switch(this.type){case "matrix":this.obj=qa(this.data);break;case "rotate":this.angle=THREE.Math.degToRad(this.data[3]);case "translate":Z(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":Z(this.data,1);
this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};k.prototype.apply=function(a){switch(this.type){case "matrix":a.multiply(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};k.prototype.update=function(a,b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=
a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===
Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=THREE.Math.degToRad(a);break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=THREE.Math.degToRad(a[3])}}};
l.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=La.evaluate(".//dae:instance_material",c,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new n).parse(d)),d=c.iterateNext()}}return this};
n.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};m.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=La.evaluate(".//dae:instance_material",c,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new n).parse(b)),
b=a.iterateNext();break}}return this};s.prototype.parse=function(a){this.id=a.getAttribute("id");pa(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new q(this)).parse(c)}}return this};q.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==Y[d]&&(Y[d]=(new E(d)).parse(c));break;case "vertices":this.vertices=(new u).parse(c);
break;case "triangles":this.primitives.push((new t).parse(c));break;case "polygons":this.primitives.push((new r).parse(c));break;case "polylist":this.primitives.push((new p).parse(c))}}this.geometry3js=new THREE.Geometry;a=Y[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(L(a,b).clone());for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();
this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};q.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,i,k,l,m=0,n=3,j=0,p=[];for(c=0;c<f.length;c++)switch(g=f[c],n=g.offset+1,j=j<n?n:j,g.semantic){case "TEXCOORD":p.push(g.set)}for(var q=0;q<e.length;++q)for(var r=e[q],t=0;t<r.length;){var s=[],u=[],v=null,w=[],n=a.vcount?a.vcount.length?
a.vcount[m++]:a.vcount:r.length/j;for(c=0;c<n;c++)for(d=0;d<f.length;d++)switch(g=f[d],k=Y[g.source],h=r[t+c*j+g.offset],l=k.accessor.params.length,i=h*l,g.semantic){case "VERTEX":s.push(h);break;case "NORMAL":u.push(L(k.data,i));break;case "TEXCOORD":v=v||{};void 0===v[g.set]&&(v[g.set]=[]);v[g.set].push(new THREE.Vector2(k.data[i],k.data[i+1]));break;case "COLOR":w.push((new THREE.Color).setRGB(k.data[i],k.data[i+1],k.data[i+2]))}if(0==u.length)if(g=this.vertices.input.NORMAL){k=Y[g.source];l=k.accessor.params.length;
c=0;for(h=s.length;c<h;c++)u.push(L(k.data,s[c]*l))}else b.calcNormals=!0;if(!v&&(v={},g=this.vertices.input.TEXCOORD)){p.push(g.set);k=Y[g.source];l=k.accessor.params.length;c=0;for(h=s.length;c<h;c++)i=s[c]*l,void 0===v[g.set]&&(v[g.set]=[]),v[g.set].push(new THREE.Vector2(k.data[i],1-k.data[i+1]))}if(0==w.length&&(g=this.vertices.input.COLOR)){k=Y[g.source];l=k.accessor.params.length;c=0;for(h=s.length;c<h;c++)i=s[c]*l,w.push((new THREE.Color).setRGB(k.data[i],k.data[i+1],k.data[i+2]))}d=null;
g=[];if(3===n)g.push(new THREE.Face3(s[0],s[1],s[2],u,w.length?w:new THREE.Color));else if(4===n)g.push(new THREE.Face4(s[0],s[1],s[2],s[3],u,w.length?w:new THREE.Color));else if(4<n&&ya.subdivideFaces){w=w.length?w:new THREE.Color;for(d=1;d<n-1;)g.push(new THREE.Face3(s[0],s[d],s[d+1],[u[0],u[d++],u[d]],w))}if(g.length){c=0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<p.length;d++)s=v[p[d]],s=4<n?[s[0],s[c+1],s[c+2]]:4===n?[s[0],s[1],s[2],s[3]]:[s[0],s[1],s[2]],
b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(s)}}else console.log("dropped face with vcount "+n+" for geometry with id: "+b.id);t+=j*n}};r.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};r.prototype.parse=function(a){this.material=a.getAttribute("material");this.count=ca(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new w).parse(a.childNodes[b]));
break;case "vcount":this.vcount=ra(c.textContent);break;case "p":this.p.push(ra(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};p.prototype=Object.create(r.prototype);t.prototype=Object.create(r.prototype);v.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=ca(a,"count",0);this.stride=ca(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");
d.type=c.getAttribute("type");this.params.push(d)}}return this};u.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new w).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};w.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=ca(a,"set",-1);this.offset=ca(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=
0);return this};E.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=M(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case "float_array":this.data=za(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=ra(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=M(c.textContent);
this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new v).parse(c.childNodes[d]);break}}}return this};E.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=qa(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+
b.type+".")}return a};G.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new P).parse(a.childNodes[b]);break}return this};C.prototype.isColor=function(){return null==this.texture};C.prototype.isTexture=function(){return null!=this.texture};C.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=
za(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};C.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&
(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};z.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=
(new C).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=La.evaluate(".//dae:float",c,ka,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};z.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=
this[c];if(d instanceof C)if(d.isTexture()){if(d=this.effect.sampler[d.texture].source)if(d=ja[this.effect.surface[d].init_from])d=THREE.ImageUtils.loadCompressedTexture(Ta+d.init_from),d.wrapS=THREE.RepeatWrapping,d.wrapT=THREE.RepeatWrapping,d.repeat.x=1,d.repeat.y=1,d.minFilter=d.magFilter=THREE.LinearFilter,d.flipY=!1,a.map=d,"emission"===c&&(a.emissive=16777215)}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;
case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=ya.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];1!==this[c]&&(a.envMap=ya.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],a.alphaTest=0.5,b=!0)}a.shading=Ea;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case "constant":void 0!=a.emissive&&(a.color=a.emissive);this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":void 0!=
a.diffuse&&(a.color=a.diffuse);this.material=new THREE.MeshPhongMaterial(a);break;default:void 0!=a.diffuse&&(a.color=a.diffuse),this.material=new THREE.MeshLambertMaterial(a)}return this.material};K.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};I.prototype.parse=
function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};H.prototype.create=function(){if(null==
this.shader)return null};H.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");pa(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};H.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface[b]=
(new K(this)).parse(d);break;case "sampler2D":this.sampler[b]=(new I(this)).parse(d);break;case "extra":break;default:console.log(d.nodeName)}}};H.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "image":d=(new e).parse(d);ja[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};
H.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new z(c.nodeName,this)).parse(c)}}};P.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};B.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];
if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new B).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);break;case "source":d=(new E).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new A(this)).parse(c));break;case "channel":this.channel.push((new S(this)).parse(c))}}return this};S.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,
"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};A.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new w).parse(c))}}return this};A.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=
this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};A.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":Z(c,
-1);break;case "scale":Z(c,1)}else 4===this.strideOut&&"matrix"===a&&Z(c,-1)}else c=this.output[b];return c};J.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};J.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};J.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};J.prototype.hasTarget=
function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};J.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+f),f=0>f?0:1;if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,
d.member)}};O.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};O.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=
c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=
g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};ba.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this}};
(function(a){var b=function(a,b){var d=b.section;switch(d){case "none":if("}"===a)throw Error(["OgreXMLParser: Unexpected '}' at: "+d]);return c(a,d,b);case "material":if("}"===a)console.log("Material parsed");else return c(a,d,b);break;case "technique":if("}"===a)b.section="material";else return c(a,d,b);break;case "pass":if("}"===a)b.section="technique";else return c(a,d,b);break;case "texture_unit":if("}"===a)b.section="pass";else return c(a,d,b)}return!1},c=function(a,b,c){a=a.split(" ");if(f.hasOwnProperty(b))return b=
f[b],b.hasOwnProperty(a[0])?b[a[0]](a,c):!0;throw Error(["OgreXMLParser: Unsupported material section: "+b]);},d=function(a,b){var c=a[0].replace(/\s+/g,""),d;g.hasOwnProperty(c)&&(d=a.slice(1).map(parseFloat),3<=d.length&&("specular"===c?b.material.specular.setRGB(d[0],d[1],d[2]):"diffuse"===c?b.material.color.setRGB(d[0],d[1],d[2]):"emissive"===c?b.material.emissive.setRGB(d[0],d[1],d[2]):"ambient"===c&&b.material.ambient.setRGB(d[0],d[1],d[2])));return!1},e=function(a){a=a[0].replace(/\s+/g,"");
console.log("Parsing texture param:",a);return!1},f={none:{material:function(a,b){console.log("Parsing material root section...");b.material.name=2<=a.length?a[1].replace(/\s+/g,""):"unnamed";b.section="material";return!0}},material:{receive_shadows:function(a,b){var c=!1;2<=a.length&&"on"===a[1].replace(/\s+/g,"")&&(c=!0);b.material.receiveShadow=c;return!1},technique:function(a,b){console.log("Parsing technique section...");b.section="technique";return!0}},technique:{pass:function(a,b){console.log("Parsing pass section...");
b.section="pass";return!0}},pass:{ambient:d,diffuse:d,specular:d,emissive:d,texture_unit:function(a,b){console.log("Parsing texture_unit section...");b.section="texture_unit";return!0}},texture_unit:{texture:e,tex_address_mode:e,scale:e,colour_op:e}},g={specular:0,diffuse:1,emissive:2,ambient:3};a.OgreXMLParser={parseMeshXML:function(a){var b,c=[],d,e,f;b=a.documentElement;if("mesh"!==b.tagName)throw Error(["OgreXMLParser: Invalid root node."]);b=a.evaluate("//submeshes/submesh",b,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,
null);for(f=b.snapshotLength;f--;){d=b.snapshotItem(f);e=new THREE.Geometry;var g=a,q=e,r=d.attributes;if(4!==r.length)throw Error(["OgreXMLParser: <submesh> had invalid amount of attributes."]);if("triangle_list"!==r[3].nodeValue)throw Error(["OgreXMLParser: Unsupported operation type wanted for submesh. Use 'triangle_list' for now."]);for(var r=q,p=void 0,t=void 0,v=void 0,u=void 0,p=g.evaluate("//faces/face",d,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null),u=p.snapshotLength;u--;){t=p.snapshotItem(u).attributes;
v=t.length;if(3!==v)throw Error(["OgreXMLParser: Error in a face."]);r.faces[u]=new THREE.Face3(parseInt(t[0].nodeValue,10),parseInt(t[1].nodeValue,10),parseInt(t[2].nodeValue,10))}var w=u=p=r=t=v=v=t=r=void 0,w=u=u=void 0,r=d.getElementsByTagName("geometry")[0],t=parseInt(r.getAttribute("vertexcount"),10),v=r.getElementsByTagName("vertexbuffer")[0],r=v.hasAttribute("positions")&&"true"===v.getAttribute("positions"),p=v.hasAttribute("normals")&&"true"===v.getAttribute("normals");v.hasAttribute("colours_diffuse")&&
v.getAttribute("colours_diffuse");v.hasAttribute("colours_specular")&&v.getAttribute("colours_specular");if(v.hasAttribute("texture_coords")){u=parseInt(v.getAttribute("texture_coords"),10);if(v.hasAttribute("texture_coord_dimensions_0")){if(w=parseInt(v.getAttribute("texture_coord_dimensions_0"),10),2!==w)throw Error(["OgreXMLParser: Only 2-dimensional uv-coordinates for texture channels are supported."]);}else throw Error(["OgreXMLParser: Texture coordinate dimensions are needed if texture channel is defined."]);
if(1<u)throw Error(["OgreXMLParser: One texture channel per vertexbuffer is supported."]);}for(v=g.evaluate("//vertex",v,null,XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);t--;)w=v.snapshotItem(t),r&&(u=w.getElementsByTagName("position")[0].attributes,q.vertices[t]=new THREE.Vector3(parseFloat(u[0].nodeValue),parseFloat(u[1].nodeValue),parseFloat(u[2].nodeValue))),p&&(u=w.getElementsByTagName("normal")[0].attributes,q.faceVertexUvs[0][t]=new THREE.Vector2(parseFloat(u[0].nodeValue),parseFloat(u[1].nodeValue)));
console.log(e);c.push(e)}return c},parseMaterial:function(a){var c,d,e,f,g,s;s=new THREE.MeshPhongMaterial;f=!1;e={section:"none",material:s};a=a.replace(/^ +|\s+$/gm,"");a=a.split("\n");c=a.length;console.log(a);for(g=0;g<c;g++)d=a[g],!d||-1!==d.indexOf("//")?console.log("skipping line: "+d):f?("{"!==d&&console.log("OgreXMLParser: Expected a '{', but got:",d),f=!1):f=b(d,e);delete e.material;return s}}})(window.webtundra=window.webtundra||{});
function parseUri(a){for(var b=parseUri.options,a=b.parser[b.strictMode?"strict":"loose"].exec(a),c={},d=14;d--;)c[b.key[d]]=a[d]||"";c[b.q.name]={};c[b.key[12]].replace(b.q.parser,function(a,d,g){d&&(c[b.q.name][d]=g)});return c}
parseUri.options={strictMode:!1,key:"source protocol authority userInfo user password host port relative path directory file query anchor".split(" "),q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};
function parseUrl(a){a=parseUri(a);if(a.queryKey){var b=a.queryKey;console.log(a);b.ip&&(_connection.ip=b.ip);b.port&&(_connection.port=b.port);b.mobile&&(window.mobile="1"===b.mobile);b.url&&(_connection.customUrl=b.url)}}
function insertToUrl(a,b){var a=encodeURIComponent(a),b=encodeURIComponent(b),c=window.location.search.substr(1).split("&");if(""==c)window.history.replaceState("Object","Title","?"+a+"="+b);else{for(var d=c.length,e;d--;)if(e=c[d].split("="),e[0]===a){e[1]=b;c[d]=e.join("=");break}0>d&&(c[c.length]=[a,b].join("="));window.history.replaceState("Object","Title","?"+c.join("&"))}}
function parseStorageUrl(a){a=parseUri(a);-1===a.directory.indexOf("/",a.directory.length-1)&&(a.directory+="/");_connection.useProxy&&(a.host="chiru.cie.fi:8000/?"+a.host);_connection.storageUrl="http://"+a.host+a.directory}(function(a){a.MeshParser={}})(window.webtundra=window.webtundra||{});
(function(a){a.Controls=function(b){var c={freelook:a.FreeLookControls,avatar:a.AvatarControls};return{setControls:function(a){a&&(b.controls=a)},createController:function(a,e){var f=!1;c.hasOwnProperty(e)&&(f=new c[e](a,b));return f}}}})(window.webtundra=window.webtundra||{});
(function(a){a.FreeLookControls=function(b,c){function d(a,b){return function(){b.apply(a,arguments)}}this.domElement=c.container;this.placeable=b;this.object=new THREE.Object3D;this.target=new THREE.Vector3(0,0,0);this.movementSpeed=1;this.lookSpeed=0.5;this.autoForward=!1;this.heightSpeed=this.lookVertical=!0;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.verticalMin=0;this.verticalMax=Math.PI;this.autoSpeedFactor=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);
var e=0,f=0,g=0,h=0,i=0,k=0,l=0,n=0,m=0,s=0,q=0,r=0,p=!1,t=!1,v=!1,u=!1,w=!1,E=!1,G=!1,C=!1,z=0,K=THREE.Math.radToDeg,I=THREE.Math.degToRad,H=this.target,P=this.object.position,B=this.object.rotation;this.getMousePosition=function(a){var b,c;this.domElement===document?(b=a.pageX-q,c=a.pageY-r):(b=a.pageX-this.domElement.offsetLeft-q,c=a.pageY-this.domElement.offsetTop-r);a.mouseX=b;a.mouseY=c};this.computeTargetPosition=function(){l=n+e*this.lookSpeed;this.lookVertical&&(i=k+f*this.lookSpeed);i=Math.max(-85,
Math.min(85,i));m=I(90-i);s=I(l);H.x=P.x+100*Math.sin(m)*Math.cos(s);H.y=P.y+100*Math.cos(m);H.z=P.z+100*Math.sin(m)*Math.sin(s)};this.handleResize=function(){this.domElement===document?(q=window.innerWidth/2,r=window.innerHeight/2):(q=this.domElement.offsetWidth/2,r=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();this.getMousePosition(a);g=a.mouseX;h=a.mouseY;this.computeTargetPosition();p=!0};
this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();p=!1;k=i;n=l;e=f=0};this.onMouseMove=function(a){a.preventDefault();a.stopPropagation();p&&(this.getMousePosition(a),e=a.mouseX-g,f=a.mouseY-h,this.computeTargetPosition())};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:t=!0;break;case 37:case 65:u=!0;break;case 40:case 83:v=!0;break;case 39:case 68:w=!0;break;case 32:case 82:E=!0;break;case 70:G=!0;break;case 81:C=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:t=
!1;break;case 37:case 65:u=!1;break;case 40:case 83:v=!1;break;case 39:case 68:w=!1;break;case 32:case 82:E=!1;break;case 17:case 70:G=!1}};this.update=function(a){C||(p&&(this.object.lookAt(H),this.placeable.setRotation(K(B.x),K(B.y),K(B.z))),z=a*this.movementSpeed,t&&(this.object.translateZ(-z),this.placeable.setPosition(P.x,P.y,P.z)),v&&(this.object.translateZ(z),this.placeable.setPosition(P.x,P.y,P.z)),u&&(this.object.translateX(-z),this.placeable.setPosition(P.x,P.y,P.z)),w&&(this.object.translateX(z),
this.placeable.setPosition(P.x,P.y,P.z)),E&&(this.object.translateY(z),this.placeable.setPosition(P.x,P.y,P.z)),G&&(this.object.translateY(-z),this.placeable.setPosition(P.x,P.y,P.z)))};this.setPlaceable=function(b){b instanceof a.ECPlaceable&&(this.placeable=b,this.object=b.getSceneNode())};this.reset=function(){var a=this.placeable.getSceneNode();this.object.position.copy(a.position);this.object.rotation.copy(a.rotation);this.object.scale.copy(a.scale)};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",d(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",d(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",d(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",d(this,this.onKeyUp),!1);this.handleResize()}})(window.webtundra=window.webtundra||{});
(function(a){a.AvatarControls=function(){}})(window.webtundra=window.webtundra||{});
THREE.PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);a.position.set(0,0,0);c.position.set(0,-16,0);var d=new THREE.Object3D;d.position.set(0,30,0);d.add(c);var e=!1,f=!1,g=!1,h=!1,i=0,k=0,l=!1,n=!1,m=new THREE.Vector3,s=Math.PI/2,q=function(a){if(!1!==b.enabled){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y-=0.002*(a.movementX||a.mozMovementX||a.webkitMovementX||0);c.rotation.x-=0.002*e;c.rotation.x=Math.max(-s,Math.min(s,c.rotation.x))}},r=function(a){switch(a.keyCode){case 38:case 87:e=
!0;break;case 37:case 65:g=!0;break;case 40:case 83:f=!0;break;case 39:case 68:h=!0;break;case 32:!0===n&&(m.y+=3),n=!1}},p=function(a){switch(a.keyCode){case 38:case 87:e=!1;break;case 37:case 65:g=!1;break;case 40:case 83:f=!1;break;case 39:case 68:h=!1}};document.addEventListener("mousemove",q,!1);document.addEventListener("keydown",r,!1);document.addEventListener("keyup",p,!1);document.addEventListener("touchmove",function(a){if(1===a.touches.length){var b=a.touches[0];a.movementX=i-b.clientX;
a.movementY=k-b.clientY;q(a)}},!1);document.addEventListener("touchstart",function(a){1===a.touches.length?(a=a.touches[0],i=a.clientX,k=a.clientY):2===a.touches.length&&(a.keyCode=38,r(a))},!1);document.addEventListener("touchend",function(a){1===a.touches.length?k=i=0:2===a.touches.length&&(a.keyCode=38,p(a))},!1);this.enabled=!1;this.getObject=function(){return d};this.isOnObject=function(a){n=l=a};this.update=function(a){!1!==b.enabled&&(a*=0.05,m.x+=0.08*-m.x*a,m.z+=0.08*-m.z*a,m.y-=0.15*a,e&&
(m.z-=0.15*a),f&&(m.z+=0.15*a),g&&(m.x-=0.12*a),h&&(m.x+=0.12*a),!0===l&&(m.y=Math.max(0,m.y)),d.translateX(m.x),d.translateY(m.y),d.translateZ(m.z),8>d.position.y&&(m.y=0,d.position.y=8,n=!0))}};
(function(a,b){var c=a.WSManager=function(b,c,f){var g=a.util.extend,f=g({},{reconnectInterval:8E3,timeout:8E3,allowReconnect:!0},f);this.ws=null;this.url="ws://"+b+":"+c;this.host=b;this.port=c;this.reconnecting=!1;this.reconnectTimer=this.connectTimer=null;this.reconnAttempt=0;this.allowReconnect=f.allowReconnect;this.reconnectInterval=f.reconnectInterval;this.timeout=f.timeout;this.callbacks={};window.addEventListener("beforeunload",function(){this.ws.onclose=function(){};this.ws.close();this.ws=
null}.bind(this),!1)};c.prototype.connect=function(){this.ws=null;try{if(window.WebSocket!==b)this.ws=new window.WebSocket(this.url);else if(window.MozWebSocket!==b)this.ws=new window.MozWebSocket(this.url);else{alert("This Browser does not support WebSockets.  Use newest version of Google Chrome, FireFox or Opera. ");return}}catch(a){console.error("ERROR:",a.stack);return}this.ws.onopen=function(){clearTimeout(this.reconnectTimer);this.reconnectTimer=null;this.reconnAttempt=0;this.reconnecting=!1;
this.triggerEvent("connected",this.host+":"+this.port)}.bind(this);this.ws.onmessage=function(a){console.log(a.data);this.parseMessage(a.data)}.bind(this);this.ws.onclose=function(a){clearTimeout(this.reconnectTimer);this.reconnectTimer=null;if(!this.reconnecting){var b="failed";a.wasClean&&(b="closed");this.triggerEvent("disconnected",{url:this.host+":"+this.port,reason:b,code:a.code})}!a.wasClean&&this.allowReconnect&&(this.reconnecting=!0,console.log("Reconnecting in "+this.reconnectInterval/1E3+
" seconds..."),this.reconnectTimer=setTimeout(function(){if(null!==this.ws&&(this.ws.readyState!==this.ws.OPEN||this.ws.readyState!==this.ws.CONNECTING))this.reconnAttempt+=1,this.triggerEvent("reconnecting",{host:this.url,attempt:this.reconnAttempt}),this.connect(this.url)}.bind(this),this.reconnectInterval))}.bind(this);this.ws.onerror=function(a){this.triggerEvent("error",a)}};c.prototype.stopReconnect=function(){null!==this.reconnectTimer&&clearTimeout(this.reconnectTimer);null!==this.connectTimer&&
clearTimeout(this.connectTimer);this.reconnecting=!1};c.prototype.parseMessage=function(a){a=JSON.parse(a);this.processEvent(a)};c.prototype.processEvent=function(a){a.event&&a.data&&this.triggerEvent(a.event,a.data)};c.prototype.bindEvent=function(a,b){this.callbacks[a]=this.callbacks[a]||[];this.callbacks[a].push(b);return this};c.prototype.triggerEvent=function(a,c){var f=this.callbacks[a],g;if(f===b)console.log("Error: Received an unknown event: "+a);else for(g=0;g<f.length;g++)f[g](c)}})(window.webtundra=
window.webtundra||{});
(function(a){(a.Entity=function(b,c,d){this.componentAdded=new a.Signal;this.componentRemoved=new a.Signal;this.entityActions={};this.components={};this.id=b;this.largestId=0;this.name=c||null;this.local=d||!1}).prototype={getComponent:function(a){if(0!==Object.keys(this.components).length)for(var c in this.components)if(this.components[c]instanceof a)return this.components[c];return!1},getComponentById:function(a){return this.components.hasOwnProperty(a)?this.components[a]:!1},addComponent:function(a,
c){c=c||a.id||this.largestId;this.components.hasOwnProperty(c+"")||(a.setParentEnt(this),this.components[c]=a,this.componentAdded.dispatch(a))},removeComponent:function(a){this.componentRemoved.dispatch(a);return!1}}})(window.webtundra=window.webtundra||{});
(function(a,b){var c,d,e;e=a.util;d=a.ENUMS.ATTRIBUTES=a.util.createEnum("none","string","int","real","color","float2","float3","float4","bool","uint","quat","assetref","assetreflist","entityref","qvariant","qvariantlist","transform","qpoint","numattributetypes");c=a.Attribute=function(a,b,d,e){this.type=parseInt(d||-1,10);this.name=c.parseName(a);this.val=c.parse(b,this.type);this.setter=e||this.name};c.parse=function(a,c){var e=null;if(a!==b)switch(c){case d.real:case d.int:case d.uint:"number"===
typeof a&&(e=a);break;case d.float3:case d.float4:case d.quat:case d.color:a instanceof Array&&(e=a);break;case d.bool:"boolean"===typeof a&&(e=a);break;case d.transform:a instanceof Array&&(e=a);break;case d.string:case d.assetref:"string"===typeof a&&(e=a);break;case d.assetreflist:a instanceof Array&&(e=a)}return e};c.parseName=function(a){return a.replace(/\s/g,"").toLowerCase()};c.prototype={updateValue:function(a){a!==b&&(a=c.parse(a,this.type),null!==a&&(a instanceof Array&&this.val instanceof
Array?e.extend(this.val,a):this.val=a))}}})(window.webtundra=window.webtundra||{});
(function(a,b){var c;c=a.ENUMS.ATTRIBUTES;(a.Component=function(a){if(!a)throw Error("Component: Could not get SceneManager object.");this.sceneManager=a;this.parent=this.id=null;this.attributes={};this.attributeMap={};this.name="";this.typeName=this.typeId=null}).prototype={onParentAdded:function(){},onAttributeUpdated:function(){},createAttribute:function(d,e,f,g){var h;h=this.attributes;if(!d||e===b||!f)return null;"string"===typeof f?c.hasOwnProperty(f)?f=c[f]:(console.warn("Got unknown type for attribute",
d,". Setting type to None."),f=c.none):"number"!==typeof f&&(console.warn("Got unknown type for attribute",d,". Setting type to None."),f=c.none);d=a.Attribute.parseName(d);"string"!==typeof g&&(g=d);if(h.hasOwnProperty(d))return h[d];e=new a.Attribute(d,e,f,g);h[d]=e;h=Object.getPrototypeOf(this);h.hasOwnProperty(g)||Object.defineProperty(h,g,{set:function(a){var b;b=this.attributes;b.hasOwnProperty(d)&&(b=b[d],b.updateValue(a),this.onAttributeUpdated(b))},get:function(){var a=this.attributes;return a.hasOwnProperty(d)?
a[d].val:!1}});return e},updateAttribute:function(c,e,f){var g=this.attributeMap,h;if(c&&e){if(g.hasOwnProperty(c))c=g[c];else{if(f===b)return;h=a.Attribute.parseName(f);f=this.attributes;if(f.hasOwnProperty(h))c=g[c]=f[h].setter;else return}this[c]=e}},getAttribute:function(a){for(var b in this.attributes)if(this.attributes[b].name===a)return this.attributes[b].val;return!1},setParentEnt:function(a){return a?(this.parent=a,this.onParentAdded(this.parent),!0):!1}}})(window.webtundra=window.webtundra||
{});
(function(a){var b,c;c=a.util;b=a.ECAvatar=function(b){a.Component.call(this,b);this.createAttribute("appearanceref","default_avatar.avatar","assetref","appearanceRef");this.mesh=b.ecManager.createComponent("EC_Mesh");this.defaultPath="/default_assets/models/"};a.storeComponent(1,"EC_Avatar",b);b.prototype=c.extend(Object.create(a.Component.prototype),{onParentAdded:function(){this.setupAppearance()},onAttributeUpdated:function(a){"appearanceref"===a.name&&"default_avatar.avatar"!==this.appearanceRef&&(this.defaulPath=
"")},setupAppearance:function(){var a=this.mesh;a.storage=this.defaultPath;a.meshRef=this.appearanceRef;this.parent.addComponent(a,-100)},onMeshLoaded:function(){this.setupAvatar()},setupAvatar:function(){}})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;c=a.util;b=a.ECEnvironmentLight=function(b){a.Component.call(this,b);this.createAttribute("sunlightcolor",[0.639,0.639,0.639,1],"color","sunColor");this.createAttribute("ambientlightcolor",[0.364,0.364,0.364,1],"color","ambientColor");this.createAttribute("sunlightdirectionvector",[-1,-1,-1],"float3","sunDirection");this.createAttribute("sunlightcastshadows",!0,"bool","sunCastShadows");this.createAttribute("brightness",1,"real");this.sunLight=null};a.storeComponent(8,"EC_Light",
b);b.prototype=c.extend(Object.create(a.Component.prototype),{onAttributeUpdated:function(a){a=a.name;"sunlightcolor"===a||"sunlightdirectionvector"===a||"sunlightcastshadows"===a||"brightness"===a?this.updateSunLight():"ambientlightcolor"===a&&this.updateAmbientLight()},onParentAdded:function(){this.createSunLight();this.updateAmbientLight()},createSunLight:function(){var a=this.sunLight,b=this.sceneManager;b&&!a&&(a=this.sunLight=new THREE.DirectionalLight,this.updateSunLight(),b.addToScene(a))},
updateSunLight:function(){var a=this.sunLight,b=this.sunColor,c=this.sunDirection;a&&(a.color.setRGB(b[0],b[1],b[2]),this.sunCastShadows&&(a.castShadow=!0,a.shadowDarkness=0.6,a.shadowBias=6.5E-5,a.shadowCascade=!1,a.shadowCascadeCount=3,a.shadowCascadeNearZ=[-1,0.9,0.975],a.shadowCascadeFarZ=[0.9,0.975,1],a.shadowCascadeWidth=[1024,1024,1024],a.shadowCascadeHeight=[1024,1024,1024],a.shadowCascadeBias=[5E-5,6.5E-5,6.5E-5],a.shadowMapWidth=1024,a.shadowMapHeight=1024),a.position.set(-1E3*c[0],-1E3*
c[1],-1E3*c[2]),a.target.position.set(0,0,0))},removeSunLight:function(){var a=this.sunLight,b=this.sceneManager;b&&a&&(b.remove(a),this.sunLight=null)},updateAmbientLight:function(){var a=this.sceneManager,b=this.ambientColor;a&&b&&a.setAmbientLight(b)}});(a.ECLight=function(b){a.Component.call(this,b)}).prototype=c.extend(Object.create(a.Component.prototype),{})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;c=a.util;b=a.ECSky=function(b){a.Component.call(this,b);this.createAttribute("texture","rex_sky_front.dds rex_sky_back.dds rex_sky_left.dds rex_sky_right.dds rex_sky_top.dds rex_sky_bot.dds".split(" "),"assetreflist","textureRefs");this.createAttribute("distance",3,"real");this.createAttribute("orientation",[0,0,0,1],"quat");this.createAttribute("drawfirst",!0,"bool","drawFirst");this.defaultTextures="rex_sky_front.dds rex_sky_back.dds rex_sky_left.dds rex_sky_right.dds rex_sky_top.dds rex_sky_bot.dds".split(" ");
this.defaultPath="default_assets/textures/";this.textureAssets=[];this.skyBox=this.cubeTexture=null};a.storeComponent(10,"EC_Sky",b);b.prototype=c.extend(Object.create(a.Component.prototype),{onAttributeUpdated:function(a){if("texture"===a.name){var b=this.defaultTextures;this.textureRefs.every(function(a){return-1!==b.indexOf(a)})||(console.warn("EC_Sky: Using different skybox textures than default. Trying to request them from remote storage."),this.defaultPath="")}},onParentAdded:function(){this.getTextures()},
onTextureAssetLoaded:function(){6===this.textureAssets.length&&(console.log("ECSky: All textures loaded. Creating Sky..."),this.cubeTexture=this.createCubeTexture(this.textureAssets),this.createSky(this.cubeTexture))},disableSky:function(){},createSky:function(a){var b,c;c=this.distance;b=THREE.ShaderLib.cube;a.mapping=new THREE.UVMapping;b.uniforms.tCube.value=a;a=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:b.uniforms,depthWrite:!1,side:THREE.BackSide});
c=new THREE.CubeGeometry(c,c,c);c=this.skyBox=new THREE.Mesh(c.clone(),a);this.sceneManager.addSkyBox(c)},createCubeTexture:function(a){function b(a){if("string"!==typeof a&&""!==a)throw Error(["ECSky: Invalid SkyBox texture name!"]);if(-1!==a.indexOf("front"))return 0;if(-1!==a.indexOf("back"))return 1;if(-1!==a.indexOf("top"))return 2;if(-1!==a.indexOf("bot"))return 3;if(-1!==a.indexOf("left"))return 4;if(-1!==a.indexOf("right"))return 5;throw Error(["ECSky: Invalid SkyBox texture: "+a]);}var c=
[],g=new THREE.CompressedTexture,h,i,k;for(k=a.length;k--;)h=a[k],i=h.name,i=b(i),c[i]={format:h.format,mipmaps:h.mipmaps,width:h.width,height:h.height};g.generateMipmaps=!1;g.image=c;g.flipY=!1;g.format=h.format;g.needsUpdate=!0;g.minFilter=g.magFilter=THREE.LinearFilter;g.anisotropy=4;return g},getTextures:function(){var a,b,c=this.textureRefs;b=c.length;var g=this.sceneManager.assetManager,h=this.textureAssets,i=this;if(!g)throw Error(["ECSky: Could not get AssetManager object, texture load failed;"]);
if(c&&6===b)for(var k=function(a){a&&(h.push(a),i.onTextureAssetLoaded(a))};b--;)if(a=g.requestAsset(c[b],"texture",this.defaultPath))a.add(k);else if(a=g.getAsset(c[b],"texture",this.defaultPath))h.push(a),i.onTextureAssetLoaded(a)}})})(window.webtundra=window.webtundra||{});
(function(a){var b,c,d,e;c=a.util;d=c.innerWidth;e=c.innerHeight;b=a.ECCamera=function(b){a.Component.call(this,b);this.createAttribute("upvector",[0,1,0],"float3","upVector");this.createAttribute("nearplane",0.1,"real","nearPlane");this.createAttribute("farplane",2E3,"real","farPlane");this.createAttribute("verticalfov",45,"real","fov");this.createAttribute("aspectratio","","string","aspectRatio");this.placeable=this.camera=null;this.attached=!1};a.storeComponent(15,"EC_Camera",b);b.prototype=c.extend(Object.create(a.Component.prototype),
{onParentAdded:function(){this.initialize()},onAttributeUpdated:function(){},initialize:function(){var b=this;!(!this.parent instanceof a.Entity)&&!this.camera&&(this.camera=new THREE.PerspectiveCamera,this.setFarClipDist(this.farPlane||5E3),this.setNearClipDist(this.nearPlane||0.1),this.setFov(this.fov||45),this.setAspectRatio(this.getAspectRatio()),this.parent.componentAdded.add(function(c){c instanceof a.ECPlaceable&&(b.placeable=c,b.attachCamera())}))},attachCamera:function(){var a;a=this.placeable;
var b=this.camera;if(!(this.attached||null===a))if(a=a.getSceneNode())a.add(b),this.attached=!0},detachCamera:function(){var a;a=this.placeable;var b=this.camera;if(this.attached&&null!==a&&(a=a.getSceneNode())&&b)a.remove(b),this.attached=!1},setActive:function(){var a=this.sceneManager;this.camera&&(this.parent&&this.attached)&&a.setMainCamera(this.camera)},isActive:function(){},getAspectRatio:function(){var a=this.aspectRatio,b;if(a&&"string"===typeof a){if(-1===a.indexOf(":"))return b=parseFloat(a),
0<b?a:1;b=a.split(":");if(2===b.length)return a=parseFloat(b[0]),b=parseFloat(b[0]),0<a&&0<b?a/b:1}return this.sceneManager&&this.sceneManager.container?d(this.sceneManager.container)/e(this.sceneManager.container):1},getCameraObject:function(){return this.camera?this.camera:!1},setFov:function(a){var b=this.camera;"number"===typeof a&&b&&(b.fov=a,b.updateProjectionMatrix())},setFarClipDist:function(a){var b=this.camera;"number"===typeof a&&b&&(b.far=a,b.updateProjectionMatrix())},setNearClipDist:function(a){var b=
this.camera;"number"===typeof a&&b&&(b.near=a,b.updateProjectionMatrix())},setAspectRatio:function(a){var b=this.camera;"number"===typeof a&&b&&(b.aspect=a,b.updateProjectionMatrix())},startViewTracking:function(){},isEntityVisible:function(){},visibleEntities:function(){}})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;b=a.util;c=a.ECMesh=function(b){a.Component.call(this,b);this.createAttribute("transform",[0,0,0,0,0,0,1,1,1],"transform");this.createAttribute("meshref","","assetref","meshRef");this.createAttribute("castshadows",!1,"bool","castShadows");this.meshChanged=new a.Signal;this.materialChanged=new a.Signal;this.placeable=null;this.offsetNode=new THREE.Object3D;this.storage=this.mesh=null;this.attached=!1};a.storeComponent(17,"EC_Mesh",c);c.prototype=b.extend(Object.create(a.Component.prototype),
{onAttributeUpdated:function(){},onParentAdded:function(){var b=this;this.autoSetPlaceable()?this.loadMesh():this.parent.componentAdded.add(function(c){c instanceof a.ECPlaceable&&(b.loadMesh(),console.log("ECMesh: ECplaceable addded to parent entity",b.parent.id))})},onMeshLoaded:function(){this.setMesh()},setPlaceable:function(b){b instanceof a.ECPlaceable&&(this.placeable=b)},autoSetPlaceable:function(){if(null!==this.parent){var b;b=this.parent.getComponent(a.ECPlaceable);this.setPlaceable(b);
return!0}return!1},loadMesh:function(){var a=this.meshRef,b=this.sceneManager.assetManager,c=this,g;if(""!==a)if(g=b.requestAsset(a,"mesh",this.storage))g.add(function(a){a&&(c.mesh=a,c.onMeshLoaded())});else if(a=b.getAsset(a))this.mesh=a,this.onMeshLoaded()},prepareMesh:function(a){var b=new THREE.Object3D,c,g;if(!a)return!1;for(g=a.length;g--;)c=new THREE.Mesh(a[g][0],a[g][1]),c.castShadow=this.castShadows,c.receiveShadow=this.castShadows,c.material.side=THREE.DoubleSide,b.add(c);return b},setMesh:function(){var a,
b;if(null===this.mesh)return!1;null===this.placeable&&this.autoSetPlaceable();b=this.offsetNode;a=this.prepareMesh(this.mesh);if(!a)return!1;b.add(a);a=this.transform;b.position.set(a[0],a[1],a[2]);b.rotation.set(a[3]*(Math.PI/180),a[4]*(Math.PI/180),a[5]*(Math.PI/180));b.scale.set(a[6],a[7],a[8]);this.attachMesh();return!0},attachMesh:function(){var a,b,c;b=this.placeable;c=this.offsetNode;if(!(this.attached||null===b))if(a=b.getSceneNode())c.visible=b.visible,a.add(c),this.attached=!0},detachFromScene:function(){var a;
a=this.placeable;this.attached&&null!==a&&(a=a.getSceneNode(),this.sceneManager.removeFromScene(a),this.attached=!1)}})})(window.webtundra=window.webtundra||{});(function(a){var b,c;c=a.util;b=a.ECMaterial=function(b){a.Component.call(this,b)};a.storeComponent(31,"EC_Material",b);b.prototype=c.extend(Object.create(a.Component.prototype),{})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;c=a.util;b=a.ECPlaceable=function(b){a.Component.call(this,b);this.createAttribute("transform",[0,0,0,0,0,0,1,1,1],"transform");this.createAttribute("showboundingbox",!1,"bool");this.createAttribute("visible",!0,"bool");this.parentPlaceable=this.parentMesh=null;this.attached=!1;this.sceneNode=new THREE.Object3D};a.storeComponent(20,"EC_Placeable",b);b.prototype=c.extend(Object.create(a.Component.prototype),{onComponentAdded:function(){},onParentAdded:function(){this.attach()},
onAttributeUpdated:function(a){"transform"===a.name&&this.updateSceneNode()},attach:function(){var a;if(a=this.parent)a.placeable=this,console.log("Adding placeable to scene"),this.updateSceneNode(),this.sceneManager.addToScene(this.sceneNode),this.attached=!0},setVisibility:function(a){this.sceneNode.visible=a},getSceneNode:function(){return null!==this.sceneNode?this.sceneNode:!1},setPosition:function(a,b,c){var g=this.transform;g[0]=a;g[1]=b;g[2]=c;this.transform=g},setRotation:function(a,b,c){var g=
this.transform;g[3]=a;g[4]=b;g[5]=c;this.transform=g},setScale:function(a,b,c){var g=this.transform;g[6]=a;g[7]=b;g[8]=c;this.transform=g},updateSceneNode:function(){var a=this.transform,b=this.sceneNode;b.position.set(a[0],a[1],a[2]);b.rotation.set(a[3]*(Math.PI/180),a[4]*(Math.PI/180),a[5]*(Math.PI/180));b.scale.set(a[6],a[7],a[8])}})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;c=a.util;b=a.ECName=function(b){a.Component.call(this,b);this.createAttribute("name","","string");this.createAttribute("description","","string")};a.storeComponent(26,"EC_Name",b);b.prototype=c.extend(Object.create(a.Component.prototype),{onAttributeUpdated:function(){},onParentAdded:function(b){b instanceof a.Entity&&"string"===typeof this.name&&(b.name=this.name)}})})(window.webtundra=window.webtundra||{});
(function(a){var b,c;c=a.util;b=a.ECControls=function(b){a.Component.call(this,b);this.controller=this.placeable=null;this.container=b.container};a.storeComponent(100,"EC_Controls",b);b.prototype=c.extend(Object.create(a.Component.prototype),{onParentAdded:function(){var b=this;this.parent.componentAdded.add(function(c){c instanceof a.ECPlaceable&&(b.placeable=c,b.parent.controls=b)})},onAttributeUpdated:function(){},setControls:function(a){var b=this.placeable,c=this.sceneManager.controlManager;
b&&(c&&!this.isActive())&&"freelook"===a&&(this.name="freelook",this.controller=c.createController(b,a))},getController:function(){return this.controller?this.controller:!1},isActive:function(){var a=this.controller,b=this.sceneManager.controls;return a&&b?a===b:!1},setActive:function(){!this.isActive()&&this.controller&&this.sceneManager.controlManager.setControls(this.controller)}})})(window.webtundra=window.webtundra||{});
(function(a,b){var c=a.util;(a.ECManager=function(b){this.sceneManager=b;this.entities={};this.localEntities={};this.numLocalEntities=0;this.entityCreated=new a.Signal;var b=this.connection=b.websocket,c=this;if(b)b.bindEvent("EntityAdded",function(b){a.util.log("Got new Entity ( id: "+b.entityID+", name: "+b.name+", components: "+b.numReplComps+" )");c.parseEntity(b)}),b.bindEvent("EntityRemoved",function(b){a.util.log("Server removed Entity "+JSON.toString(b))}),b.bindEvent("ComponentsRemoved",
function(a){console.log("ComponentsRemoved:");console.log(a)}),b.bindEvent("ComponentsAdded",function(a){console.log("ComponentsAdded:");console.log(a)}),b.bindEvent("AttributesRemoved",function(a){console.log("AttributesRemoved:");console.log(a)}),b.bindEvent("AttributesAdded",function(a){console.log("AttributesAdded:");console.log(a)}),b.bindEvent("AttributesChanged",function(a){var b=a.attrs,d,i,k,l;if(a=c.getEntity(a.entityId))for(k in b)if(l=a.getComponentById(k))for(i in d=b[k],d)l.updateAttribute(i,
d[i])});else throw Error(["ECManager: Could not get WebSocket connection pointer."]);}).prototype={createEntity:function(b,c){var f=this.entities;return!f.hasOwnProperty(b)?(f[b]=new a.Entity(b,c),f[b].componentAdded.add(function(a){console.log("Component",a.id,"added to entity:",a.parent.id)}),f[b]):!1},createLocalEntity:function(b,e){var f=this.localEntities,g,h=this.numLocalEntities,i,k;g=new a.Entity(this.numLocalEntities,b,!0);this.numLocalEntities+=1;if(e&&"array"===c.toType(e))for(i=e.length;i--;)(k=
this.createComponent(e[i]))&&g.addComponent(k,i);f[h]=g;return f[h]},parseEntity:function(a){var b,c,g=a.components;if(b=a.entityID){a=this.createEntity(b,a.name);if(g)for(c in g)(b=this.parseComponent(c,g[c]))&&a.addComponent(b,c);this.entityCreated.dispatch(a)}},parseComponent:function(a,b){var c,g,h;if(!a||!b.typeId||null===b.attributes||0===Object.keys(b.attributes).length)return!1;h=b.attributes;c=b.typeId;g=b.name||"";if(c=this.createComponent(c)){c.id=a;c.name=g;for(var i in h)c.updateAttribute(i,
h[i].val,h[i].name)}return c},createComponent:function(b){var c=a.ECOMPONENTS,f,g;if(!c)return console.warn("ECManager: Component storage namespace.ECOMPONENTS was not available, unable to create component object."),!1;if(f=!isNaN(b)){if(c.hasOwnProperty(b+""))return new c[b].Constructor(this.sceneManager);console.warn("ECManager: Error while creating component; Unknown type id:",b);return!1}if(b instanceof a.Component)return b(this.sceneManager);if(!f&&-1!==b.indexOf("EC_")){for(g in c)if(c[g].typeName===
b)return new c[g].Constructor(this.sceneManager);console.warn("ECManager: Error while creating component; Unknown type name:",b)}else console.warn("ECManager: Error while creating component; Unknown type:",b);return!1},addEntity:function(a){var b=a.id,c=this.entities;c.hasOwnProperty(b)||(c[b]=a)},removeEntity:function(){},getEntity:function(a,c){var f,g,h;if(a===b)return!1;f=c?this.localEntities:this.entities;if(isNaN(a)){if("string"===typeof a)for(g in f)if(h=f[g],h.name===a)return h}else if(f.hasOwnProperty(a))return f[a];
return!1}}})(window.webtundra=window.webtundra||{});
(function(a,b){var c=a.util,d=a.AssetManager=function(b){this.meshType="dae";this.remoteStorage=b;this.meshAssets={};this.textureAssets={};this.materialAssets={};var d=[],g={};this.removeRequest=function(a){g.hasOwnProperty(a)&&(d.splice(d.indexOf(a),1),delete g[a]);0===d.length&&console.log("All requests processed!")};this.createRequest=function(b){var e,k,l=new a.Signal,n=this;e=c.extend({},{url:"",responseType:"",mimeType:null,assetName:null,assetType:null},b);if(null===e.assetName||null===e.assetType)return!1;
if(g.hasOwnProperty(e.assetName))return g[e.assetName].signal;k=new XMLHttpRequest;g[e.assetName]={request:k,signal:l};d.push(e.assetName);k.open("GET",e.url,!0);k.responseType=e.responseType;k.assetName=e.assetName;k.url=e.url;"string"===typeof e.mimeType&&k.overrideMimeType(e.mimeType);k.onreadystatechange=function(){4===k.readyState&&(200===k.status?(console.log(e.assetName,"downloaded."),k.downloaded=!0,n.processAsset(k,l,e.assetName,e.assetType)):404===k.status&&console.log("error","File not found from: "+
e.url))};k.onabort=function(){};k.onerror=function(){console.log("error","Failed to download: "+e.url)};try{console.log("Requesting: "+e.url),k.send(null)}catch(m){console.log("error",m.message+", when requesting: "+e.url)}return l}};d.prototype.setRemoteStorage=function(a){console.log("Setting remote asset storage to: "+a);c.log("Setting remote asset storage to: "+a);this.remoteStorage=a};d.prototype.cleanFileName=function(a,b){var c=a.split("//").pop().split("."),d=c.slice(-1)[0];b&&d.toLowerCase()!==
b&&(c[c.length-1]=b,a=c.join("."));return a};d.prototype.requestAsset=function(a,b,c,d){var i="",k=null;if("string"===typeof b)switch(b=b.toLowerCase(),b){case "mesh":if(this.meshAssets.hasOwnProperty(a))return console.log("Mesh:",a,"already downloaded"),!1;if(!document.implementation||!document.implementation.createDocument)throw Error(["AssetManager: Your browser can't process XML!"]);a=this.cleanFileName(a,this.meshType);k="text/xml";break;case "material":case "texture":if(this.textureAssets.hasOwnProperty(a))return console.log("texture:",
a,"already downloaded"),!1;i="arraybuffer";a=this.cleanFileName(a);break;default:throw Error(["AssetManager: Invalid asset type requested: "+b]);}else throw Error(["AssetManager: Requested asset type must be a string."]);d||(d="");if(!c||"string"!==typeof c)c=this.remoteStorage;return this.createRequest({url:c+d+a,responseType:i,mimeType:k,assetName:a,assetType:b})};d.prototype.processAsset=function(a,b,c,d){switch(d){case "mesh":this.processMesh(a,b,c);break;case "texture":this.processTexture(a,
b,c);break;case "material":this.processMaterial(a,b,c)}};d.prototype.processMesh=function(c,d,g){var h=new THREE.ColladaLoader,i=c.responseXML,k=[];console.log("Processing",g,"...");c=h.parse(i,b,c.url);console.log("Asset parsed. Post-processing...");c=c.scene;c.traverse(function(a){a instanceof THREE.Mesh&&k.push([a.geometry.clone(),a.material.clone()])});this.meshAssets.hasOwnProperty(g)||(k.name=g,this.meshAssets[g]=k);d instanceof a.Signal&&d.dispatch(this.meshAssets[g]);this.removeRequest(g);
h=c=c=null;console.log("Processing complete.")};d.prototype.processTexture=function(b,c,d){b=THREE.ImageUtils.parseDDS(b.response,!0);b.name=d;this.textureAssets.hasOwnProperty(d)||(this.textureAssets[d]=b);c instanceof a.Signal&&c.dispatch(this.textureAssets[d]);this.removeRequest(d)};d.prototype.processMaterial=function(){};d.prototype.getAsset=function(a){return this.meshAssets.hasOwnProperty(a)?this.meshAssets[a]:!1}})(window.webtundra=window.webtundra||{});
(function(a){a.CameraManager=function(a){function c(a){var b;b=a.toLowerCase();return(a=d.getEntity(b,!0))?a:"freelookcamera"===b?(a=d.createLocalEntity("freelookcamera",["EC_Placeable","EC_Name","EC_Camera","EC_Controls"]),console.warn("CameraManager: Creating FreelookCamera."),console.warn(a),a.name="freelookcamera",a.controls.setControls("freelook"),b=a.controls.getController(),b.movementSpeed=20,a):!1}var d;if(!a)throw Error("CameraManager: Could not get SceneManager object.");d=a.ecManager;return{onEntityCreated:function(a){var b=
a.name;b&&"freelookcameraspawnpos"===b.toLowerCase()&&(console.warn("Got freelook camera spawn position"),b=c("freelookcamera"),b.placeable.transform=a.placeable.transform,b.controls.getController().reset())},createCameraEntity:c}}})(window.webtundra=window.webtundra||{});
(function(a,b){var c=a.util.extend,d=a.util.innerWidth,e=a.util.innerHeight,f=a.SceneManager=function(b){b=c({},{eulerOrder:"ZYX",container:document.body,websocket:null,remoteStorage:"http://127.0.0.1:8000/"},b);THREE.Object3D.defaultEulerOrder=this.eulerOrder=b.eulerOrder;this.time=Date.now();this.clock=new THREE.Clock;this.container=b.container;this.skyBoxCamera=this.mainCamera=this.skyBoxScene=this.scene=this.renderer=this.controls=null;this.remoteStorage=b.remoteStorage;this.websocket=b.websocket;
this.assetManager=new a.AssetManager(this.remoteStorage);this.ecManager=new a.ECManager(this);this.cameraManager=new a.CameraManager(this);this.controlManager=new a.Controls(this);this.init()};f.prototype.renderLoop=function(){var a=this,b=this.clock,c=this.controls,d=this.renderer;(function n(){window.requestAnimationFrame(n);c.update(b.getDelta());a.skyBoxCamera.rotation.setEulerFromRotationMatrix(a.mainCamera.parent.matrixWorld,THREE.Object3D.defaultEulerOrder);d.render(a.skyBoxScene,a.skyBoxCamera);
d.render(a.scene,a.mainCamera)})()};f.prototype.windowResize=function(){var a=function(){this.renderer.setSize(d(this.container),e(this.container));this.mainCamera.aspect=d(this.container)/e(this.container);this.mainCamera.updateProjectionMatrix();this.skyBoxCamera.aspect=this.mainCamera.aspect;this.skyBoxCamera.updateProjectionMatrix()}.bind(this);window.addEventListener("resize",a,!1);return{stop:function(){window.removeEventListener("resize",a)}}};f.prototype.addToScene=function(a){this.scene.add(a)};
f.prototype.removeFromScene=function(a){this.scene.remove(a)};f.prototype.addSkyBox=function(a){var b=this.skyBoxScene;b&&!this.getSceneObject(function(a){return"skyBox"===a.name},b)&&(a.name="skyBox",b.add(a))};f.prototype.removeSkyBox=function(){var a=this.skyBoxScene,b;this.skyBoxScene&&(b=this.getSceneObject(function(a){return"skyBox"===a.name},a))&&a.remove(b)};f.prototype.setAmbientLight=function(b){if("array"===a.util.toType(b)){var c=this.scene,d;c&&((d=this.getSceneObject(function(a){return a instanceof
THREE.AmbientLight}))?d.color.setRGB(b[0],b[1],b[2]):(d=new THREE.AmbientLight,d.color.setRGB(b[0],b[1],b[2]),c.add(d)))}};f.prototype.setMainCamera=function(c){var d;c===b?d=this.cameraManager.createCameraEntity("freelookcamera"):c instanceof a.Entity&&(d=c);if(d&&(c=d.getComponent(a.ECCamera)))c=c.getCameraObject(),(d=d.controls)&&d.setActive(),c instanceof THREE.PerspectiveCamera&&(this.mainCamera=c)};f.prototype.getSceneObject=function(a,b){if("function"!==typeof a)return!1;b||(b=this.scene);
var c=b.children,d=b.children.length,e;if(c)for(e=d;e--;)if(d=c[e],a(d))return d;return!1};f.prototype.init=function(){var a,b,c=this.container,f=this.websocket,l=this.assetManager,n=this.ecManager,m=this.cameraManager;b=this.scene=new THREE.Scene;this.skyBoxScene=new THREE.Scene;(this.skyBoxCamera=new THREE.PerspectiveCamera(35,d(c)/e(c),1,1E4)).lookAt(b.position);this.setMainCamera();a=this.renderer=new THREE.WebGLRenderer({antialias:!0,clearColor:8900331,clearAlpha:1,preserveDrawingBuffer:!1});
a.autoClear=!1;a.gammaInput=!0;a.gammaOutput=!0;a.setSize(d(this.container),e(this.container));c.appendChild(this.renderer.domElement);this.windowResize();n.entityCreated.add(m.onEntityCreated,m);f&&f.bindEvent("RemoteStorage",function(a){l.setRemoteStorage(a)});a=new THREE.AxisHelper(50);a.position.y=10;b.add(a)};f.prototype.start=function(){try{if(!this.websocket)throw Error(["Invalid WebSocket connection."]);this.renderLoop();this.websocket.connect()}catch(a){console.error("SceneManager:",a.stack)}}})(window.webtundra=
window.webtundra||{});(function(){})(window.webtundra=window.webtundra||{});
